import * as React from 'react';
import { IDimensions, IRect } from 'react-viewport-utils';
interface IProps {
    disableResizing: boolean;
    disabled: boolean;
    style: React.CSSProperties | null;
    stickyRef: React.RefObject<any>;
    children: (props: {
        isRecalculating: boolean;
    }) => React.ReactNode;
    className?: string;
    forwardRef?: React.RefObject<any>;
}
interface IState {
    isRecalculating: boolean;
    isWaitingForRecalculation: boolean;
    stickyHeight: number | null;
    stickyWidth: number | null;
    clientSize: string | null;
}
declare class StickyPlaceholder extends React.Component<IProps, IState> {
    static defaultProps: {
        style: {};
    };
    state: IState;
    calculateSize: () => any;
    handleDimensionsUpdate: ({ dimensions }: {
        dimensions: IDimensions;
    }, stickyRect: IRect) => void;
    render(): JSX.Element;
}
export default StickyPlaceholder;
