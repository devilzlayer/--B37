{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Downloads/usportproject 2/src/pwa/view/profile/Password.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Wrap, Service } from \"./\";\nimport { FormField } from \"../../../component/\";\n\nconst PasswordRegular = ({\n  setStatus\n}) => {\n  const refpassword = useRef(null);\n  const refpassword_new = useRef(null);\n  const refpassword_newok = useRef(null);\n  const oldPassword = Service.User.read().password;\n  const [form, setForm] = useState({\n    password: \"\",\n    password_new: \"\",\n    password_newok: \"\"\n  });\n  const [active, setActive] = useState(false);\n  const [message, setMessage] = useState({\n    className: null,\n    source: null,\n    message: null\n  });\n  const fields = [{\n    field: {\n      label: \"原密码\"\n    },\n    input: {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      required: true,\n      placeholder: \"原密码\",\n      ref: refpassword\n    }\n  }, {\n    field: {\n      label: \"新密码\"\n    },\n    input: {\n      id: \"password_new\",\n      name: \"password_new\",\n      type: \"password\",\n      placeholder: \"新密码\",\n      ref: refpassword_new\n    }\n  }, {\n    field: {\n      label: \"验证新密码\"\n    },\n    input: {\n      id: \"password_newok\",\n      name: \"password_newok\",\n      type: \"password\",\n      placeholder: \"验证新密码\",\n      ref: refpassword_newok\n    }\n  }];\n\n  const notify = (state, source, message) => {\n    setMessage({\n      className: state ? \"valid\" : \"invalid\",\n      source,\n      message\n    });\n  };\n\n  useEffect(() => {\n    if (form.password !== \"\" && form.password_new !== \"\" && form.password_newok !== \"\" && form.password_new === form.password_newok && oldPassword === form.password) setActive(true);else setActive(false);\n  }, [form, oldPassword]);\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (message.message && message.source === name) {\n      setMessage({\n        className: null,\n        source: null,\n        message: null\n      });\n    }\n\n    setForm(f => ({ ...f,\n      [name]: value\n    }));\n  };\n\n  const update = () => {\n    if (!form.password) {\n      return void notify(false, \"password\", \"未输入当前密码!\");\n    }\n\n    if (!form.password_new) {\n      return void notify(false, \"password_new\", \"未输入新密码!\");\n    }\n\n    if (form.password_new !== form.password_newok) {\n      return void notify(false, \"password_new\", \"输入的密码不匹配!\");\n    }\n\n    setStatus(0);\n    console.info(\"You're updating account password:\", form);\n    Service.User.updatePassword({ ...Service.User.read(),\n      ...form\n    }).promise.then(r => {\n      console.info(\"✅ You have successfully updated account password:\", r.info);\n      notify(true, \"password\", r.info);\n      setStatus(1);\n    }, e => {\n      console.warn(\"Unable to update account password:\", e);\n      notify(false, \"password\", e);\n      setStatus(1);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, message.message ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `message ${message.className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, message.message) : null, fields.map((f, i) => /*#__PURE__*/React.createElement(FormField, {\n    key: i,\n    field: f.field,\n    input: { ...f.input,\n      onChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-button ${active && \"form-button-active\"}`,\n    onClick: update,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"\\u63D0\\u4EA4\"))));\n};\n\nconst Password = () => {\n  const history = useHistory();\n  const [status, setStatus] = useState(1);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: \"profile-password\",\n    name: \"\\u5B89\\u5168\\u4E2D\\u5FC3\",\n    sublevel: [true, () => history.goBack()],\n    isLoading: !status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"passsword-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PasswordRegular, {\n    setStatus: s => setStatus(s),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Password;","map":{"version":3,"sources":["/Users/cramj/Downloads/usportproject 2/src/pwa/view/profile/Password.jsx"],"names":["React","useState","useRef","useEffect","useHistory","Wrap","Service","FormField","PasswordRegular","setStatus","refpassword","refpassword_new","refpassword_newok","oldPassword","User","read","password","form","setForm","password_new","password_newok","active","setActive","message","setMessage","className","source","fields","field","label","input","id","name","type","required","placeholder","ref","notify","state","onChange","e","value","target","f","update","console","info","updatePassword","promise","then","r","warn","map","i","Password","history","status","goBack","s"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Wrap, Service } from \"./\";\r\nimport { FormField } from \"../../../component/\";\r\n\r\nconst PasswordRegular = ({ setStatus }) => {\r\n  const refpassword = useRef(null);\r\n  const refpassword_new = useRef(null);\r\n  const refpassword_newok = useRef(null);\r\n\r\n  const oldPassword = Service.User.read().password;\r\n\r\n  const [form, setForm] = useState({\r\n    password: \"\",\r\n    password_new: \"\",\r\n    password_newok: \"\",\r\n  });\r\n\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [message, setMessage] = useState({\r\n    className: null,\r\n    source: null,\r\n    message: null,\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      field: {\r\n        label: \"原密码\",\r\n      },\r\n      input: {\r\n        id: \"password\",\r\n        name: \"password\",\r\n        type: \"password\",\r\n        required: true,\r\n        placeholder: \"原密码\",\r\n        ref: refpassword,\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"新密码\",\r\n      },\r\n      input: {\r\n        id: \"password_new\",\r\n        name: \"password_new\",\r\n        type: \"password\",\r\n        placeholder: \"新密码\",\r\n        ref: refpassword_new,\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"验证新密码\",\r\n      },\r\n      input: {\r\n        id: \"password_newok\",\r\n        name: \"password_newok\",\r\n        type: \"password\",\r\n        placeholder: \"验证新密码\",\r\n        ref: refpassword_newok,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const notify = (state, source, message) => {\r\n    setMessage({\r\n      className: state ? \"valid\" : \"invalid\",\r\n      source,\r\n      message,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      form.password !== \"\" &&\r\n      form.password_new !== \"\" &&\r\n      form.password_newok !== \"\" &&\r\n      form.password_new === form.password_newok &&\r\n      oldPassword === form.password\r\n    )\r\n      setActive(true);\r\n    else setActive(false);\r\n  }, [form, oldPassword]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (message.message && message.source === name) {\r\n      setMessage({\r\n        className: null,\r\n        source: null,\r\n        message: null,\r\n      });\r\n    }\r\n\r\n    setForm((f) => ({\r\n      ...f,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const update = () => {\r\n    if (!form.password) {\r\n      return void notify(false, \"password\", \"未输入当前密码!\");\r\n    }\r\n\r\n    if (!form.password_new) {\r\n      return void notify(false, \"password_new\", \"未输入新密码!\");\r\n    }\r\n\r\n    if (form.password_new !== form.password_newok) {\r\n      return void notify(false, \"password_new\", \"输入的密码不匹配!\");\r\n    }\r\n\r\n    setStatus(0);\r\n\r\n    console.info(\"You're updating account password:\", form);\r\n\r\n    Service.User.updatePassword({\r\n      ...Service.User.read(),\r\n      ...form,\r\n    }).promise.then(\r\n      (r) => {\r\n        console.info(\r\n          \"✅ You have successfully updated account password:\",\r\n          r.info\r\n        );\r\n\r\n        notify(true, \"password\", r.info);\r\n\r\n        setStatus(1);\r\n      },\r\n      (e) => {\r\n        console.warn(\"Unable to update account password:\", e);\r\n\r\n        notify(false, \"password\", e);\r\n\r\n        setStatus(1);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fields\">\r\n        {message.message ? (\r\n          <div className={`message ${message.className}`}>\r\n            {message.message}\r\n          </div>\r\n        ) : null}\r\n        {fields.map((f, i) => (\r\n          <FormField\r\n            key={i}\r\n            field={f.field}\r\n            input={{\r\n              ...f.input,\r\n              onChange,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"submit\">\r\n        <div\r\n          className={`form-button ${active && \"form-button-active\"}`}\r\n          onClick={update}\r\n        >\r\n          <span>提交</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Password = () => {\r\n  const history = useHistory();\r\n\r\n  const [status, setStatus] = useState(1);\r\n\r\n  return (\r\n    <Wrap\r\n      className=\"profile-password\"\r\n      name=\"安全中心\"\r\n      sublevel={[true, () => history.goBack()]}\r\n      isLoading={!status}\r\n    >\r\n      <div className=\"passsword-wrap\">\r\n        <PasswordRegular setStatus={(s) => setStatus(s)} />\r\n      </div>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n"]},"metadata":{},"sourceType":"module"}