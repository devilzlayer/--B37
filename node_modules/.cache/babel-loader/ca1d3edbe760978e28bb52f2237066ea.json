{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/ubet-project (1)/src/component/UISelect.js\";\nimport React, { useState } from 'react';\nimport useClickOutside from 'click-outside-hook';\nimport '../assets/scss/UISelect.scss';\n\nfunction UISelect(props) {\n  const ref = useClickOutside(() => toggleVisibility(false));\n  const {\n    value,\n    options,\n    placeholder,\n    onSelect\n  } = props;\n  const [visible, toggleVisibility] = useState(false);\n\n  const select = (option, e) => {\n    onSelect(option);\n    toggleVisibility(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `ui-select${visible ? ' opened' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui-select--input\",\n    onClick: e => toggleVisibility(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: value ? ' has-value' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, value || placeholder)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `ui-select--list${visible ? ' shown' : ''}`,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, options.map((option, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"list--item\",\n    onClick: e => select(option, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, option))));\n}\n\nexport default UISelect;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/component/UISelect.js"],"names":["React","useState","useClickOutside","UISelect","props","ref","toggleVisibility","value","options","placeholder","onSelect","visible","select","option","e","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,OAAO,8BAAP;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAEzB,QAAMC,GAAG,GAAGH,eAAe,CAAC,MAAMI,gBAAgB,CAAC,KAAD,CAAvB,CAA3B;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAA4CN,KAAlD;AAEA,QAAM,CAAEO,OAAF,EAAWL,gBAAX,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMW,MAAM,GAAG,CAACC,MAAD,EAASC,CAAT,KAAe;AAE7BJ,IAAAA,QAAQ,CAACG,MAAD,CAAR;AAEAP,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEA,GAND;;AAQA,sBACC;AAAK,IAAA,SAAS,EAAG,YAAWK,OAAO,GAAG,SAAH,GAAe,EAAG,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,OAAO,EAAEG,CAAC,IAAIR,gBAAgB,CAAC,IAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAEC,KAAK,GAAG,YAAH,GAAkB,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CA,KAAK,IAAIE,WAAxD,CADD,CADD,eAIC;AAAK,IAAA,SAAS,EAAG,kBAAiBE,OAAO,GAAG,QAAH,GAAc,EAAG,EAA1D;AAA6D,IAAA,GAAG,EAAEN,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,OAAO,CAACO,GAAR,CAAY,CAACF,MAAD,EAASG,CAAT,kBAAe;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,SAAS,EAAC,YAAvB;AAAoC,IAAA,OAAO,EAAEF,CAAC,IAAIF,MAAM,CAACC,MAAD,EAASC,CAAT,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsED,MAAtE,CAA3B,CADF,CAJD,CADD;AAWA;;AAED,eAAeV,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport useClickOutside from 'click-outside-hook';\r\n\r\nimport '../assets/scss/UISelect.scss';\r\n\r\nfunction UISelect (props) {\r\n\r\n\tconst ref = useClickOutside(() => toggleVisibility(false));\r\n\r\n\tconst { value, options, placeholder, onSelect } = props;\r\n\r\n\tconst [ visible, toggleVisibility ] = useState(false);\r\n\r\n\tconst select = (option, e) => {\r\n\r\n\t\tonSelect(option);\r\n\r\n\t\ttoggleVisibility(false);\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`ui-select${visible ? ' opened' : ''}`}>\r\n\t\t\t<div className=\"ui-select--input\" onClick={e => toggleVisibility(true)}>\r\n\t\t\t\t<span className={value ? ' has-value' : null}>{value || placeholder}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={`ui-select--list${visible ? ' shown' : ''}`} ref={ref}>\r\n\t\t\t\t{options.map((option, i) => <div key={i} className=\"list--item\" onClick={e => select(option, e)}>{option}</div>)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default UISelect;\r\n"]},"metadata":{},"sourceType":"module"}