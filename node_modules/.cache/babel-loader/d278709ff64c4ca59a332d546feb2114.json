{"ast":null,"code":"import _regeneratorRuntime from \"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState } from './internal/types';\nvar uniqueId;\nexport function getUniqueId() {\n  if (!uniqueId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      uniqueId = RNDeviceInfo.uniqueId;\n    } else {\n      uniqueId = 'unknown';\n    }\n  }\n\n  return uniqueId;\n}\nexport function syncUniqueId() {\n  return _syncUniqueId.apply(this, arguments);\n}\n\nfunction _syncUniqueId() {\n  _syncUniqueId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(Platform.OS === 'ios')) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.next = 3;\n            return RNDeviceInfo.syncUniqueId();\n\n          case 3:\n            uniqueId = _context4.sent;\n            _context4.next = 7;\n            break;\n\n          case 6:\n            uniqueId = getUniqueId();\n\n          case 7:\n            return _context4.abrupt(\"return\", uniqueId);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _syncUniqueId.apply(this, arguments);\n}\n\nvar instanceId;\nexport function getInstanceId() {\n  return _getInstanceId.apply(this, arguments);\n}\n\nfunction _getInstanceId() {\n  _getInstanceId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (instanceId) {\n              _context5.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context5.next = 7;\n              break;\n            }\n\n            _context5.next = 4;\n            return RNDeviceInfo.getInstanceId();\n\n          case 4:\n            instanceId = _context5.sent;\n            _context5.next = 8;\n            break;\n\n          case 7:\n            instanceId = 'unknown';\n\n          case 8:\n            return _context5.abrupt(\"return\", instanceId);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getInstanceId.apply(this, arguments);\n}\n\nexport function getInstanceIdSync() {\n  if (!instanceId) {\n    if (Platform.OS === 'android') {\n      instanceId = RNDeviceInfo.getInstanceIdSync();\n    } else {\n      instanceId = 'unknown';\n    }\n  }\n\n  return instanceId;\n}\nvar serialNumber;\nexport function getSerialNumber() {\n  return _getSerialNumber.apply(this, arguments);\n}\n\nfunction _getSerialNumber() {\n  _getSerialNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (serialNumber) {\n              _context6.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context6.next = 7;\n              break;\n            }\n\n            _context6.next = 4;\n            return RNDeviceInfo.getSerialNumber();\n\n          case 4:\n            serialNumber = _context6.sent;\n            _context6.next = 8;\n            break;\n\n          case 7:\n            serialNumber = 'unknown';\n\n          case 8:\n            return _context6.abrupt(\"return\", serialNumber);\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getSerialNumber.apply(this, arguments);\n}\n\nexport function getSerialNumberSync() {\n  if (!serialNumber) {\n    if (Platform.OS === 'android') {\n      serialNumber = RNDeviceInfo.getSerialNumberSync();\n    } else {\n      serialNumber = 'unknown';\n    }\n  }\n\n  return serialNumber;\n}\nvar androidId;\nexport function getAndroidId() {\n  return _getAndroidId.apply(this, arguments);\n}\n\nfunction _getAndroidId() {\n  _getAndroidId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (androidId) {\n              _context7.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context7.next = 7;\n              break;\n            }\n\n            _context7.next = 4;\n            return RNDeviceInfo.getAndroidId();\n\n          case 4:\n            androidId = _context7.sent;\n            _context7.next = 8;\n            break;\n\n          case 7:\n            androidId = 'unknown';\n\n          case 8:\n            return _context7.abrupt(\"return\", androidId);\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getAndroidId.apply(this, arguments);\n}\n\nexport function getAndroidIdSync() {\n  if (!androidId) {\n    if (Platform.OS === 'android') {\n      androidId = RNDeviceInfo.getAndroidIdSync();\n    } else {\n      androidId = 'unknown';\n    }\n  }\n\n  return androidId;\n}\nexport function getIpAddress() {\n  return _getIpAddress.apply(this, arguments);\n}\n\nfunction _getIpAddress() {\n  _getIpAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows')) {\n              _context8.next = 2;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", RNDeviceInfo.getIpAddress());\n\n          case 2:\n            return _context8.abrupt(\"return\", 'unknown');\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _getIpAddress.apply(this, arguments);\n}\n\nexport function getIpAddressSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.getIpAddressSync();\n  }\n\n  return 'unknown';\n}\nexport function isCameraPresent() {\n  return _isCameraPresent.apply(this, arguments);\n}\n\nfunction _isCameraPresent() {\n  _isCameraPresent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n              _context9.next = 2;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", RNDeviceInfo.isCameraPresent());\n\n          case 2:\n            return _context9.abrupt(\"return\", false);\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _isCameraPresent.apply(this, arguments);\n}\n\nexport function isCameraPresentSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return RNDeviceInfo.isCameraPresentSync();\n  }\n\n  return false;\n}\nexport function getMacAddress() {\n  return _getMacAddress.apply(this, arguments);\n}\n\nfunction _getMacAddress() {\n  _getMacAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (!(Platform.OS === 'android')) {\n              _context10.next = 4;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", RNDeviceInfo.getMacAddress());\n\n          case 4:\n            if (!(Platform.OS === 'ios')) {\n              _context10.next = 6;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", '02:00:00:00:00:00');\n\n          case 6:\n            return _context10.abrupt(\"return\", 'unknown');\n\n          case 7:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getMacAddress.apply(this, arguments);\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n\n  return 'unknown';\n}\nvar deviceId;\nexport function getDeviceId() {\n  if (!deviceId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceId = RNDeviceInfo.deviceId;\n    } else {\n      deviceId = 'unknown';\n    }\n  }\n\n  return deviceId;\n}\nvar manufacturer;\nexport function getManufacturer() {\n  return _getManufacturer.apply(this, arguments);\n}\n\nfunction _getManufacturer() {\n  _getManufacturer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            if (manufacturer) {\n              _context11.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'windows')) {\n              _context11.next = 7;\n              break;\n            }\n\n            _context11.next = 4;\n            return RNDeviceInfo.getSystemManufacturer();\n\n          case 4:\n            manufacturer = _context11.sent;\n            _context11.next = 8;\n            break;\n\n          case 7:\n            if (Platform.OS === 'ios') {\n              manufacturer = 'Apple';\n            } else {\n              manufacturer = 'unknown';\n            }\n\n          case 8:\n            return _context11.abrupt(\"return\", manufacturer);\n\n          case 9:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _getManufacturer.apply(this, arguments);\n}\n\nexport function getManufacturerSync() {\n  if (!manufacturer) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      manufacturer = RNDeviceInfo.getSystemManufacturerSync();\n    } else if (Platform.OS === 'ios') {\n      manufacturer = 'Apple';\n    } else {\n      manufacturer = 'unknown';\n    }\n  }\n\n  return manufacturer;\n}\nvar model;\nexport function getModel() {\n  if (!model) {\n    if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'windows') {\n      model = RNDeviceInfo.model;\n    } else {\n      model = 'unknown';\n    }\n  }\n\n  return model;\n}\nvar brand;\nexport function getBrand() {\n  if (!brand) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      brand = RNDeviceInfo.brand;\n    } else {\n      brand = 'unknown';\n    }\n  }\n\n  return brand;\n}\nvar systemName;\nexport function getSystemName() {\n  if (!systemName) {\n    if (Platform.OS === 'ios') {\n      systemName = RNDeviceInfo.systemName;\n    } else if (Platform.OS === 'android') {\n      systemName = 'Android';\n    } else if (Platform.OS === 'windows') {\n      systemName = 'Windows';\n    } else {\n      systemName = 'unknown';\n    }\n  }\n\n  return systemName;\n}\nvar systemVersion;\nexport function getSystemVersion() {\n  if (!systemVersion) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      systemVersion = RNDeviceInfo.systemVersion;\n    } else {\n      systemVersion = 'unknown';\n    }\n  }\n\n  return systemVersion;\n}\nvar buildId;\nexport function getBuildId() {\n  return _getBuildId.apply(this, arguments);\n}\n\nfunction _getBuildId() {\n  _getBuildId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (buildId) {\n              _context12.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios')) {\n              _context12.next = 7;\n              break;\n            }\n\n            _context12.next = 4;\n            return RNDeviceInfo.getBuildId();\n\n          case 4:\n            buildId = _context12.sent;\n            _context12.next = 8;\n            break;\n\n          case 7:\n            buildId = 'unknown';\n\n          case 8:\n            return _context12.abrupt(\"return\", buildId);\n\n          case 9:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _getBuildId.apply(this, arguments);\n}\n\nexport function getBuildIdSync() {\n  if (!buildId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      buildId = RNDeviceInfo.getBuildIdSync();\n    } else {\n      buildId = 'unknown';\n    }\n  }\n\n  return buildId;\n}\nvar apiLevel;\nexport function getApiLevel() {\n  return _getApiLevel.apply(this, arguments);\n}\n\nfunction _getApiLevel() {\n  _getApiLevel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            if (apiLevel) {\n              _context13.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context13.next = 7;\n              break;\n            }\n\n            _context13.next = 4;\n            return RNDeviceInfo.getApiLevel();\n\n          case 4:\n            apiLevel = _context13.sent;\n            _context13.next = 8;\n            break;\n\n          case 7:\n            apiLevel = -1;\n\n          case 8:\n            return _context13.abrupt(\"return\", apiLevel);\n\n          case 9:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _getApiLevel.apply(this, arguments);\n}\n\nexport function getApiLevelSync() {\n  if (!apiLevel) {\n    if (Platform.OS === 'android') {\n      apiLevel = RNDeviceInfo.getApiLevelSync();\n    } else {\n      apiLevel = -1;\n    }\n  }\n\n  return apiLevel;\n}\nvar bundleId;\nexport function getBundleId() {\n  if (!bundleId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      bundleId = RNDeviceInfo.bundleId;\n    } else {\n      bundleId = 'unknown';\n    }\n  }\n\n  return bundleId;\n}\nvar installerPackageName;\nexport function getInstallerPackageName() {\n  return _getInstallerPackageName.apply(this, arguments);\n}\n\nfunction _getInstallerPackageName() {\n  _getInstallerPackageName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            if (installerPackageName) {\n              _context14.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context14.next = 7;\n              break;\n            }\n\n            _context14.next = 4;\n            return RNDeviceInfo.getInstallerPackageName();\n\n          case 4:\n            installerPackageName = _context14.sent;\n            _context14.next = 8;\n            break;\n\n          case 7:\n            installerPackageName = 'unknown';\n\n          case 8:\n            return _context14.abrupt(\"return\", installerPackageName);\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getInstallerPackageName.apply(this, arguments);\n}\n\nexport function getInstallerPackageNameSync() {\n  if (!installerPackageName) {\n    if (Platform.OS === 'android') {\n      installerPackageName = RNDeviceInfo.getInstallerPackageNameSync();\n    } else {\n      installerPackageName = 'unknown';\n    }\n  }\n\n  return installerPackageName;\n}\nvar appName;\nexport function getApplicationName() {\n  if (!appName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      appName = RNDeviceInfo.appName;\n    } else {\n      appName = 'unknown';\n    }\n  }\n\n  return appName;\n}\nvar buildNumber;\nexport function getBuildNumber() {\n  if (!buildNumber) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      buildNumber = RNDeviceInfo.buildNumber;\n    } else {\n      buildNumber = 'unknown';\n    }\n  }\n\n  return buildNumber;\n}\nvar version;\nexport function getVersion() {\n  if (!version) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      version = RNDeviceInfo.appVersion;\n    } else {\n      version = 'unknown';\n    }\n  }\n\n  return version;\n}\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\nvar deviceName;\nexport function getDeviceName() {\n  return _getDeviceName.apply(this, arguments);\n}\n\nfunction _getDeviceName() {\n  _getDeviceName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            if (deviceName) {\n              _context15.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows')) {\n              _context15.next = 7;\n              break;\n            }\n\n            _context15.next = 4;\n            return RNDeviceInfo.getDeviceName();\n\n          case 4:\n            deviceName = _context15.sent;\n            _context15.next = 8;\n            break;\n\n          case 7:\n            deviceName = 'unknown';\n\n          case 8:\n            return _context15.abrupt(\"return\", deviceName);\n\n          case 9:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _getDeviceName.apply(this, arguments);\n}\n\nexport function getDeviceNameSync() {\n  if (!deviceName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceName = RNDeviceInfo.getDeviceNameSync();\n    } else {\n      deviceName = 'unknown';\n    }\n  }\n\n  return deviceName;\n}\nexport function getUsedMemory() {\n  return _getUsedMemory.apply(this, arguments);\n}\n\nfunction _getUsedMemory() {\n  _getUsedMemory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n    return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web')) {\n              _context16.next = 2;\n              break;\n            }\n\n            return _context16.abrupt(\"return\", RNDeviceInfo.getUsedMemory());\n\n          case 2:\n            return _context16.abrupt(\"return\", -1);\n\n          case 3:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _getUsedMemory.apply(this, arguments);\n}\n\nexport function getUsedMemorySync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getUsedMemorySync();\n  }\n\n  return -1;\n}\nvar userAgent;\nexport function getUserAgent() {\n  return _getUserAgent.apply(this, arguments);\n}\n\nfunction _getUserAgent() {\n  _getUserAgent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            if (userAgent) {\n              _context17.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web')) {\n              _context17.next = 7;\n              break;\n            }\n\n            _context17.next = 4;\n            return RNDeviceInfo.getUserAgent();\n\n          case 4:\n            userAgent = _context17.sent;\n            _context17.next = 8;\n            break;\n\n          case 7:\n            userAgent = 'unknown';\n\n          case 8:\n            return _context17.abrupt(\"return\", userAgent);\n\n          case 9:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _getUserAgent.apply(this, arguments);\n}\n\nexport function getUserAgentSync() {\n  if (!userAgent) {\n    // getUserAgentSync is not available on iOS since it rely on an completion operation\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      userAgent = RNDeviceInfo.getUserAgentSync();\n    } else {\n      userAgent = 'unknown';\n    }\n  }\n\n  return userAgent;\n}\nexport function getFontScale() {\n  return _getFontScale.apply(this, arguments);\n}\n\nfunction _getFontScale() {\n  _getFontScale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios')) {\n              _context18.next = 2;\n              break;\n            }\n\n            return _context18.abrupt(\"return\", RNDeviceInfo.getFontScale());\n\n          case 2:\n            return _context18.abrupt(\"return\", -1);\n\n          case 3:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _getFontScale.apply(this, arguments);\n}\n\nexport function getFontScaleSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getFontScaleSync();\n  }\n\n  return -1;\n}\nvar bootloader;\nexport function getBootloader() {\n  return _getBootloader.apply(this, arguments);\n}\n\nfunction _getBootloader() {\n  _getBootloader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n    return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            if (bootloader) {\n              _context19.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context19.next = 7;\n              break;\n            }\n\n            _context19.next = 4;\n            return RNDeviceInfo.getBootloader();\n\n          case 4:\n            bootloader = _context19.sent;\n            _context19.next = 8;\n            break;\n\n          case 7:\n            bootloader = 'unknown';\n\n          case 8:\n            return _context19.abrupt(\"return\", bootloader);\n\n          case 9:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n  return _getBootloader.apply(this, arguments);\n}\n\nexport function getBootloaderSync() {\n  if (!bootloader) {\n    if (Platform.OS === 'android') {\n      bootloader = RNDeviceInfo.getBootloaderSync();\n    } else {\n      bootloader = 'unknown';\n    }\n  }\n\n  return bootloader;\n}\nvar device;\nexport function getDevice() {\n  return _getDevice.apply(this, arguments);\n}\n\nfunction _getDevice() {\n  _getDevice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n    return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            if (device) {\n              _context20.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context20.next = 7;\n              break;\n            }\n\n            _context20.next = 4;\n            return RNDeviceInfo.getDevice();\n\n          case 4:\n            device = _context20.sent;\n            _context20.next = 8;\n            break;\n\n          case 7:\n            device = 'unknown';\n\n          case 8:\n            return _context20.abrupt(\"return\", device);\n\n          case 9:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _getDevice.apply(this, arguments);\n}\n\nexport function getDeviceSync() {\n  if (!device) {\n    if (Platform.OS === 'android') {\n      device = RNDeviceInfo.getDeviceSync();\n    } else {\n      device = 'unknown';\n    }\n  }\n\n  return device;\n}\nvar display;\nexport function getDisplay() {\n  return _getDisplay.apply(this, arguments);\n}\n\nfunction _getDisplay() {\n  _getDisplay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n    return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            if (display) {\n              _context21.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context21.next = 7;\n              break;\n            }\n\n            _context21.next = 4;\n            return RNDeviceInfo.getDisplay();\n\n          case 4:\n            display = _context21.sent;\n            _context21.next = 8;\n            break;\n\n          case 7:\n            display = 'unknown';\n\n          case 8:\n            return _context21.abrupt(\"return\", display);\n\n          case 9:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n  return _getDisplay.apply(this, arguments);\n}\n\nexport function getDisplaySync() {\n  if (!display) {\n    if (Platform.OS === 'android') {\n      display = RNDeviceInfo.getDisplaySync();\n    } else {\n      display = 'unknown';\n    }\n  }\n\n  return display;\n}\nvar fingerprint;\nexport function getFingerprint() {\n  return _getFingerprint.apply(this, arguments);\n}\n\nfunction _getFingerprint() {\n  _getFingerprint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22() {\n    return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            if (fingerprint) {\n              _context22.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context22.next = 7;\n              break;\n            }\n\n            _context22.next = 4;\n            return RNDeviceInfo.getFingerprint();\n\n          case 4:\n            fingerprint = _context22.sent;\n            _context22.next = 8;\n            break;\n\n          case 7:\n            fingerprint = 'unknown';\n\n          case 8:\n            return _context22.abrupt(\"return\", fingerprint);\n\n          case 9:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n  return _getFingerprint.apply(this, arguments);\n}\n\nexport function getFingerprintSync() {\n  if (!fingerprint) {\n    if (Platform.OS === 'android') {\n      fingerprint = RNDeviceInfo.getFingerprintSync();\n    } else {\n      fingerprint = 'unknown';\n    }\n  }\n\n  return fingerprint;\n}\nvar hardware;\nexport function getHardware() {\n  return _getHardware.apply(this, arguments);\n}\n\nfunction _getHardware() {\n  _getHardware = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23() {\n    return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            if (hardware) {\n              _context23.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context23.next = 7;\n              break;\n            }\n\n            _context23.next = 4;\n            return RNDeviceInfo.getHardware();\n\n          case 4:\n            hardware = _context23.sent;\n            _context23.next = 8;\n            break;\n\n          case 7:\n            hardware = 'unknown';\n\n          case 8:\n            return _context23.abrupt(\"return\", hardware);\n\n          case 9:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23);\n  }));\n  return _getHardware.apply(this, arguments);\n}\n\nexport function getHardwareSync() {\n  if (!hardware) {\n    if (Platform.OS === 'android') {\n      hardware = RNDeviceInfo.getHardwareSync();\n    } else {\n      hardware = 'unknown';\n    }\n  }\n\n  return hardware;\n}\nvar host;\nexport function getHost() {\n  return _getHost.apply(this, arguments);\n}\n\nfunction _getHost() {\n  _getHost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24() {\n    return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            if (host) {\n              _context24.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context24.next = 7;\n              break;\n            }\n\n            _context24.next = 4;\n            return RNDeviceInfo.getHost();\n\n          case 4:\n            host = _context24.sent;\n            _context24.next = 8;\n            break;\n\n          case 7:\n            host = 'unknown';\n\n          case 8:\n            return _context24.abrupt(\"return\", host);\n\n          case 9:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24);\n  }));\n  return _getHost.apply(this, arguments);\n}\n\nexport function getHostSync() {\n  if (!host) {\n    if (Platform.OS === 'android') {\n      host = RNDeviceInfo.getHostSync();\n    } else {\n      host = 'unknown';\n    }\n  }\n\n  return host;\n}\nvar product;\nexport function getProduct() {\n  return _getProduct.apply(this, arguments);\n}\n\nfunction _getProduct() {\n  _getProduct = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n    return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            if (product) {\n              _context25.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context25.next = 7;\n              break;\n            }\n\n            _context25.next = 4;\n            return RNDeviceInfo.getProduct();\n\n          case 4:\n            product = _context25.sent;\n            _context25.next = 8;\n            break;\n\n          case 7:\n            product = 'unknown';\n\n          case 8:\n            return _context25.abrupt(\"return\", product);\n\n          case 9:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25);\n  }));\n  return _getProduct.apply(this, arguments);\n}\n\nexport function getProductSync() {\n  if (!product) {\n    if (Platform.OS === 'android') {\n      product = RNDeviceInfo.getProductSync();\n    } else {\n      product = 'unknown';\n    }\n  }\n\n  return product;\n}\nvar tags;\nexport function getTags() {\n  return _getTags.apply(this, arguments);\n}\n\nfunction _getTags() {\n  _getTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26() {\n    return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n      while (1) {\n        switch (_context26.prev = _context26.next) {\n          case 0:\n            if (tags) {\n              _context26.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context26.next = 7;\n              break;\n            }\n\n            _context26.next = 4;\n            return RNDeviceInfo.getTags();\n\n          case 4:\n            tags = _context26.sent;\n            _context26.next = 8;\n            break;\n\n          case 7:\n            tags = 'unknown';\n\n          case 8:\n            return _context26.abrupt(\"return\", tags);\n\n          case 9:\n          case \"end\":\n            return _context26.stop();\n        }\n      }\n    }, _callee26);\n  }));\n  return _getTags.apply(this, arguments);\n}\n\nexport function getTagsSync() {\n  if (!tags) {\n    if (Platform.OS === 'android') {\n      tags = RNDeviceInfo.getTagsSync();\n    } else {\n      tags = 'unknown';\n    }\n  }\n\n  return tags;\n}\nvar type;\nexport function getType() {\n  return _getType.apply(this, arguments);\n}\n\nfunction _getType() {\n  _getType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27() {\n    return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n      while (1) {\n        switch (_context27.prev = _context27.next) {\n          case 0:\n            if (type) {\n              _context27.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context27.next = 7;\n              break;\n            }\n\n            _context27.next = 4;\n            return RNDeviceInfo.getType();\n\n          case 4:\n            type = _context27.sent;\n            _context27.next = 8;\n            break;\n\n          case 7:\n            type = 'unknown';\n\n          case 8:\n            return _context27.abrupt(\"return\", type);\n\n          case 9:\n          case \"end\":\n            return _context27.stop();\n        }\n      }\n    }, _callee27);\n  }));\n  return _getType.apply(this, arguments);\n}\n\nexport function getTypeSync() {\n  if (!type) {\n    if (Platform.OS === 'android') {\n      type = RNDeviceInfo.getTypeSync();\n    } else {\n      type = 'unknown';\n    }\n  }\n\n  return type;\n}\nvar baseOs;\nexport function getBaseOs() {\n  return _getBaseOs.apply(this, arguments);\n}\n\nfunction _getBaseOs() {\n  _getBaseOs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28() {\n    return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n      while (1) {\n        switch (_context28.prev = _context28.next) {\n          case 0:\n            if (baseOs) {\n              _context28.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'web')) {\n              _context28.next = 7;\n              break;\n            }\n\n            _context28.next = 4;\n            return RNDeviceInfo.getBaseOs();\n\n          case 4:\n            baseOs = _context28.sent;\n            _context28.next = 8;\n            break;\n\n          case 7:\n            baseOs = 'unknown';\n\n          case 8:\n            return _context28.abrupt(\"return\", baseOs);\n\n          case 9:\n          case \"end\":\n            return _context28.stop();\n        }\n      }\n    }, _callee28);\n  }));\n  return _getBaseOs.apply(this, arguments);\n}\n\nexport function getBaseOsSync() {\n  if (!baseOs) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      baseOs = RNDeviceInfo.getBaseOsSync();\n    } else {\n      baseOs = 'unknown';\n    }\n  }\n\n  return baseOs;\n}\nvar previewSdkInt;\nexport function getPreviewSdkInt() {\n  return _getPreviewSdkInt.apply(this, arguments);\n}\n\nfunction _getPreviewSdkInt() {\n  _getPreviewSdkInt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29() {\n    return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n      while (1) {\n        switch (_context29.prev = _context29.next) {\n          case 0:\n            if (previewSdkInt) {\n              _context29.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context29.next = 7;\n              break;\n            }\n\n            _context29.next = 4;\n            return RNDeviceInfo.getPreviewSdkInt();\n\n          case 4:\n            previewSdkInt = _context29.sent;\n            _context29.next = 8;\n            break;\n\n          case 7:\n            previewSdkInt = -1;\n\n          case 8:\n            return _context29.abrupt(\"return\", previewSdkInt);\n\n          case 9:\n          case \"end\":\n            return _context29.stop();\n        }\n      }\n    }, _callee29);\n  }));\n  return _getPreviewSdkInt.apply(this, arguments);\n}\n\nexport function getPreviewSdkIntSync() {\n  if (!previewSdkInt) {\n    if (Platform.OS === 'android') {\n      previewSdkInt = RNDeviceInfo.getPreviewSdkIntSync();\n    } else {\n      previewSdkInt = -1;\n    }\n  }\n\n  return previewSdkInt;\n}\nvar securityPatch;\nexport function getSecurityPatch() {\n  return _getSecurityPatch.apply(this, arguments);\n}\n\nfunction _getSecurityPatch() {\n  _getSecurityPatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30() {\n    return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n      while (1) {\n        switch (_context30.prev = _context30.next) {\n          case 0:\n            if (securityPatch) {\n              _context30.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context30.next = 7;\n              break;\n            }\n\n            _context30.next = 4;\n            return RNDeviceInfo.getSecurityPatch();\n\n          case 4:\n            securityPatch = _context30.sent;\n            _context30.next = 8;\n            break;\n\n          case 7:\n            securityPatch = 'unknown';\n\n          case 8:\n            return _context30.abrupt(\"return\", securityPatch);\n\n          case 9:\n          case \"end\":\n            return _context30.stop();\n        }\n      }\n    }, _callee30);\n  }));\n  return _getSecurityPatch.apply(this, arguments);\n}\n\nexport function getSecurityPatchSync() {\n  if (!securityPatch) {\n    if (Platform.OS === 'android') {\n      securityPatch = RNDeviceInfo.getSecurityPatchSync();\n    } else {\n      securityPatch = 'unknown';\n    }\n  }\n\n  return securityPatch;\n}\nvar codeName;\nexport function getCodename() {\n  return _getCodename.apply(this, arguments);\n}\n\nfunction _getCodename() {\n  _getCodename = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31() {\n    return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n      while (1) {\n        switch (_context31.prev = _context31.next) {\n          case 0:\n            if (codeName) {\n              _context31.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context31.next = 7;\n              break;\n            }\n\n            _context31.next = 4;\n            return RNDeviceInfo.getCodename();\n\n          case 4:\n            codeName = _context31.sent;\n            _context31.next = 8;\n            break;\n\n          case 7:\n            codeName = 'unknown';\n\n          case 8:\n            return _context31.abrupt(\"return\", codeName);\n\n          case 9:\n          case \"end\":\n            return _context31.stop();\n        }\n      }\n    }, _callee31);\n  }));\n  return _getCodename.apply(this, arguments);\n}\n\nexport function getCodenameSync() {\n  if (!codeName) {\n    if (Platform.OS === 'android') {\n      codeName = RNDeviceInfo.getCodenameSync();\n    } else {\n      codeName = 'unknown';\n    }\n  }\n\n  return codeName;\n}\nvar incremental;\nexport function getIncremental() {\n  return _getIncremental.apply(this, arguments);\n}\n\nfunction _getIncremental() {\n  _getIncremental = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32() {\n    return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n      while (1) {\n        switch (_context32.prev = _context32.next) {\n          case 0:\n            if (incremental) {\n              _context32.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context32.next = 7;\n              break;\n            }\n\n            _context32.next = 4;\n            return RNDeviceInfo.getIncremental();\n\n          case 4:\n            incremental = _context32.sent;\n            _context32.next = 8;\n            break;\n\n          case 7:\n            incremental = 'unknown';\n\n          case 8:\n            return _context32.abrupt(\"return\", incremental);\n\n          case 9:\n          case \"end\":\n            return _context32.stop();\n        }\n      }\n    }, _callee32);\n  }));\n  return _getIncremental.apply(this, arguments);\n}\n\nexport function getIncrementalSync() {\n  if (!incremental) {\n    if (Platform.OS === 'android') {\n      incremental = RNDeviceInfo.getIncrementalSync();\n    } else {\n      incremental = 'unknown';\n    }\n  }\n\n  return incremental;\n}\nvar emulator;\nexport function isEmulator() {\n  return _isEmulator.apply(this, arguments);\n}\n\nfunction _isEmulator() {\n  _isEmulator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33() {\n    return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n      while (1) {\n        switch (_context33.prev = _context33.next) {\n          case 0:\n            if (!(emulator === undefined)) {\n              _context33.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows')) {\n              _context33.next = 7;\n              break;\n            }\n\n            _context33.next = 4;\n            return RNDeviceInfo.isEmulator();\n\n          case 4:\n            emulator = _context33.sent;\n            _context33.next = 8;\n            break;\n\n          case 7:\n            emulator = false;\n\n          case 8:\n            return _context33.abrupt(\"return\", emulator);\n\n          case 9:\n          case \"end\":\n            return _context33.stop();\n        }\n      }\n    }, _callee33);\n  }));\n  return _isEmulator.apply(this, arguments);\n}\n\nexport function isEmulatorSync() {\n  if (emulator === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      emulator = RNDeviceInfo.isEmulatorSync();\n    } else {\n      emulator = false;\n    }\n  }\n\n  return emulator;\n}\nvar tablet;\nexport function isTablet() {\n  if (tablet === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      tablet = RNDeviceInfo.isTablet;\n    } else {\n      tablet = false;\n    }\n  }\n\n  return tablet;\n}\nexport function isPinOrFingerprintSet() {\n  return _isPinOrFingerprintSet.apply(this, arguments);\n}\n\nfunction _isPinOrFingerprintSet() {\n  _isPinOrFingerprintSet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34() {\n    return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n      while (1) {\n        switch (_context34.prev = _context34.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows')) {\n              _context34.next = 2;\n              break;\n            }\n\n            return _context34.abrupt(\"return\", RNDeviceInfo.isPinOrFingerprintSet());\n\n          case 2:\n            return _context34.abrupt(\"return\", false);\n\n          case 3:\n          case \"end\":\n            return _context34.stop();\n        }\n      }\n    }, _callee34);\n  }));\n  return _isPinOrFingerprintSet.apply(this, arguments);\n}\n\nexport function isPinOrFingerprintSetSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.isPinOrFingerprintSetSync();\n  }\n\n  return false;\n}\nvar notch;\nexport function hasNotch() {\n  if (notch === undefined) {\n    var _brand = getBrand();\n\n    var _model = getModel();\n\n    notch = devicesWithNotch.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n\n  return notch;\n}\nvar firstInstallTime;\nexport function getFirstInstallTime() {\n  return _getFirstInstallTime.apply(this, arguments);\n}\n\nfunction _getFirstInstallTime() {\n  _getFirstInstallTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35() {\n    return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n      while (1) {\n        switch (_context35.prev = _context35.next) {\n          case 0:\n            if (firstInstallTime) {\n              _context35.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'windows')) {\n              _context35.next = 7;\n              break;\n            }\n\n            _context35.next = 4;\n            return RNDeviceInfo.getFirstInstallTime();\n\n          case 4:\n            firstInstallTime = _context35.sent;\n            _context35.next = 8;\n            break;\n\n          case 7:\n            firstInstallTime = -1;\n\n          case 8:\n            return _context35.abrupt(\"return\", firstInstallTime);\n\n          case 9:\n          case \"end\":\n            return _context35.stop();\n        }\n      }\n    }, _callee35);\n  }));\n  return _getFirstInstallTime.apply(this, arguments);\n}\n\nexport function getFirstInstallTimeSync() {\n  if (!firstInstallTime) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      firstInstallTime = RNDeviceInfo.getFirstInstallTimeSync();\n    } else {\n      firstInstallTime = -1;\n    }\n  }\n\n  return firstInstallTime;\n}\nvar installReferrer;\nexport function getInstallReferrer() {\n  return _getInstallReferrer.apply(this, arguments);\n}\n\nfunction _getInstallReferrer() {\n  _getInstallReferrer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36() {\n    return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n      while (1) {\n        switch (_context36.prev = _context36.next) {\n          case 0:\n            if (installReferrer) {\n              _context36.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'web')) {\n              _context36.next = 7;\n              break;\n            }\n\n            _context36.next = 4;\n            return RNDeviceInfo.getInstallReferrer();\n\n          case 4:\n            installReferrer = _context36.sent;\n            _context36.next = 8;\n            break;\n\n          case 7:\n            installReferrer = 'unknown';\n\n          case 8:\n            return _context36.abrupt(\"return\", installReferrer);\n\n          case 9:\n          case \"end\":\n            return _context36.stop();\n        }\n      }\n    }, _callee36);\n  }));\n  return _getInstallReferrer.apply(this, arguments);\n}\n\nexport function getInstallReferrerSync() {\n  if (!installReferrer) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      installReferrer = RNDeviceInfo.getInstallReferrerSync();\n    } else {\n      installReferrer = 'unknown';\n    }\n  }\n\n  return installReferrer;\n}\nvar lastUpdateTime;\nexport function getLastUpdateTime() {\n  return _getLastUpdateTime.apply(this, arguments);\n}\n\nfunction _getLastUpdateTime() {\n  _getLastUpdateTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37() {\n    return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n      while (1) {\n        switch (_context37.prev = _context37.next) {\n          case 0:\n            if (lastUpdateTime) {\n              _context37.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context37.next = 7;\n              break;\n            }\n\n            _context37.next = 4;\n            return RNDeviceInfo.getLastUpdateTime();\n\n          case 4:\n            lastUpdateTime = _context37.sent;\n            _context37.next = 8;\n            break;\n\n          case 7:\n            lastUpdateTime = -1;\n\n          case 8:\n            return _context37.abrupt(\"return\", lastUpdateTime);\n\n          case 9:\n          case \"end\":\n            return _context37.stop();\n        }\n      }\n    }, _callee37);\n  }));\n  return _getLastUpdateTime.apply(this, arguments);\n}\n\nexport function getLastUpdateTimeSync() {\n  if (!lastUpdateTime) {\n    if (Platform.OS === 'android') {\n      lastUpdateTime = RNDeviceInfo.getLastUpdateTimeSync();\n    } else {\n      lastUpdateTime = -1;\n    }\n  }\n\n  return lastUpdateTime;\n}\nexport function getPhoneNumber() {\n  return _getPhoneNumber.apply(this, arguments);\n}\n\nfunction _getPhoneNumber() {\n  _getPhoneNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38() {\n    return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n      while (1) {\n        switch (_context38.prev = _context38.next) {\n          case 0:\n            if (!(Platform.OS === 'android')) {\n              _context38.next = 2;\n              break;\n            }\n\n            return _context38.abrupt(\"return\", RNDeviceInfo.getPhoneNumber());\n\n          case 2:\n            return _context38.abrupt(\"return\", 'unknown');\n\n          case 3:\n          case \"end\":\n            return _context38.stop();\n        }\n      }\n    }, _callee38);\n  }));\n  return _getPhoneNumber.apply(this, arguments);\n}\n\nexport function getPhoneNumberSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getPhoneNumberSync();\n  }\n\n  return 'unknown';\n}\nexport function getCarrier() {\n  return _getCarrier.apply(this, arguments);\n}\n\nfunction _getCarrier() {\n  _getCarrier = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39() {\n    return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n      while (1) {\n        switch (_context39.prev = _context39.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios')) {\n              _context39.next = 2;\n              break;\n            }\n\n            return _context39.abrupt(\"return\", RNDeviceInfo.getCarrier());\n\n          case 2:\n            return _context39.abrupt(\"return\", 'unknown');\n\n          case 3:\n          case \"end\":\n            return _context39.stop();\n        }\n      }\n    }, _callee39);\n  }));\n  return _getCarrier.apply(this, arguments);\n}\n\nexport function getCarrierSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getCarrierSync();\n  }\n\n  return 'unknown';\n}\nvar totalMemory;\nexport function getTotalMemory() {\n  return _getTotalMemory.apply(this, arguments);\n}\n\nfunction _getTotalMemory() {\n  _getTotalMemory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40() {\n    return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n      while (1) {\n        switch (_context40.prev = _context40.next) {\n          case 0:\n            if (totalMemory) {\n              _context40.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n              _context40.next = 7;\n              break;\n            }\n\n            _context40.next = 4;\n            return RNDeviceInfo.getTotalMemory();\n\n          case 4:\n            totalMemory = _context40.sent;\n            _context40.next = 8;\n            break;\n\n          case 7:\n            totalMemory = -1;\n\n          case 8:\n            return _context40.abrupt(\"return\", totalMemory);\n\n          case 9:\n          case \"end\":\n            return _context40.stop();\n        }\n      }\n    }, _callee40);\n  }));\n  return _getTotalMemory.apply(this, arguments);\n}\n\nexport function getTotalMemorySync() {\n  if (!totalMemory) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      totalMemory = RNDeviceInfo.getTotalMemorySync();\n    } else {\n      totalMemory = -1;\n    }\n  }\n\n  return totalMemory;\n}\nvar maxMemory;\nexport function getMaxMemory() {\n  return _getMaxMemory.apply(this, arguments);\n}\n\nfunction _getMaxMemory() {\n  _getMaxMemory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41() {\n    return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n      while (1) {\n        switch (_context41.prev = _context41.next) {\n          case 0:\n            if (maxMemory) {\n              _context41.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n              _context41.next = 7;\n              break;\n            }\n\n            _context41.next = 4;\n            return RNDeviceInfo.getMaxMemory();\n\n          case 4:\n            maxMemory = _context41.sent;\n            _context41.next = 8;\n            break;\n\n          case 7:\n            maxMemory = -1;\n\n          case 8:\n            return _context41.abrupt(\"return\", maxMemory);\n\n          case 9:\n          case \"end\":\n            return _context41.stop();\n        }\n      }\n    }, _callee41);\n  }));\n  return _getMaxMemory.apply(this, arguments);\n}\n\nexport function getMaxMemorySync() {\n  if (!maxMemory) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      maxMemory = RNDeviceInfo.getMaxMemorySync();\n    } else {\n      maxMemory = -1;\n    }\n  }\n\n  return maxMemory;\n}\nexport function getTotalDiskCapacity() {\n  return _getTotalDiskCapacity.apply(this, arguments);\n}\n\nfunction _getTotalDiskCapacity() {\n  _getTotalDiskCapacity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42() {\n    return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n      while (1) {\n        switch (_context42.prev = _context42.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web')) {\n              _context42.next = 2;\n              break;\n            }\n\n            return _context42.abrupt(\"return\", RNDeviceInfo.getTotalDiskCapacity());\n\n          case 2:\n            return _context42.abrupt(\"return\", -1);\n\n          case 3:\n          case \"end\":\n            return _context42.stop();\n        }\n      }\n    }, _callee42);\n  }));\n  return _getTotalDiskCapacity.apply(this, arguments);\n}\n\nexport function getTotalDiskCapacitySync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\nexport function getFreeDiskStorage() {\n  return _getFreeDiskStorage.apply(this, arguments);\n}\n\nfunction _getFreeDiskStorage() {\n  _getFreeDiskStorage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43() {\n    return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n      while (1) {\n        switch (_context43.prev = _context43.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web')) {\n              _context43.next = 2;\n              break;\n            }\n\n            return _context43.abrupt(\"return\", RNDeviceInfo.getFreeDiskStorage());\n\n          case 2:\n            return _context43.abrupt(\"return\", -1);\n\n          case 3:\n          case \"end\":\n            return _context43.stop();\n        }\n      }\n    }, _callee43);\n  }));\n  return _getFreeDiskStorage.apply(this, arguments);\n}\n\nexport function getFreeDiskStorageSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\nexport function getBatteryLevel() {\n  return _getBatteryLevel.apply(this, arguments);\n}\n\nfunction _getBatteryLevel() {\n  _getBatteryLevel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44() {\n    return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n      while (1) {\n        switch (_context44.prev = _context44.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n              _context44.next = 2;\n              break;\n            }\n\n            return _context44.abrupt(\"return\", RNDeviceInfo.getBatteryLevel());\n\n          case 2:\n            return _context44.abrupt(\"return\", -1);\n\n          case 3:\n          case \"end\":\n            return _context44.stop();\n        }\n      }\n    }, _callee44);\n  }));\n  return _getBatteryLevel.apply(this, arguments);\n}\n\nexport function getBatteryLevelSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return RNDeviceInfo.getBatteryLevelSync();\n  }\n\n  return -1;\n}\nexport function getPowerState() {\n  return _getPowerState.apply(this, arguments);\n}\n\nfunction _getPowerState() {\n  _getPowerState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45() {\n    return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n      while (1) {\n        switch (_context45.prev = _context45.next) {\n          case 0:\n            if (!(Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'web')) {\n              _context45.next = 2;\n              break;\n            }\n\n            return _context45.abrupt(\"return\", RNDeviceInfo.getPowerState());\n\n          case 2:\n            return _context45.abrupt(\"return\", {});\n\n          case 3:\n          case \"end\":\n            return _context45.stop();\n        }\n      }\n    }, _callee45);\n  }));\n  return _getPowerState.apply(this, arguments);\n}\n\nexport function getPowerStateSync() {\n  if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.getPowerStateSync();\n  }\n\n  return {};\n}\nexport function isBatteryCharging() {\n  return _isBatteryCharging.apply(this, arguments);\n}\n\nfunction _isBatteryCharging() {\n  _isBatteryCharging = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46() {\n    return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n      while (1) {\n        switch (_context46.prev = _context46.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web')) {\n              _context46.next = 2;\n              break;\n            }\n\n            return _context46.abrupt(\"return\", RNDeviceInfo.isBatteryCharging());\n\n          case 2:\n            return _context46.abrupt(\"return\", false);\n\n          case 3:\n          case \"end\":\n            return _context46.stop();\n        }\n      }\n    }, _callee46);\n  }));\n  return _isBatteryCharging.apply(this, arguments);\n}\n\nexport function isBatteryChargingSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isBatteryChargingSync();\n  }\n\n  return false;\n}\nexport function isLandscape() {\n  return _isLandscape.apply(this, arguments);\n}\n\nfunction _isLandscape() {\n  _isLandscape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47() {\n    return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n      while (1) {\n        switch (_context47.prev = _context47.next) {\n          case 0:\n            return _context47.abrupt(\"return\", Promise.resolve(isLandscapeSync()));\n\n          case 1:\n          case \"end\":\n            return _context47.stop();\n        }\n      }\n    }, _callee47);\n  }));\n  return _isLandscape.apply(this, arguments);\n}\n\nexport function isLandscapeSync() {\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  return width >= height;\n}\nexport function isAirplaneMode() {\n  return _isAirplaneMode.apply(this, arguments);\n}\n\nfunction _isAirplaneMode() {\n  _isAirplaneMode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48() {\n    return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n      while (1) {\n        switch (_context48.prev = _context48.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'web')) {\n              _context48.next = 2;\n              break;\n            }\n\n            return _context48.abrupt(\"return\", RNDeviceInfo.isAirplaneMode());\n\n          case 2:\n            return _context48.abrupt(\"return\", Promise.resolve(false));\n\n          case 3:\n          case \"end\":\n            return _context48.stop();\n        }\n      }\n    }, _callee48);\n  }));\n  return _isAirplaneMode.apply(this, arguments);\n}\n\nexport function isAirplaneModeSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.isAirplaneModeSync();\n  }\n\n  return false;\n}\nvar deviceType;\nexport function getDeviceType() {\n  if (!deviceType) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      deviceType = RNDeviceInfo.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n\n  return deviceType;\n}\nexport function getDeviceTypeSync() {\n  if (!deviceType) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      deviceType = RNDeviceInfo.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n\n  return deviceType;\n}\n\nvar _supportedAbis;\n\nexport function supportedAbis() {\n  return _supportedAbis2.apply(this, arguments);\n}\n\nfunction _supportedAbis2() {\n  _supportedAbis2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49() {\n    return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n      while (1) {\n        switch (_context49.prev = _context49.next) {\n          case 0:\n            if (_supportedAbis) {\n              _context49.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios')) {\n              _context49.next = 7;\n              break;\n            }\n\n            _context49.next = 4;\n            return RNDeviceInfo.getSupportedAbis();\n\n          case 4:\n            _supportedAbis = _context49.sent;\n            _context49.next = 8;\n            break;\n\n          case 7:\n            _supportedAbis = [];\n\n          case 8:\n            return _context49.abrupt(\"return\", _supportedAbis);\n\n          case 9:\n          case \"end\":\n            return _context49.stop();\n        }\n      }\n    }, _callee49);\n  }));\n  return _supportedAbis2.apply(this, arguments);\n}\n\nexport function supportedAbisSync() {\n  if (!_supportedAbis) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      _supportedAbis = RNDeviceInfo.getSupportedAbisSync();\n    } else {\n      _supportedAbis = [];\n    }\n  }\n\n  return _supportedAbis;\n}\n\nvar _supported32BitAbis;\n\nexport function supported32BitAbis() {\n  return _supported32BitAbis2.apply(this, arguments);\n}\n\nfunction _supported32BitAbis2() {\n  _supported32BitAbis2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50() {\n    return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n      while (1) {\n        switch (_context50.prev = _context50.next) {\n          case 0:\n            if (_supported32BitAbis) {\n              _context50.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context50.next = 7;\n              break;\n            }\n\n            _context50.next = 4;\n            return RNDeviceInfo.getSupported32BitAbis();\n\n          case 4:\n            _supported32BitAbis = _context50.sent;\n            _context50.next = 8;\n            break;\n\n          case 7:\n            _supported32BitAbis = [];\n\n          case 8:\n            return _context50.abrupt(\"return\", _supported32BitAbis);\n\n          case 9:\n          case \"end\":\n            return _context50.stop();\n        }\n      }\n    }, _callee50);\n  }));\n  return _supported32BitAbis2.apply(this, arguments);\n}\n\nexport function supported32BitAbisSync() {\n  if (!_supported32BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported32BitAbis = RNDeviceInfo.getSupported32BitAbisSync();\n    } else {\n      _supported32BitAbis = [];\n    }\n  }\n\n  return _supported32BitAbis;\n}\n\nvar _supported64BitAbis;\n\nexport function supported64BitAbis() {\n  return _supported64BitAbis2.apply(this, arguments);\n}\n\nfunction _supported64BitAbis2() {\n  _supported64BitAbis2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51() {\n    return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n      while (1) {\n        switch (_context51.prev = _context51.next) {\n          case 0:\n            if (_supported64BitAbis) {\n              _context51.next = 8;\n              break;\n            }\n\n            if (!(Platform.OS === 'android')) {\n              _context51.next = 7;\n              break;\n            }\n\n            _context51.next = 4;\n            return RNDeviceInfo.getSupported64BitAbis();\n\n          case 4:\n            _supported64BitAbis = _context51.sent;\n            _context51.next = 8;\n            break;\n\n          case 7:\n            _supported64BitAbis = [];\n\n          case 8:\n            return _context51.abrupt(\"return\", _supported64BitAbis);\n\n          case 9:\n          case \"end\":\n            return _context51.stop();\n        }\n      }\n    }, _callee51);\n  }));\n  return _supported64BitAbis2.apply(this, arguments);\n}\n\nexport function supported64BitAbisSync() {\n  if (!_supported64BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported64BitAbis = RNDeviceInfo.getSupported64BitAbisSync();\n    } else {\n      _supported64BitAbis = [];\n    }\n  }\n\n  return _supported64BitAbis;\n}\nexport function hasSystemFeature(_x) {\n  return _hasSystemFeature.apply(this, arguments);\n}\n\nfunction _hasSystemFeature() {\n  _hasSystemFeature = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee52(feature) {\n    return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n      while (1) {\n        switch (_context52.prev = _context52.next) {\n          case 0:\n            if (!(Platform.OS === 'android')) {\n              _context52.next = 2;\n              break;\n            }\n\n            return _context52.abrupt(\"return\", RNDeviceInfo.hasSystemFeature(feature));\n\n          case 2:\n            return _context52.abrupt(\"return\", false);\n\n          case 3:\n          case \"end\":\n            return _context52.stop();\n        }\n      }\n    }, _callee52);\n  }));\n  return _hasSystemFeature.apply(this, arguments);\n}\n\nexport function hasSystemFeatureSync(feature) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n\n  return false;\n}\nexport function getSystemAvailableFeatures() {\n  return _getSystemAvailableFeatures.apply(this, arguments);\n}\n\nfunction _getSystemAvailableFeatures() {\n  _getSystemAvailableFeatures = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee53() {\n    return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n      while (1) {\n        switch (_context53.prev = _context53.next) {\n          case 0:\n            if (!(Platform.OS === 'android')) {\n              _context53.next = 2;\n              break;\n            }\n\n            return _context53.abrupt(\"return\", RNDeviceInfo.getSystemAvailableFeatures());\n\n          case 2:\n            return _context53.abrupt(\"return\", []);\n\n          case 3:\n          case \"end\":\n            return _context53.stop();\n        }\n      }\n    }, _callee53);\n  }));\n  return _getSystemAvailableFeatures.apply(this, arguments);\n}\n\nexport function getSystemAvailableFeaturesSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getSystemAvailableFeaturesSync();\n  }\n\n  return [];\n}\nexport function isLocationEnabled() {\n  return _isLocationEnabled.apply(this, arguments);\n}\n\nfunction _isLocationEnabled() {\n  _isLocationEnabled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee54() {\n    return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n      while (1) {\n        switch (_context54.prev = _context54.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web')) {\n              _context54.next = 2;\n              break;\n            }\n\n            return _context54.abrupt(\"return\", RNDeviceInfo.isLocationEnabled());\n\n          case 2:\n            return _context54.abrupt(\"return\", false);\n\n          case 3:\n          case \"end\":\n            return _context54.stop();\n        }\n      }\n    }, _callee54);\n  }));\n  return _isLocationEnabled.apply(this, arguments);\n}\n\nexport function isLocationEnabledSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isLocationEnabledSync();\n  }\n\n  return false;\n}\nexport function isHeadphonesConnected() {\n  return _isHeadphonesConnected.apply(this, arguments);\n}\n\nfunction _isHeadphonesConnected() {\n  _isHeadphonesConnected = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee55() {\n    return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n      while (1) {\n        switch (_context55.prev = _context55.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios')) {\n              _context55.next = 2;\n              break;\n            }\n\n            return _context55.abrupt(\"return\", RNDeviceInfo.isHeadphonesConnected());\n\n          case 2:\n            return _context55.abrupt(\"return\", false);\n\n          case 3:\n          case \"end\":\n            return _context55.stop();\n        }\n      }\n    }, _callee55);\n  }));\n  return _isHeadphonesConnected.apply(this, arguments);\n}\n\nexport function isHeadphonesConnectedSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.isHeadphonesConnectedSync();\n  }\n\n  return false;\n}\nexport function getAvailableLocationProviders() {\n  return _getAvailableLocationProviders.apply(this, arguments);\n}\n\nfunction _getAvailableLocationProviders() {\n  _getAvailableLocationProviders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee56() {\n    return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n      while (1) {\n        switch (_context56.prev = _context56.next) {\n          case 0:\n            if (!(Platform.OS === 'android' || Platform.OS === 'ios')) {\n              _context56.next = 2;\n              break;\n            }\n\n            return _context56.abrupt(\"return\", RNDeviceInfo.getAvailableLocationProviders());\n\n          case 2:\n            return _context56.abrupt(\"return\", {});\n\n          case 3:\n          case \"end\":\n            return _context56.stop();\n        }\n      }\n    }, _callee56);\n  }));\n  return _getAvailableLocationProviders.apply(this, arguments);\n}\n\nexport function getAvailableLocationProvidersSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getAvailableLocationProvidersSync();\n  }\n\n  return {};\n}\nexport function getDeviceToken() {\n  return _getDeviceToken.apply(this, arguments);\n}\n\nfunction _getDeviceToken() {\n  _getDeviceToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee57() {\n    return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n      while (1) {\n        switch (_context57.prev = _context57.next) {\n          case 0:\n            if (!(Platform.OS === 'ios')) {\n              _context57.next = 2;\n              break;\n            }\n\n            return _context57.abrupt(\"return\", RNDeviceInfo.getDeviceToken());\n\n          case 2:\n            return _context57.abrupt(\"return\", 'unknown');\n\n          case 3:\n          case \"end\":\n            return _context57.stop();\n        }\n      }\n    }, _callee57);\n  }));\n  return _getDeviceToken.apply(this, arguments);\n}\n\nvar deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      batteryLevel = _useState2[0],\n      setBatteryLevel = _useState2[1];\n\n  useEffect(function () {\n    var setInitialValue = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var initialValue;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getBatteryLevel();\n\n              case 2:\n                initialValue = _context.sent;\n                setBatteryLevel(initialValue);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function setInitialValue() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var onChange = function onChange(level) {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevel;\n}\nexport function useBatteryLevelIsLow() {\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      batteryLevelIsLow = _useState4[0],\n      setBatteryLevelIsLow = _useState4[1];\n\n  useEffect(function () {\n    var setInitialValue = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var initialValue;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getBatteryLevel();\n\n              case 2:\n                initialValue = _context2.sent;\n                setBatteryLevelIsLow(initialValue);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function setInitialValue() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var onChange = function onChange(level) {\n      setBatteryLevelIsLow(level);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevelIsLow;\n}\nexport function usePowerState() {\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      powerState = _useState6[0],\n      setPowerState = _useState6[1];\n\n  useEffect(function () {\n    var setInitialValue = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var initialValue;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return getPowerState();\n\n              case 2:\n                initialValue = _context3.sent;\n                setPowerState(initialValue);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function setInitialValue() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var onChange = function onChange(state) {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_powerStateDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return powerState;\n}\nexport function useFirstInstallTime() {\n  return useOnMount(getFirstInstallTime, -1);\n}\nexport function useDeviceName() {\n  return useOnMount(getDeviceName, 'unknown');\n}\nexport function useHasSystemFeature(feature) {\n  var asyncGetter = useCallback(function () {\n    return hasSystemFeature(feature);\n  }, [feature]);\n  return useOnMount(asyncGetter, false);\n}\nexport function useIsEmulator() {\n  return useOnMount(isEmulator, false);\n}\nexport { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\nvar deviceInfoModule = {\n  getAndroidId: getAndroidId,\n  getAndroidIdSync: getAndroidIdSync,\n  getApiLevel: getApiLevel,\n  getApiLevelSync: getApiLevelSync,\n  getApplicationName: getApplicationName,\n  getAvailableLocationProviders: getAvailableLocationProviders,\n  getAvailableLocationProvidersSync: getAvailableLocationProvidersSync,\n  getBaseOs: getBaseOs,\n  getBaseOsSync: getBaseOsSync,\n  getBatteryLevel: getBatteryLevel,\n  getBatteryLevelSync: getBatteryLevelSync,\n  getBootloader: getBootloader,\n  getBootloaderSync: getBootloaderSync,\n  getBrand: getBrand,\n  getBuildId: getBuildId,\n  getBuildIdSync: getBuildIdSync,\n  getBuildNumber: getBuildNumber,\n  getBundleId: getBundleId,\n  getCarrier: getCarrier,\n  getCarrierSync: getCarrierSync,\n  getCodename: getCodename,\n  getCodenameSync: getCodenameSync,\n  getDevice: getDevice,\n  getDeviceId: getDeviceId,\n  getDeviceName: getDeviceName,\n  getDeviceNameSync: getDeviceNameSync,\n  getDeviceSync: getDeviceSync,\n  getDeviceToken: getDeviceToken,\n  getDeviceType: getDeviceType,\n  getDisplay: getDisplay,\n  getDisplaySync: getDisplaySync,\n  getFingerprint: getFingerprint,\n  getFingerprintSync: getFingerprintSync,\n  getFirstInstallTime: getFirstInstallTime,\n  getFirstInstallTimeSync: getFirstInstallTimeSync,\n  getFontScale: getFontScale,\n  getFontScaleSync: getFontScaleSync,\n  getFreeDiskStorage: getFreeDiskStorage,\n  getFreeDiskStorageSync: getFreeDiskStorageSync,\n  getHardware: getHardware,\n  getHardwareSync: getHardwareSync,\n  getHost: getHost,\n  getHostSync: getHostSync,\n  getIncremental: getIncremental,\n  getIncrementalSync: getIncrementalSync,\n  getInstallerPackageName: getInstallerPackageName,\n  getInstallerPackageNameSync: getInstallerPackageNameSync,\n  getInstallReferrer: getInstallReferrer,\n  getInstallReferrerSync: getInstallReferrerSync,\n  getInstanceId: getInstanceId,\n  getInstanceIdSync: getInstanceIdSync,\n  getIpAddress: getIpAddress,\n  getIpAddressSync: getIpAddressSync,\n  getLastUpdateTime: getLastUpdateTime,\n  getLastUpdateTimeSync: getLastUpdateTimeSync,\n  getMacAddress: getMacAddress,\n  getMacAddressSync: getMacAddressSync,\n  getManufacturer: getManufacturer,\n  getManufacturerSync: getManufacturerSync,\n  getMaxMemory: getMaxMemory,\n  getMaxMemorySync: getMaxMemorySync,\n  getModel: getModel,\n  getPhoneNumber: getPhoneNumber,\n  getPhoneNumberSync: getPhoneNumberSync,\n  getPowerState: getPowerState,\n  getPowerStateSync: getPowerStateSync,\n  getPreviewSdkInt: getPreviewSdkInt,\n  getPreviewSdkIntSync: getPreviewSdkIntSync,\n  getProduct: getProduct,\n  getProductSync: getProductSync,\n  getReadableVersion: getReadableVersion,\n  getSecurityPatch: getSecurityPatch,\n  getSecurityPatchSync: getSecurityPatchSync,\n  getSerialNumber: getSerialNumber,\n  getSerialNumberSync: getSerialNumberSync,\n  getSystemAvailableFeatures: getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync: getSystemAvailableFeaturesSync,\n  getSystemName: getSystemName,\n  getSystemVersion: getSystemVersion,\n  getTags: getTags,\n  getTagsSync: getTagsSync,\n  getTotalDiskCapacity: getTotalDiskCapacity,\n  getTotalDiskCapacitySync: getTotalDiskCapacitySync,\n  getTotalMemory: getTotalMemory,\n  getTotalMemorySync: getTotalMemorySync,\n  getType: getType,\n  getTypeSync: getTypeSync,\n  getUniqueId: getUniqueId,\n  getUsedMemory: getUsedMemory,\n  getUsedMemorySync: getUsedMemorySync,\n  getUserAgent: getUserAgent,\n  getUserAgentSync: getUserAgentSync,\n  getVersion: getVersion,\n  hasNotch: hasNotch,\n  hasSystemFeature: hasSystemFeature,\n  hasSystemFeatureSync: hasSystemFeatureSync,\n  isAirplaneMode: isAirplaneMode,\n  isAirplaneModeSync: isAirplaneModeSync,\n  isBatteryCharging: isBatteryCharging,\n  isBatteryChargingSync: isBatteryChargingSync,\n  isCameraPresent: isCameraPresent,\n  isCameraPresentSync: isCameraPresentSync,\n  isEmulator: isEmulator,\n  isEmulatorSync: isEmulatorSync,\n  isHeadphonesConnected: isHeadphonesConnected,\n  isHeadphonesConnectedSync: isHeadphonesConnectedSync,\n  isLandscape: isLandscape,\n  isLandscapeSync: isLandscapeSync,\n  isLocationEnabled: isLocationEnabled,\n  isLocationEnabledSync: isLocationEnabledSync,\n  isPinOrFingerprintSet: isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync: isPinOrFingerprintSetSync,\n  isTablet: isTablet,\n  supported32BitAbis: supported32BitAbis,\n  supported32BitAbisSync: supported32BitAbisSync,\n  supported64BitAbis: supported64BitAbis,\n  supported64BitAbisSync: supported64BitAbisSync,\n  supportedAbis: supportedAbis,\n  supportedAbisSync: supportedAbisSync,\n  syncUniqueId: syncUniqueId,\n  useBatteryLevel: useBatteryLevel,\n  useBatteryLevelIsLow: useBatteryLevelIsLow,\n  useDeviceName: useDeviceName,\n  useFirstInstallTime: useFirstInstallTime,\n  useHasSystemFeature: useHasSystemFeature,\n  useIsEmulator: useIsEmulator,\n  usePowerState: usePowerState\n};\nexport default deviceInfoModule;","map":{"version":3,"sources":["index.ts"],"names":["Platform","uniqueId","RNDeviceInfo","getUniqueId","instanceId","serialNumber","androidId","deviceId","manufacturer","model","brand","systemName","systemVersion","buildId","apiLevel","bundleId","installerPackageName","appName","buildNumber","version","getVersion","getBuildNumber","deviceName","userAgent","bootloader","device","display","fingerprint","hardware","host","product","tags","type","baseOs","previewSdkInt","securityPatch","codeName","incremental","emulator","tablet","notch","_brand","getBrand","_model","getModel","devicesWithNotch","item","firstInstallTime","installReferrer","lastUpdateTime","totalMemory","maxMemory","Promise","isLandscapeSync","width","Dimensions","deviceType","_supportedAbis","_supported32BitAbis","_supported64BitAbis","deviceInfoEmitter","NativeModules","useState","useEffect","setInitialValue","initialValue","getBatteryLevel","setBatteryLevel","onChange","level","subscription","setBatteryLevelIsLow","getPowerState","setPowerState","state","useOnMount","asyncGetter","useCallback","hasSystemFeature","deviceInfoModule","getAndroidId","getAndroidIdSync","getApiLevel","getApiLevelSync","getApplicationName","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBaseOs","getBaseOsSync","getBatteryLevelSync","getBootloader","getBootloaderSync","getBuildId","getBuildIdSync","getBundleId","getCarrier","getCarrierSync","getCodename","getCodenameSync","getDevice","getDeviceId","getDeviceName","getDeviceNameSync","getDeviceSync","getDeviceToken","getDeviceType","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getFirstInstallTime","getFirstInstallTimeSync","getFontScale","getFontScaleSync","getFreeDiskStorage","getFreeDiskStorageSync","getHardware","getHardwareSync","getHost","getHostSync","getIncremental","getIncrementalSync","getInstallerPackageName","getInstallerPackageNameSync","getInstallReferrer","getInstallReferrerSync","getInstanceId","getInstanceIdSync","getIpAddress","getIpAddressSync","getLastUpdateTime","getLastUpdateTimeSync","getMacAddress","getMacAddressSync","getManufacturer","getManufacturerSync","getMaxMemory","getMaxMemorySync","getPhoneNumber","getPhoneNumberSync","getPowerStateSync","getPreviewSdkInt","getPreviewSdkIntSync","getProduct","getProductSync","getReadableVersion","getSecurityPatch","getSecurityPatchSync","getSerialNumber","getSerialNumberSync","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","getSystemName","getSystemVersion","getTags","getTagsSync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalMemory","getTotalMemorySync","getType","getTypeSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","hasNotch","hasSystemFeatureSync","isAirplaneMode","isAirplaneModeSync","isBatteryCharging","isBatteryChargingSync","isCameraPresent","isCameraPresentSync","isEmulator","isEmulatorSync","isHeadphonesConnected","isHeadphonesConnectedSync","isLandscape","isLocationEnabled","isLocationEnabledSync","isPinOrFingerprintSet","isPinOrFingerprintSetSync","isTablet","supported32BitAbis","supported32BitAbisSync","supported64BitAbis","supported64BitAbisSync","supportedAbis","supportedAbisSync","syncUniqueId","useBatteryLevel","useBatteryLevelIsLow","useDeviceName","useFirstInstallTime","useHasSystemFeature","useIsEmulator","usePowerState"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState } from './internal/types';\n\nlet uniqueId: string;\nexport function getUniqueId() {\n  if (!uniqueId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      uniqueId = RNDeviceInfo.uniqueId;\n    } else {\n      uniqueId = 'unknown';\n    }\n  }\n  return uniqueId;\n}\n\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = getUniqueId();\n  }\n  return uniqueId;\n}\n\nlet instanceId: string;\nexport async function getInstanceId() {\n  if (!instanceId) {\n    if (Platform.OS === 'android') {\n      instanceId = await RNDeviceInfo.getInstanceId();\n    } else {\n      instanceId = 'unknown';\n    }\n  }\n  return instanceId;\n}\n\nexport function getInstanceIdSync() {\n  if (!instanceId) {\n    if (Platform.OS === 'android') {\n      instanceId = RNDeviceInfo.getInstanceIdSync();\n    } else {\n      instanceId = 'unknown';\n    }\n  }\n  return instanceId;\n}\n\nlet serialNumber: string;\nexport async function getSerialNumber() {\n  if (!serialNumber) {\n    if (Platform.OS === 'android') {\n      serialNumber = await RNDeviceInfo.getSerialNumber();\n    } else {\n      serialNumber = 'unknown';\n    }\n  }\n  return serialNumber;\n}\n\nexport function getSerialNumberSync() {\n  if (!serialNumber) {\n    if (Platform.OS === 'android') {\n      serialNumber = RNDeviceInfo.getSerialNumberSync();\n    } else {\n      serialNumber = 'unknown';\n    }\n  }\n  return serialNumber;\n}\n\nlet androidId: string;\nexport async function getAndroidId() {\n  if (!androidId) {\n    if (Platform.OS === 'android') {\n      androidId = await RNDeviceInfo.getAndroidId();\n    } else {\n      androidId = 'unknown';\n    }\n  }\n  return androidId;\n}\n\nexport function getAndroidIdSync() {\n  if (!androidId) {\n    if (Platform.OS === 'android') {\n      androidId = RNDeviceInfo.getAndroidIdSync();\n    } else {\n      androidId = 'unknown';\n    }\n  }\n  return androidId;\n}\n\nexport async function getIpAddress() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.getIpAddress();\n  }\n  return 'unknown';\n}\n\nexport function getIpAddressSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.getIpAddressSync();\n  }\n  return 'unknown';\n}\n\nexport async function isCameraPresent() {\n  if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return RNDeviceInfo.isCameraPresent();\n  }\n  return false;\n}\n\nexport function isCameraPresentSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return RNDeviceInfo.isCameraPresentSync();\n  }\n  return false;\n}\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nlet deviceId: string;\nexport function getDeviceId() {\n  if (!deviceId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceId = RNDeviceInfo.deviceId;\n    } else {\n      deviceId = 'unknown';\n    }\n  }\n  return deviceId;\n}\n\nlet manufacturer: string;\nexport async function getManufacturer() {\n  if (!manufacturer) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      manufacturer = await RNDeviceInfo.getSystemManufacturer();\n    } else if (Platform.OS === 'ios') {\n      manufacturer = 'Apple';\n    } else {\n      manufacturer = 'unknown';\n    }\n  }\n  return manufacturer;\n}\n\nexport function getManufacturerSync() {\n  if (!manufacturer) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      manufacturer = RNDeviceInfo.getSystemManufacturerSync();\n    } else if (Platform.OS === 'ios') {\n      manufacturer = 'Apple';\n    } else {\n      manufacturer = 'unknown';\n    }\n  }\n  return manufacturer;\n}\n\nlet model: string;\nexport function getModel() {\n  if (!model) {\n    if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'windows') {\n      model = RNDeviceInfo.model;\n    } else {\n      model = 'unknown';\n    }\n  }\n  return model;\n}\n\nlet brand: string;\nexport function getBrand() {\n  if (!brand) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      brand = RNDeviceInfo.brand;\n    } else {\n      brand = 'unknown';\n    }\n  }\n  return brand;\n}\n\nlet systemName: string;\nexport function getSystemName() {\n  if (!systemName) {\n    if (Platform.OS === 'ios') {\n      systemName = RNDeviceInfo.systemName;\n    } else if (Platform.OS === 'android') {\n      systemName = 'Android';\n    } else if (Platform.OS === 'windows') {\n      systemName = 'Windows';\n    } else {\n      systemName = 'unknown';\n    }\n  }\n  return systemName;\n}\n\nlet systemVersion: string;\nexport function getSystemVersion() {\n  if (!systemVersion) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      systemVersion = RNDeviceInfo.systemVersion;\n    } else {\n      systemVersion = 'unknown';\n    }\n  }\n  return systemVersion;\n}\n\nlet buildId: string;\nexport async function getBuildId() {\n  if (!buildId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      buildId = await RNDeviceInfo.getBuildId();\n    } else {\n      buildId = 'unknown';\n    }\n  }\n  return buildId;\n}\n\nexport function getBuildIdSync() {\n  if (!buildId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      buildId = RNDeviceInfo.getBuildIdSync();\n    } else {\n      buildId = 'unknown';\n    }\n  }\n  return buildId;\n}\n\nlet apiLevel: number;\nexport async function getApiLevel() {\n  if (!apiLevel) {\n    if (Platform.OS === 'android') {\n      apiLevel = await RNDeviceInfo.getApiLevel();\n    } else {\n      apiLevel = -1;\n    }\n  }\n  return apiLevel;\n}\n\nexport function getApiLevelSync() {\n  if (!apiLevel) {\n    if (Platform.OS === 'android') {\n      apiLevel = RNDeviceInfo.getApiLevelSync();\n    } else {\n      apiLevel = -1;\n    }\n  }\n  return apiLevel;\n}\n\nlet bundleId: string;\nexport function getBundleId() {\n  if (!bundleId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      bundleId = RNDeviceInfo.bundleId;\n    } else {\n      bundleId = 'unknown';\n    }\n  }\n  return bundleId;\n}\n\nlet installerPackageName: string;\nexport async function getInstallerPackageName() {\n  if (!installerPackageName) {\n    if (Platform.OS === 'android') {\n      installerPackageName = await RNDeviceInfo.getInstallerPackageName();\n    } else {\n      installerPackageName = 'unknown';\n    }\n  }\n\n  return installerPackageName;\n}\n\nexport function getInstallerPackageNameSync() {\n  if (!installerPackageName) {\n    if (Platform.OS === 'android') {\n      installerPackageName = RNDeviceInfo.getInstallerPackageNameSync();\n    } else {\n      installerPackageName = 'unknown';\n    }\n  }\n\n  return installerPackageName;\n}\n\nlet appName: string;\nexport function getApplicationName() {\n  if (!appName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      appName = RNDeviceInfo.appName;\n    } else {\n      appName = 'unknown';\n    }\n  }\n  return appName;\n}\n\nlet buildNumber: string;\nexport function getBuildNumber() {\n  if (!buildNumber) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      buildNumber = RNDeviceInfo.buildNumber;\n    } else {\n      buildNumber = 'unknown';\n    }\n  }\n  return buildNumber;\n}\n\nlet version: string;\nexport function getVersion() {\n  if (!version) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      version = RNDeviceInfo.appVersion;\n    } else {\n      version = 'unknown';\n    }\n  }\n  return version;\n}\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nlet deviceName: string;\nexport async function getDeviceName() {\n  if (!deviceName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceName = await RNDeviceInfo.getDeviceName();\n    } else {\n      deviceName = 'unknown';\n    }\n  }\n  return deviceName;\n}\n\nexport function getDeviceNameSync() {\n  if (!deviceName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceName = RNDeviceInfo.getDeviceNameSync();\n    } else {\n      deviceName = 'unknown';\n    }\n  }\n  return deviceName;\n}\n\nexport async function getUsedMemory() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getUsedMemory();\n  }\n  return -1;\n}\n\nexport function getUsedMemorySync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getUsedMemorySync();\n  }\n  return -1;\n}\n\nlet userAgent: string;\nexport async function getUserAgent() {\n  if (!userAgent) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n      userAgent = await RNDeviceInfo.getUserAgent();\n    } else {\n      userAgent = 'unknown';\n    }\n  }\n  return userAgent;\n}\n\nexport function getUserAgentSync() {\n  if (!userAgent) {\n    // getUserAgentSync is not available on iOS since it rely on an completion operation\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      userAgent = RNDeviceInfo.getUserAgentSync();\n    } else {\n      userAgent = 'unknown';\n    }\n  }\n  return userAgent;\n}\n\nexport async function getFontScale() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getFontScale();\n  }\n  return -1;\n}\n\nexport function getFontScaleSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getFontScaleSync();\n  }\n  return -1;\n}\n\nlet bootloader: string;\nexport async function getBootloader() {\n  if (!bootloader) {\n    if (Platform.OS === 'android') {\n      bootloader = await RNDeviceInfo.getBootloader();\n    } else {\n      bootloader = 'unknown';\n    }\n  }\n  return bootloader;\n}\n\nexport function getBootloaderSync() {\n  if (!bootloader) {\n    if (Platform.OS === 'android') {\n      bootloader = RNDeviceInfo.getBootloaderSync();\n    } else {\n      bootloader = 'unknown';\n    }\n  }\n  return bootloader;\n}\n\nlet device: string;\nexport async function getDevice() {\n  if (!device) {\n    if (Platform.OS === 'android') {\n      device = await RNDeviceInfo.getDevice();\n    } else {\n      device = 'unknown';\n    }\n  }\n  return device;\n}\n\nexport function getDeviceSync() {\n  if (!device) {\n    if (Platform.OS === 'android') {\n      device = RNDeviceInfo.getDeviceSync();\n    } else {\n      device = 'unknown';\n    }\n  }\n  return device;\n}\n\nlet display: string;\nexport async function getDisplay() {\n  if (!display) {\n    if (Platform.OS === 'android') {\n      display = await RNDeviceInfo.getDisplay();\n    } else {\n      display = 'unknown';\n    }\n  }\n  return display;\n}\n\nexport function getDisplaySync() {\n  if (!display) {\n    if (Platform.OS === 'android') {\n      display = RNDeviceInfo.getDisplaySync();\n    } else {\n      display = 'unknown';\n    }\n  }\n  return display;\n}\n\nlet fingerprint: string;\nexport async function getFingerprint() {\n  if (!fingerprint) {\n    if (Platform.OS === 'android') {\n      fingerprint = await RNDeviceInfo.getFingerprint();\n    } else {\n      fingerprint = 'unknown';\n    }\n  }\n  return fingerprint;\n}\n\nexport function getFingerprintSync() {\n  if (!fingerprint) {\n    if (Platform.OS === 'android') {\n      fingerprint = RNDeviceInfo.getFingerprintSync();\n    } else {\n      fingerprint = 'unknown';\n    }\n  }\n  return fingerprint;\n}\n\nlet hardware: string;\nexport async function getHardware() {\n  if (!hardware) {\n    if (Platform.OS === 'android') {\n      hardware = await RNDeviceInfo.getHardware();\n    } else {\n      hardware = 'unknown';\n    }\n  }\n  return hardware;\n}\n\nexport function getHardwareSync() {\n  if (!hardware) {\n    if (Platform.OS === 'android') {\n      hardware = RNDeviceInfo.getHardwareSync();\n    } else {\n      hardware = 'unknown';\n    }\n  }\n  return hardware;\n}\n\nlet host: string;\nexport async function getHost() {\n  if (!host) {\n    if (Platform.OS === 'android') {\n      host = await RNDeviceInfo.getHost();\n    } else {\n      host = 'unknown';\n    }\n  }\n  return host;\n}\n\nexport function getHostSync() {\n  if (!host) {\n    if (Platform.OS === 'android') {\n      host = RNDeviceInfo.getHostSync();\n    } else {\n      host = 'unknown';\n    }\n  }\n  return host;\n}\n\nlet product: string;\nexport async function getProduct() {\n  if (!product) {\n    if (Platform.OS === 'android') {\n      product = await RNDeviceInfo.getProduct();\n    } else {\n      product = 'unknown';\n    }\n  }\n  return product;\n}\n\nexport function getProductSync() {\n  if (!product) {\n    if (Platform.OS === 'android') {\n      product = RNDeviceInfo.getProductSync();\n    } else {\n      product = 'unknown';\n    }\n  }\n  return product;\n}\n\nlet tags: string;\nexport async function getTags() {\n  if (!tags) {\n    if (Platform.OS === 'android') {\n      tags = await RNDeviceInfo.getTags();\n    } else {\n      tags = 'unknown';\n    }\n  }\n  return tags;\n}\n\nexport function getTagsSync() {\n  if (!tags) {\n    if (Platform.OS === 'android') {\n      tags = RNDeviceInfo.getTagsSync();\n    } else {\n      tags = 'unknown';\n    }\n  }\n  return tags;\n}\n\nlet type: string;\nexport async function getType() {\n  if (!type) {\n    if (Platform.OS === 'android') {\n      type = await RNDeviceInfo.getType();\n    } else {\n      type = 'unknown';\n    }\n  }\n  return type;\n}\n\nexport function getTypeSync() {\n  if (!type) {\n    if (Platform.OS === 'android') {\n      type = RNDeviceInfo.getTypeSync();\n    } else {\n      type = 'unknown';\n    }\n  }\n  return type;\n}\n\nlet baseOs: string;\nexport async function getBaseOs() {\n  if (!baseOs) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      baseOs = await RNDeviceInfo.getBaseOs();\n    } else {\n      baseOs = 'unknown';\n    }\n  }\n  return baseOs;\n}\n\nexport function getBaseOsSync() {\n  if (!baseOs) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      baseOs = RNDeviceInfo.getBaseOsSync();\n    } else {\n      baseOs = 'unknown';\n    }\n  }\n  return baseOs;\n}\n\nlet previewSdkInt: number;\nexport async function getPreviewSdkInt() {\n  if (!previewSdkInt) {\n    if (Platform.OS === 'android') {\n      previewSdkInt = await RNDeviceInfo.getPreviewSdkInt();\n    } else {\n      previewSdkInt = -1;\n    }\n  }\n  return previewSdkInt;\n}\n\nexport function getPreviewSdkIntSync() {\n  if (!previewSdkInt) {\n    if (Platform.OS === 'android') {\n      previewSdkInt = RNDeviceInfo.getPreviewSdkIntSync();\n    } else {\n      previewSdkInt = -1;\n    }\n  }\n  return previewSdkInt;\n}\n\nlet securityPatch: string;\nexport async function getSecurityPatch() {\n  if (!securityPatch) {\n    if (Platform.OS === 'android') {\n      securityPatch = await RNDeviceInfo.getSecurityPatch();\n    } else {\n      securityPatch = 'unknown';\n    }\n  }\n  return securityPatch;\n}\n\nexport function getSecurityPatchSync() {\n  if (!securityPatch) {\n    if (Platform.OS === 'android') {\n      securityPatch = RNDeviceInfo.getSecurityPatchSync();\n    } else {\n      securityPatch = 'unknown';\n    }\n  }\n  return securityPatch;\n}\n\nlet codeName: string;\nexport async function getCodename() {\n  if (!codeName) {\n    if (Platform.OS === 'android') {\n      codeName = await RNDeviceInfo.getCodename();\n    } else {\n      codeName = 'unknown';\n    }\n  }\n  return codeName;\n}\n\nexport function getCodenameSync() {\n  if (!codeName) {\n    if (Platform.OS === 'android') {\n      codeName = RNDeviceInfo.getCodenameSync();\n    } else {\n      codeName = 'unknown';\n    }\n  }\n  return codeName;\n}\n\nlet incremental: string;\nexport async function getIncremental() {\n  if (!incremental) {\n    if (Platform.OS === 'android') {\n      incremental = await RNDeviceInfo.getIncremental();\n    } else {\n      incremental = 'unknown';\n    }\n  }\n  return incremental;\n}\n\nexport function getIncrementalSync() {\n  if (!incremental) {\n    if (Platform.OS === 'android') {\n      incremental = RNDeviceInfo.getIncrementalSync();\n    } else {\n      incremental = 'unknown';\n    }\n  }\n  return incremental;\n}\n\nlet emulator: boolean;\nexport async function isEmulator() {\n  if (emulator === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      emulator = await RNDeviceInfo.isEmulator();\n    } else {\n      emulator = false;\n    }\n  }\n  return emulator;\n}\n\nexport function isEmulatorSync() {\n  if (emulator === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      emulator = RNDeviceInfo.isEmulatorSync();\n    } else {\n      emulator = false;\n    }\n  }\n  return emulator;\n}\n\nlet tablet: boolean;\nexport function isTablet() {\n  if (tablet === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      tablet = RNDeviceInfo.isTablet;\n    } else {\n      tablet = false;\n    }\n  }\n  return tablet;\n}\n\nexport async function isPinOrFingerprintSet() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.isPinOrFingerprintSet();\n  }\n  return false;\n}\n\nexport function isPinOrFingerprintSetSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.isPinOrFingerprintSetSync();\n  }\n  return false;\n}\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet firstInstallTime: number;\nexport async function getFirstInstallTime() {\n  if (!firstInstallTime) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      firstInstallTime = await RNDeviceInfo.getFirstInstallTime();\n    } else {\n      firstInstallTime = -1;\n    }\n  }\n  return firstInstallTime;\n}\n\nexport function getFirstInstallTimeSync() {\n  if (!firstInstallTime) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      firstInstallTime = RNDeviceInfo.getFirstInstallTimeSync();\n    } else {\n      firstInstallTime = -1;\n    }\n  }\n  return firstInstallTime;\n}\n\nlet installReferrer: string;\nexport async function getInstallReferrer() {\n  if (!installReferrer) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      installReferrer = await RNDeviceInfo.getInstallReferrer();\n    } else {\n      installReferrer = 'unknown';\n    }\n  }\n  return installReferrer;\n}\n\nexport function getInstallReferrerSync() {\n  if (!installReferrer) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      installReferrer = RNDeviceInfo.getInstallReferrerSync();\n    } else {\n      installReferrer = 'unknown';\n    }\n  }\n  return installReferrer;\n}\n\nlet lastUpdateTime: number;\nexport async function getLastUpdateTime() {\n  if (!lastUpdateTime) {\n    if (Platform.OS === 'android') {\n      lastUpdateTime = await RNDeviceInfo.getLastUpdateTime();\n    } else {\n      lastUpdateTime = -1;\n    }\n  }\n  return lastUpdateTime;\n}\n\nexport function getLastUpdateTimeSync() {\n  if (!lastUpdateTime) {\n    if (Platform.OS === 'android') {\n      lastUpdateTime = RNDeviceInfo.getLastUpdateTimeSync();\n    } else {\n      lastUpdateTime = -1;\n    }\n  }\n  return lastUpdateTime;\n}\n\nexport async function getPhoneNumber() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getPhoneNumber();\n  }\n  return 'unknown';\n}\n\nexport function getPhoneNumberSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getPhoneNumberSync();\n  }\n  return 'unknown';\n}\n\nexport async function getCarrier() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getCarrier();\n  }\n  return 'unknown';\n}\n\nexport function getCarrierSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getCarrierSync();\n  }\n  return 'unknown';\n}\n\nlet totalMemory: number;\nexport async function getTotalMemory() {\n  if (!totalMemory) {\n    if (\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios' ||\n      Platform.OS === 'windows' ||\n      Platform.OS === 'web'\n    ) {\n      totalMemory = await RNDeviceInfo.getTotalMemory();\n    } else {\n      totalMemory = -1;\n    }\n  }\n  return totalMemory;\n}\n\nexport function getTotalMemorySync() {\n  if (!totalMemory) {\n    if (\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios' ||\n      Platform.OS === 'windows' ||\n      Platform.OS === 'web'\n    ) {\n      totalMemory = RNDeviceInfo.getTotalMemorySync();\n    } else {\n      totalMemory = -1;\n    }\n  }\n  return totalMemory;\n}\n\nlet maxMemory: number;\nexport async function getMaxMemory() {\n  if (!maxMemory) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      maxMemory = await RNDeviceInfo.getMaxMemory();\n    } else {\n      maxMemory = -1;\n    }\n  }\n  return maxMemory;\n}\n\nexport function getMaxMemorySync() {\n  if (!maxMemory) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      maxMemory = RNDeviceInfo.getMaxMemorySync();\n    } else {\n      maxMemory = -1;\n    }\n  }\n  return maxMemory;\n}\n\nexport async function getTotalDiskCapacity() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getTotalDiskCapacity();\n  }\n  return -1;\n}\n\nexport function getTotalDiskCapacitySync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getTotalDiskCapacitySync();\n  }\n  return -1;\n}\n\nexport async function getFreeDiskStorage() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getFreeDiskStorage();\n  }\n  return -1;\n}\n\nexport function getFreeDiskStorageSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getFreeDiskStorageSync();\n  }\n  return -1;\n}\n\nexport async function getBatteryLevel() {\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'windows' ||\n    Platform.OS === 'web'\n  ) {\n    return RNDeviceInfo.getBatteryLevel();\n  }\n  return -1;\n}\n\nexport function getBatteryLevelSync() {\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'windows' ||\n    Platform.OS === 'web'\n  ) {\n    return RNDeviceInfo.getBatteryLevelSync();\n  }\n  return -1;\n}\n\nexport async function getPowerState() {\n  if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.getPowerState();\n  }\n  return {};\n}\n\nexport function getPowerStateSync() {\n  if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.getPowerStateSync();\n  }\n  return {};\n}\n\nexport async function isBatteryCharging() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isBatteryCharging();\n  }\n  return false;\n}\n\nexport function isBatteryChargingSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isBatteryChargingSync();\n  }\n  return false;\n}\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport async function isAirplaneMode() {\n  if (Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.isAirplaneMode();\n  }\n  return Promise.resolve(false);\n}\n\nexport function isAirplaneModeSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.isAirplaneModeSync();\n  }\n  return false;\n}\n\nlet deviceType: DeviceType;\nexport function getDeviceType() {\n  if (!deviceType) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      deviceType = RNDeviceInfo.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n  return deviceType;\n}\n\nexport function getDeviceTypeSync() {\n  if (!deviceType) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      deviceType = RNDeviceInfo.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n  return deviceType;\n}\n\nlet _supportedAbis: string[];\nexport async function supportedAbis() {\n  if (!_supportedAbis) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      _supportedAbis = await RNDeviceInfo.getSupportedAbis();\n    } else {\n      _supportedAbis = [];\n    }\n  }\n  return _supportedAbis;\n}\n\nexport function supportedAbisSync() {\n  if (!_supportedAbis) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      _supportedAbis = RNDeviceInfo.getSupportedAbisSync();\n    } else {\n      _supportedAbis = [];\n    }\n  }\n  return _supportedAbis;\n}\n\nlet _supported32BitAbis: string[];\nexport async function supported32BitAbis() {\n  if (!_supported32BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported32BitAbis = await RNDeviceInfo.getSupported32BitAbis();\n    } else {\n      _supported32BitAbis = [];\n    }\n  }\n  return _supported32BitAbis;\n}\n\nexport function supported32BitAbisSync() {\n  if (!_supported32BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported32BitAbis = RNDeviceInfo.getSupported32BitAbisSync();\n    } else {\n      _supported32BitAbis = [];\n    }\n  }\n  return _supported32BitAbis;\n}\n\nlet _supported64BitAbis: string[];\nexport async function supported64BitAbis() {\n  if (!_supported64BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported64BitAbis = await RNDeviceInfo.getSupported64BitAbis();\n    } else {\n      _supported64BitAbis = [];\n    }\n  }\n  return _supported64BitAbis;\n}\n\nexport function supported64BitAbisSync() {\n  if (!_supported64BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported64BitAbis = RNDeviceInfo.getSupported64BitAbisSync();\n    } else {\n      _supported64BitAbis = [];\n    }\n  }\n  return _supported64BitAbis;\n}\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport async function getSystemAvailableFeatures() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getSystemAvailableFeatures();\n  }\n  return [];\n}\n\nexport function getSystemAvailableFeaturesSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getSystemAvailableFeaturesSync();\n  }\n  return [];\n}\n\nexport async function isLocationEnabled() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isLocationEnabled();\n  }\n  return false;\n}\n\nexport function isLocationEnabledSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isLocationEnabledSync();\n  }\n  return false;\n}\n\nexport async function isHeadphonesConnected() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.isHeadphonesConnected();\n  }\n  return false;\n}\n\nexport function isHeadphonesConnectedSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.isHeadphonesConnectedSync();\n  }\n  return false;\n}\n\nexport async function getAvailableLocationProviders() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getAvailableLocationProviders();\n  }\n  return {};\n}\n\nexport function getAvailableLocationProvidersSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getAvailableLocationProvidersSync();\n  }\n  return {};\n}\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevelIsLow(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): PowerState | {} {\n  const [powerState, setPowerState] = useState<PowerState | {}>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: PowerState | {} = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst deviceInfoModule: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacitySync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  hasNotch,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n};\n\nexport default deviceInfoModule;\n"]},"metadata":{},"sourceType":"module"}