{"ast":null,"code":"import _slicedToArray from\"/Users/cramj/Documents/New PWA/ubet-project (1)/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext,useMemo}from\"react\";import DatePicker from'react-mobile-datepicker';import moment from'moment';import{getDates}from\"../../../util\";var Calendar=function Calendar(props){var onDate=props.onDate;var date=new Date();var year=date.getFullYear();var month=date.getMonth();var day=date.getDate();var _useState=useState({min:new Date(1989,0,1),max:new Date(year-18,month,day)}),_useState2=_slicedToArray(_useState,2),dateRange=_useState2[0],setRange=_useState2[1];var _useState3=useState(new Date(year-18,month,day)),_useState4=_slicedToArray(_useState3,2),time=_useState4[0],setTime=_useState4[1];var onChange=function onChange(e){var newDate=new Date(e);var year=newDate.getFullYear();var month=newDate.getMonth();var day=newDate.getDate();setTime(e);onDate(\"\".concat(year,\"\\u5E74\").concat(month+1,\"\\u6708\").concat(day,\"\\u65E5\"));};return/*#__PURE__*/React.createElement(\"div\",{className:\"calendar-setting\"},/*#__PURE__*/React.createElement(DatePicker,{value:time,isOpen:true,isPopup:false,showHeader:false,showFooter:false,min:dateRange.min,max:dateRange.max,onChange:onChange}));};export default Calendar;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/profile/settings/calendar.js"],"names":["React","useState","useEffect","useContext","useMemo","DatePicker","moment","getDates","Calendar","props","onDate","date","Date","year","getFullYear","month","getMonth","day","getDate","min","max","dateRange","setRange","time","setTime","onChange","e","newDate"],"mappings":"6JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,CAAkDC,OAAlD,KAAgE,OAAhE,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,OAASC,QAAT,KAAyB,eAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAU,IACfC,CAAAA,MADe,CACJD,KADI,CACfC,MADe,CAGvB,GAAMC,CAAAA,IAAI,CAAI,GAAIC,CAAAA,IAAJ,EAAd,CACA,GAAMC,CAAAA,IAAI,CAAIF,IAAI,CAACG,WAAL,EAAd,CACA,GAAMC,CAAAA,KAAK,CAAGJ,IAAI,CAACK,QAAL,EAAd,CACA,GAAMC,CAAAA,GAAG,CAAKN,IAAI,CAACO,OAAL,EAAd,CANuB,cASSjB,QAAQ,CAAC,CACrCkB,GAAG,CAAG,GAAIP,CAAAA,IAAJ,CAAS,IAAT,CAAc,CAAd,CAAgB,CAAhB,CAD+B,CAErCQ,GAAG,CAAG,GAAIR,CAAAA,IAAJ,CAASC,IAAI,CAAG,EAAhB,CAAoBE,KAApB,CAA2BE,GAA3B,CAF+B,CAAD,CATjB,wCASfI,SATe,eASHC,QATG,8BAaIrB,QAAQ,CAAC,GAAIW,CAAAA,IAAJ,CAASC,IAAI,CAAG,EAAhB,CAAoBE,KAApB,CAA2BE,GAA3B,CAAD,CAbZ,yCAafM,IAbe,eAaRC,OAbQ,eAgBvB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAM,CACnB,GAAMC,CAAAA,OAAO,CAAK,GAAIf,CAAAA,IAAJ,CAASc,CAAT,CAAlB,CACA,GAAMb,CAAAA,IAAI,CAAQc,OAAO,CAACb,WAAR,EAAlB,CACA,GAAMC,CAAAA,KAAK,CAAOY,OAAO,CAACX,QAAR,EAAlB,CACA,GAAMC,CAAAA,GAAG,CAASU,OAAO,CAACT,OAAR,EAAlB,CACAM,OAAO,CAACE,CAAD,CAAP,CACAhB,MAAM,WAAIG,IAAJ,kBAAYE,KAAK,CAAG,CAApB,kBAAyBE,GAAzB,WAAN,CACH,CAPD,CAUA,mBACI,2BAAK,SAAS,CAAC,kBAAf,eACI,oBAAC,UAAD,EACI,KAAK,CAAEM,IADX,CAEI,MAAM,CAAE,IAFZ,CAGI,OAAO,CAAE,KAHb,CAII,UAAU,CAAE,KAJhB,CAKI,UAAU,CAAE,KALhB,CAMI,GAAG,CAAEF,SAAS,CAACF,GANnB,CAOI,GAAG,CAAEE,SAAS,CAACD,GAPnB,CAQI,QAAQ,CAAEK,QARd,EADJ,CADJ,CAcH,CAxCD,CA0CA,cAAejB,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect, useContext , useMemo} from \"react\";\r\nimport DatePicker from 'react-mobile-datepicker';\r\nimport moment from 'moment'\r\n\r\nimport { getDates } from \"../../../util\";\r\n\r\nconst Calendar = (props) =>{\r\n    const { onDate } = props\r\n\r\n    const date  = new Date();\r\n    const year  = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day   = date.getDate();\r\n\r\n    \r\n    const [ dateRange , setRange ]= useState({\r\n        min : new Date(1989,0,1),\r\n        max : new Date(year - 18, month, day)\r\n    })\r\n    const [ time , setTime ] = useState(new Date(year - 18, month, day))\r\n\r\n\r\n    const onChange = (e) =>{\r\n        const newDate   = new Date(e);\r\n        const year      = newDate.getFullYear();\r\n        const month     = newDate.getMonth();\r\n        const day       = newDate.getDate();\r\n        setTime(e)\r\n        onDate(`${year}年${month + 1}月${day}日`)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-setting\">\r\n            <DatePicker\r\n                value={time}\r\n                isOpen={true}\r\n                isPopup={false}\r\n                showHeader={false}\r\n                showFooter={false}\r\n                min={dateRange.min}\r\n                max={dateRange.max}\r\n                onChange={onChange}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar"]},"metadata":{},"sourceType":"module"}