{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nconst easeOutCubic = (t, b, c, d) => {\n  t /= d;\n  t--;\n  return c * (t * t * t + 1) + b;\n};\n\nexports.setScrollAnimation = (root, currentPosition, changingValue) => {\n  let start = 1;\n  let isStop = false;\n\n  const animation = () => {\n    if (isStop) return;\n    const offset = easeOutCubic(start / 100, currentPosition, changingValue, 0.1);\n    requestAnimationFrame(animation);\n    root.scrollTo(0, offset);\n    const target = currentPosition + changingValue;\n    start += 1;\n    isStop = offset === target;\n  };\n\n  return animation;\n};\n\nconst useScrollAnimation = (root, refs) => {\n  const timer = react_1.useRef(null);\n  const onScroll = react_1.useCallback((data, itemID, hasAnimation) => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n\n    const firstID = data[0].id;\n    const basicElm = refs[firstID].current;\n    const currentElm = refs[itemID || firstID].current;\n    const _root = root.current;\n\n    if (_root && basicElm && currentElm) {\n      timer.current = setTimeout(() => {\n        const basicOffsetTop = basicElm.offsetTop;\n        const targetOffsetTop = currentElm.offsetTop - basicOffsetTop;\n        const animation = exports.setScrollAnimation(_root, _root.scrollTop, targetOffsetTop - _root.scrollTop);\n        requestAnimationFrame(animation);\n      }, hasAnimation ? 300 : 0);\n    }\n  }, [refs, root]);\n  return onScroll;\n};\n\nexports.default = useScrollAnimation;","map":{"version":3,"sources":["../../src/hooks/useScrollAnimation.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAIA,MAAM,YAAY,GAAG,CAAC,CAAD,EAAY,CAAZ,EAAuB,CAAvB,EAAkC,CAAlC,KAA+C;AAClE,EAAA,CAAC,IAAI,CAAL;AACA,EAAA,CAAC;AACD,SAAO,CAAC,IAAI,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAhB,CAAD,GAAsB,CAA7B;AACD,CAJD;;AAMa,OAAA,CAAA,kBAAA,GAAqB,CAChC,IADgC,EAEhC,eAFgC,EAGhC,aAHgC,KAI9B;AACF,MAAI,KAAK,GAAG,CAAZ;AACA,MAAI,MAAM,GAAG,KAAb;;AACA,QAAM,SAAS,GAAG,MAAK;AACrB,QAAI,MAAJ,EAAY;AACZ,UAAM,MAAM,GAAG,YAAY,CACzB,KAAK,GAAG,GADiB,EAEzB,eAFyB,EAGzB,aAHyB,EAIzB,GAJyB,CAA3B;AAMA,IAAA,qBAAqB,CAAC,SAAD,CAArB;AACA,IAAA,IAAI,CAAC,QAAL,CAAc,CAAd,EAAiB,MAAjB;AACA,UAAM,MAAM,GAAG,eAAe,GAAG,aAAjC;AACA,IAAA,KAAK,IAAI,CAAT;AACA,IAAA,MAAM,GAAG,MAAM,KAAK,MAApB;AACD,GAbD;;AAeA,SAAO,SAAP;AACD,CAvBY;;AAyBb,MAAM,kBAAkB,GAAG,CACzB,IADyB,EAEzB,IAFyB,KAGvB;AACF,QAAM,KAAK,GAAG,OAAA,CAAA,MAAA,CAAsB,IAAtB,CAAd;AAEA,QAAM,QAAQ,GAAG,OAAA,CAAA,WAAA,CACf,CAAC,IAAD,EAAqB,MAArB,EAAqC,YAArC,KAA+D;AAC7D,QAAI,KAAK,CAAC,OAAV,EAAmB;AACjB,MAAA,YAAY,CAAC,KAAK,CAAC,OAAP,CAAZ;AACD;;AAED,UAAM,OAAO,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,EAAxB;AACA,UAAM,QAAQ,GAAG,IAAI,CAAC,OAAD,CAAJ,CAAc,OAA/B;AACA,UAAM,UAAU,GAAG,IAAI,CAAC,MAAM,IAAI,OAAX,CAAJ,CAAwB,OAA3C;AACA,UAAM,KAAK,GAAG,IAAI,CAAC,OAAnB;;AACA,QAAI,KAAK,IAAI,QAAT,IAAqB,UAAzB,EAAqC;AACnC,MAAA,KAAK,CAAC,OAAN,GAAgB,UAAU,CACxB,MAAK;AACH,cAAM,cAAc,GAAG,QAAQ,CAAC,SAAhC;AACA,cAAM,eAAe,GAAG,UAAU,CAAC,SAAX,GAAuB,cAA/C;AACA,cAAM,SAAS,GAAG,OAAA,CAAA,kBAAA,CAChB,KADgB,EAEhB,KAAK,CAAC,SAFU,EAGhB,eAAe,GAAG,KAAK,CAAC,SAHR,CAAlB;AAKA,QAAA,qBAAqB,CAAC,SAAD,CAArB;AACD,OAVuB,EAWxB,YAAY,GAAG,GAAH,GAAS,CAXG,CAA1B;AAaD;AACF,GAzBc,EA0Bf,CAAC,IAAD,EAAO,IAAP,CA1Be,CAAjB;AA6BA,SAAO,QAAP;AACD,CApCD;;AAsCA,OAAA,CAAA,OAAA,GAAe,kBAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst easeOutCubic = (t, b, c, d) => {\n    t /= d;\n    t--;\n    return c * (t * t * t + 1) + b;\n};\nexports.setScrollAnimation = (root, currentPosition, changingValue) => {\n    let start = 1;\n    let isStop = false;\n    const animation = () => {\n        if (isStop)\n            return;\n        const offset = easeOutCubic(start / 100, currentPosition, changingValue, 0.1);\n        requestAnimationFrame(animation);\n        root.scrollTo(0, offset);\n        const target = currentPosition + changingValue;\n        start += 1;\n        isStop = offset === target;\n    };\n    return animation;\n};\nconst useScrollAnimation = (root, refs) => {\n    const timer = react_1.useRef(null);\n    const onScroll = react_1.useCallback((data, itemID, hasAnimation) => {\n        if (timer.current) {\n            clearTimeout(timer.current);\n        }\n        const firstID = data[0].id;\n        const basicElm = refs[firstID].current;\n        const currentElm = refs[itemID || firstID].current;\n        const _root = root.current;\n        if (_root && basicElm && currentElm) {\n            timer.current = setTimeout(() => {\n                const basicOffsetTop = basicElm.offsetTop;\n                const targetOffsetTop = currentElm.offsetTop - basicOffsetTop;\n                const animation = exports.setScrollAnimation(_root, _root.scrollTop, targetOffsetTop - _root.scrollTop);\n                requestAnimationFrame(animation);\n            }, hasAnimation ? 300 : 0);\n        }\n    }, [refs, root]);\n    return onScroll;\n};\nexports.default = useScrollAnimation;\n//# sourceMappingURL=useScrollAnimation.js.map"]},"metadata":{},"sourceType":"script"}