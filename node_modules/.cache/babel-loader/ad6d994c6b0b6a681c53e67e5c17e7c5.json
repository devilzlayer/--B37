{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import ReactCrop from\"react-image-crop\";var Upload=/*#__PURE__*/function(_React$Component){_inherits(Upload,_React$Component);var _super=_createSuper(Upload);function Upload(props){var _this;_classCallCheck(this,Upload);_this=_super.call(this,props);_this.onImageLoaded=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(image){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.imageRef=image;case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.onCropComplete=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(crop){var _this$state$crop,x,y,croppedImageUrl;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$state$crop=_this.state.crop,x=_this$state$crop.x,y=_this$state$crop.y;if(!(_this.imageRef&&crop.width&&crop.height)){_context2.next=6;break;}_context2.next=4;return _this.onGetCropImg(_this.imageRef,crop,\"newFile.jpeg\");case 4:croppedImageUrl=_context2.sent;_this.setState({croppedImageUrl:croppedImageUrl});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.onGetCropImg=function(image,crop,fileName){var canvas=document.createElement(\"canvas\");var scaleX=image.naturalWidth/image.width;var scaleY=image.naturalHeight/image.height;canvas.width=350;canvas.height=350;var ctx=canvas.getContext(\"2d\");ctx.drawImage(image,crop.x*scaleX,crop.y*scaleY,crop.width*scaleX,crop.height*scaleY,0,0,350,350);return new Promise(function(resolve,reject){canvas.toBlob(function(blob){if(!blob){// reject(new Error('Canvas is empty'));\nconsole.error(\"Canvas is empty\");return;}blob.name=fileName;window.URL.revokeObjectURL(_this.fileUrl);_this.fileUrl=window.URL.createObjectURL(blob);// console.warn(\"he\", blob.size);\n// resolve(this.fileUrl);\nresolve(blob);// resolve(canvas.toDataURL('image/jpeg'));\n},\"image/jpeg\");});};_this.onCropChange=function(crop,percentCrop){_this.setState({crop:crop});};_this.state={image:null,crop:{width:90,aspect:1/1,unit:\"%\",x:0,y:0},croppedImageUrl:null};_this.inputFile=React.createRef();return _this;}_createClass(Upload,[{key:\"render\",value:function render(){var _this$props=this.props,src=_this$props.src,onHide=_this$props.onHide,onSendBack=_this$props.onSendBack;var _this$state=this.state,crop=_this$state.crop,croppedImageUrl=_this$state.croppedImageUrl;if(src){return/*#__PURE__*/React.createElement(\"div\",{className:\"modal-custom-wrap\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-custom-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-custom-image\"},/*#__PURE__*/React.createElement(ReactCrop,{src:src,crop:crop,onImageLoaded:this.onImageLoaded,onComplete:this.onCropComplete,onChange:this.onCropChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-custom-buttons\"},/*#__PURE__*/React.createElement(\"button\",{onClick:onHide},\"\\u53D6\\u6D88\"),/*#__PURE__*/React.createElement(\"button\",{className:\"active\",onClick:function onClick(){return onSendBack(croppedImageUrl);}},\"\\u4FDD\\u5B58\"))));}return null;}}]);return Upload;}(React.Component);export default Upload;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/GIT/src/component/Avatar/upload.js"],"names":["React","ReactCrop","Upload","props","onImageLoaded","image","imageRef","onCropComplete","crop","state","x","y","width","height","onGetCropImg","croppedImageUrl","setState","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","Promise","resolve","reject","toBlob","blob","console","error","name","window","URL","revokeObjectURL","fileUrl","createObjectURL","onCropChange","percentCrop","aspect","unit","inputFile","createRef","src","onHide","onSendBack","Component"],"mappings":"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","sourcesContent":["import React   from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\n\r\n\r\nclass Upload extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          image: null,\r\n          crop: {\r\n            width: 90,\r\n            aspect: 1 / 1,\r\n            unit: \"%\",\r\n            x: 0,\r\n            y: 0,\r\n          },\r\n          croppedImageUrl: null,\r\n        };\r\n        this.inputFile = React.createRef();\r\n    }\r\n\r\n    onImageLoaded =  async (image) => {\r\n        this.imageRef = image;\r\n    };\r\n\r\n    onCropComplete = async (crop) => {\r\n        const { crop : { x , y} } = this.state\r\n\r\n        if (this.imageRef && crop.width && crop.height) {\r\n          const croppedImageUrl = await this.onGetCropImg(\r\n            this.imageRef,\r\n            crop, \"newFile.jpeg\"\r\n          );\r\n          this.setState({ croppedImageUrl });\r\n        }\r\n    };\r\n\r\n    onGetCropImg = (image, crop, fileName) => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = 350;\r\n        canvas.height = 350;\r\n        const ctx = canvas.getContext(\"2d\");\r\n    \r\n        ctx.drawImage(\r\n          image,\r\n          crop.x * scaleX,\r\n          crop.y * scaleY,\r\n          crop.width * scaleX,\r\n          crop.height * scaleY,\r\n          0,\r\n          0,\r\n          350,\r\n          350\r\n        );\r\n        return new Promise((resolve, reject) => {\r\n          canvas.toBlob((blob) => {\r\n            if (!blob) {\r\n              // reject(new Error('Canvas is empty'));\r\n              console.error(\"Canvas is empty\");\r\n              return;\r\n            }\r\n            blob.name = fileName;\r\n            window.URL.revokeObjectURL(this.fileUrl);\r\n            this.fileUrl = window.URL.createObjectURL(blob);\r\n            // console.warn(\"he\", blob.size);\r\n            // resolve(this.fileUrl);\r\n            resolve(blob);\r\n            // resolve(canvas.toDataURL('image/jpeg'));\r\n          }, \"image/jpeg\");\r\n        });\r\n    };\r\n\r\n\r\n    onCropChange = (crop, percentCrop) => {\r\n        this.setState({ crop });\r\n    };\r\n\r\n  \r\n    \r\n    render(){\r\n        const { src , onHide , onSendBack } = this.props\r\n        const { crop , croppedImageUrl } = this.state\r\n        if(src){\r\n            return  <div className=\"modal-custom-wrap\">\r\n                        <div className=\"modal-custom-content\">\r\n                        <div className=\"modal-custom-image\">\r\n                            <ReactCrop\r\n                            src={src}\r\n                            crop={crop}\r\n                            onImageLoaded={this.onImageLoaded}\r\n                            onComplete={this.onCropComplete}\r\n                            onChange={this.onCropChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"modal-custom-buttons\">\r\n                            <button onClick={onHide}>取消</button>\r\n                            <button className={\"active\"} onClick={() => onSendBack(croppedImageUrl)}>\r\n                                保存\r\n                            </button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n        }\r\n        return null\r\n    }\r\n}\r\nexport default Upload"]},"metadata":{},"sourceType":"module"}