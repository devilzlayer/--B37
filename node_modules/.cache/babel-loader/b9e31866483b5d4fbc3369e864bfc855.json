{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nconst useScrollAnimation_1 = __importDefault(require(\"../hooks/useScrollAnimation\"));\n\nconst setRefs = data => {\n  return () => data.reduce((result, value) => {\n    result[value.id] = react_1.createRef();\n    return result;\n  }, {});\n};\n\nconst calculatePercentageOfRootWithoutItem = (rootHeight, itemHeight) => {\n  return 100 - itemHeight / rootHeight * 100;\n};\n\nconst calculateMarginVertical = (rootHeight, itemHeight) => {\n  return calculatePercentageOfRootWithoutItem(rootHeight, itemHeight) / 2;\n};\n\nconst calculateRootMargin = (rootHeight, itemHeight) => {\n  return `-${calculateMarginVertical(rootHeight, itemHeight)}% 0px`;\n};\n\nconst useObserver = (data, selectedID, itemHeight, onChange) => {\n  const root = react_1.useRef(null);\n  const refs = react_1.useMemo(setRefs(data), [data]);\n  const observer = react_1.useRef(null);\n  const [activeID, setActiveID] = react_1.useState(selectedID);\n  const onScroll = useScrollAnimation_1.default(root, refs);\n  const handleOnFocus = react_1.useCallback(e => {\n    const target = e.target;\n    const id = target.getAttribute(\"data-itemid\");\n    const value = target.getAttribute(\"data-itemvalue\");\n\n    if (!id || !value) {\n      throw new Error(\"Can not found id or value\");\n    }\n\n    onScroll(data, id);\n    setActiveID(id);\n    onChange({\n      id,\n      value\n    });\n  }, [data, onChange, onScroll]);\n  react_1.useEffect(() => {\n    const observerCallback = entries => {\n      entries.forEach(entry => {\n        if (!entry.isIntersecting) {\n          return;\n        }\n\n        const itemID = entry.target.getAttribute(\"data-itemid\");\n        const itemValue = entry.target.getAttribute(\"data-itemvalue\");\n\n        if (!itemID || !itemValue) {\n          throw new Error(\"Can not found id or value\");\n        }\n\n        onScroll(data, itemID, true);\n        setActiveID(itemID);\n        onChange({\n          id: itemID,\n          value: itemValue\n        });\n      });\n    };\n\n    if (!observer.current && root.current) {\n      observer.current = new IntersectionObserver(observerCallback, {\n        root: root.current,\n        rootMargin: calculateRootMargin(root.current.clientHeight, itemHeight),\n        threshold: [0.3, 0.79]\n      });\n      data.map(item => {\n        const elm = refs[item.id].current;\n\n        if (elm && observer.current) {\n          observer.current.observe(elm);\n        }\n      });\n      const firstItem = refs[data[0].id].current;\n      const item = refs[selectedID].current;\n\n      if (firstItem && item) {\n        root.current.scrollTo(0, item.offsetTop - firstItem.offsetTop);\n      }\n    }\n\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    };\n  }, [data, refs, root, itemHeight]); // eslint-disable-line\n\n  return {\n    root,\n    refs,\n    activeID,\n    onFocus: handleOnFocus\n  };\n};\n\nexports.default = useObserver;","map":{"version":3,"sources":["../../src/hooks/useObserver.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst useScrollAnimation_1 = __importDefault(require(\"../hooks/useScrollAnimation\"));\nconst setRefs = (data) => {\n    return () => data.reduce((result, value) => {\n        result[value.id] = react_1.createRef();\n        return result;\n    }, {});\n};\nconst calculatePercentageOfRootWithoutItem = (rootHeight, itemHeight) => {\n    return 100 - (itemHeight / rootHeight) * 100;\n};\nconst calculateMarginVertical = (rootHeight, itemHeight) => {\n    return calculatePercentageOfRootWithoutItem(rootHeight, itemHeight) / 2;\n};\nconst calculateRootMargin = (rootHeight, itemHeight) => {\n    return `-${calculateMarginVertical(rootHeight, itemHeight)}% 0px`;\n};\nconst useObserver = (data, selectedID, itemHeight, onChange) => {\n    const root = react_1.useRef(null);\n    const refs = react_1.useMemo(setRefs(data), [data]);\n    const observer = react_1.useRef(null);\n    const [activeID, setActiveID] = react_1.useState(selectedID);\n    const onScroll = useScrollAnimation_1.default(root, refs);\n    const handleOnFocus = react_1.useCallback((e) => {\n        const target = e.target;\n        const id = target.getAttribute(\"data-itemid\");\n        const value = target.getAttribute(\"data-itemvalue\");\n        if (!id || !value) {\n            throw new Error(\"Can not found id or value\");\n        }\n        onScroll(data, id);\n        setActiveID(id);\n        onChange({ id, value });\n    }, [data, onChange, onScroll]);\n    react_1.useEffect(() => {\n        const observerCallback = (entries) => {\n            entries.forEach(entry => {\n                if (!entry.isIntersecting) {\n                    return;\n                }\n                const itemID = entry.target.getAttribute(\"data-itemid\");\n                const itemValue = entry.target.getAttribute(\"data-itemvalue\");\n                if (!itemID || !itemValue) {\n                    throw new Error(\"Can not found id or value\");\n                }\n                onScroll(data, itemID, true);\n                setActiveID(itemID);\n                onChange({ id: itemID, value: itemValue });\n            });\n        };\n        if (!observer.current && root.current) {\n            observer.current = new IntersectionObserver(observerCallback, {\n                root: root.current,\n                rootMargin: calculateRootMargin(root.current.clientHeight, itemHeight),\n                threshold: [0.3, 0.79]\n            });\n            data.map(item => {\n                const elm = refs[item.id].current;\n                if (elm && observer.current) {\n                    observer.current.observe(elm);\n                }\n            });\n            const firstItem = refs[data[0].id].current;\n            const item = refs[selectedID].current;\n            if (firstItem && item) {\n                root.current.scrollTo(0, item.offsetTop - firstItem.offsetTop);\n            }\n        }\n        return () => {\n            if (observer.current) {\n                observer.current.disconnect();\n                observer.current = null;\n            }\n        };\n    }, [data, refs, root, itemHeight]); // eslint-disable-line\n    return {\n        root,\n        refs,\n        activeID,\n        onFocus: handleOnFocus\n    };\n};\nexports.default = useObserver;\n//# sourceMappingURL=useObserver.js.map"]},"metadata":{},"sourceType":"script"}