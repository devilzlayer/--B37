{"ast":null,"code":"import md5 from 'js-md5';\nimport withAuth from './withAuth';\nimport useWindowDimensions from './useWindowDimensions';\n/* Check if web app is in standalone mode\r\n\t*/\n\nexport function isStandalone() {\n  // return (window.matchMedia('(display-mode: standalone)').matches) || (window.navigator.standalone) || document.referrer.includes('android-app://');\n  return true;\n}\n/* Check if web app is in production mode\r\n\t*/\n\nexport function isProduction() {\n  return process.env.NODE_ENV === 'production';\n}\n/* Generates auth key\r\n\t*/\n\nexport function getAuthKey() {\n  const key = 'fghrtrvdfger';\n  const time = Math.round(+new Date() / 1000).toString().substring(0, 7);\n  return md5(`${time}${key}`);\n}\n/* Parses data time string to unix time or js date\r\n\t*/\n\nexport function toDate(string, unix) {\n  if (!string) {\n    return unix ? 0 : new Date();\n  }\n\n  let [date, time] = string.split(' ');\n\n  if (!time) {\n    time = '00:00:00';\n  }\n\n  const [year, month, day] = date.split('-');\n  const [hour, minute, second] = time.split(':');\n  const jsDate = new Date(year, month - 1, day, hour, minute, second);\n  return unix ? Math.round(+jsDate / 1000) : jsDate;\n}\n/* Creates dates\r\n\t*/\n\nexport function getDates(conf) {\n  const daysInMonth = (m, y) => new Date(y, m, 0).getDate();\n\n  const _date = new Date();\n\n  const _dates = {\n    year: [],\n    month: [],\n    day: []\n  };\n\n  const _year = _date.getFullYear() - conf.year[0];\n\n  const _year2 = _year - conf.year[1];\n\n  for (let i = _year; i >= _year2; i--) {\n    _dates.year.push(i);\n  }\n\n  for (let i = 1; i < 13; i++) {\n    _dates.month.push(i);\n  }\n\n  const _d = { ...conf.date\n  };\n\n  if (!_d.month) {\n    _d.month = _dates.month[0];\n  }\n\n  if (!_d.year) {\n    _d.year = _dates.year[0];\n  }\n\n  const _days = daysInMonth(_d.month, _d.year);\n\n  for (let i = 1; i <= _days; i++) {\n    _dates.day.push(i);\n  }\n\n  return _dates;\n} // export function getCurrentDate(separator=''){\n// \tlet newDate = new Date();\n// \tlet date = newDate.getDate();\n// \tlet month = newDate.getMonth() + 1;\n// \tlet year = newDate.getFullYear();\n// \treturn `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\n// }\n\nexport { withAuth, useWindowDimensions };","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/util/index.js"],"names":["md5","withAuth","useWindowDimensions","isStandalone","isProduction","process","env","NODE_ENV","getAuthKey","key","time","Math","round","Date","toString","substring","toDate","string","unix","date","split","year","month","day","hour","minute","second","jsDate","getDates","conf","daysInMonth","m","y","getDate","_date","_dates","_year","getFullYear","_year2","i","push","_d","_days"],"mappings":"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","sourcesContent":["import md5 from 'js-md5';\r\nimport withAuth from './withAuth';\r\nimport useWindowDimensions from './useWindowDimensions'; \r\n\r\n/* Check if web app is in standalone mode\r\n\t*/\r\nexport function isStandalone () {\r\n\t// return (window.matchMedia('(display-mode: standalone)').matches) || (window.navigator.standalone) || document.referrer.includes('android-app://');\r\n\treturn true;\r\n}\r\n\r\n/* Check if web app is in production mode\r\n\t*/\r\nexport function isProduction () {\r\n\treturn process.env.NODE_ENV === 'production';\r\n}\r\n\r\n/* Generates auth key\r\n\t*/\r\nexport function getAuthKey () {\r\n\r\n\tconst key = 'fghrtrvdfger';\r\n\r\n\tconst time = Math.round(+ new Date() / 1000)\r\n\t\t.toString()\r\n\t\t.substring(0, 7);\r\n\r\n\treturn md5(`${time}${key}`);\r\n\r\n}\r\n\r\n/* Parses data time string to unix time or js date\r\n\t*/\r\nexport function toDate (string, unix) {\r\n\r\n\tif (!string) {\r\n\t\treturn unix ? 0 : new Date();\r\n\t}\r\n\r\n\tlet [ date, time ] = string.split(' ');\r\n\r\n\tif (!time) {\r\n\t\ttime = '00:00:00';\r\n\t}\r\n\r\n\tconst [ year, month, day ] = date.split('-');\r\n\r\n\tconst [ hour, minute, second ] = time.split(':');\r\n\r\n\tconst jsDate = new Date(year, month - 1, day, hour, minute, second);\r\n\r\n\treturn unix ? Math.round(+ jsDate/1000) : jsDate;\r\n\r\n}\r\n\r\n/* Creates dates\r\n\t*/\r\nexport function getDates (conf) {\r\n\r\n\tconst daysInMonth = (m, y) => new Date(y, m, 0).getDate();\r\n\r\n\tconst _date = new Date();\r\n\r\n\tconst _dates = {\r\n\t\tyear: [],\r\n\t\tmonth: [],\r\n\t\tday: [],\r\n\t};\r\n\r\n\tconst _year = _date.getFullYear() - conf.year[0];\r\n\tconst _year2 = _year - conf.year[1];\r\n\r\n\tfor (let i = _year; i >= _year2; i--) {\r\n\t\t_dates.year.push(i);\r\n\t}\r\n\r\n\tfor (let i = 1; i < 13; i++) {\r\n\t\t_dates.month.push(i);\r\n\t}\r\n\r\n\tconst _d = { ...conf.date };\r\n\r\n\tif (!_d.month) {\r\n\t\t_d.month = _dates.month[0];\r\n\t}\r\n\r\n\tif (!_d.year) {\r\n\t\t_d.year = _dates.year[0];\r\n\t}\r\n\r\n\tconst _days = daysInMonth(_d.month, _d.year);\r\n\r\n\tfor (let i = 1; i <= _days; i++) {\r\n\t\t_dates.day.push(i);\r\n\t}\r\n\r\n\treturn _dates;\r\n\r\n}\r\n\r\n// export function getCurrentDate(separator=''){\r\n\r\n// \tlet newDate = new Date();\r\n// \tlet date = newDate.getDate();\r\n// \tlet month = newDate.getMonth() + 1;\r\n// \tlet year = newDate.getFullYear();\r\n\r\n// \treturn `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\r\n// }\r\n\r\nexport {\r\n\twithAuth,\r\n\tuseWindowDimensions,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}