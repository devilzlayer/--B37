{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Downloads/usportproject 2/src/pwa/view/profile/Card.js\";\nimport React, { useEffect, useState, useContext, useMemo } from 'react';\nimport Picker from 'react-mobile-picker';\nimport cx from 'classnames';\nimport { Wrap } from './';\nimport { Icon, FormField } from '../../../component/';\nimport { User, Card as Service } from '../../../service/';\nimport * as geo from '../../../service/Geo';\n\nconst CardAddWrap = props => {\n  const {\n    userAuth\n  } = useContext(User.Context);\n  const banks = [// '中国百银行',\n  // '建设银行',\n  // '度工商银行',\n  // '中信银行',\n  // '招商银行',\n  // '广东发展银行',\n  // '民生银行',\n  // '农业银行',\n  // '兴业银行',\n  // '上海浦东发展银行',\n  // '华夏知银行',\n  // '交通银行',\n  // '光大银道行',\n  // '深圳发展银行',\n  // '恒丰银行',\n  // '渤海银行',\n  '中国银行', '中国建设银行', '中国农业银行', '中国工商银行', '中国邮政储蓄银行', '招商银行', '交通银行', '中信银行', '平安银行', '中国光大银行', '上海浦东发展银行', '广发银行', '华夏银行', '兴业银行', '民生银行'];\n  const GeoData = useMemo(() => {\n    const cities = geo.cities.map(g => g.chinese_title);\n    const provinces = geo.provinces.map(p => p.chinese_title);\n    const provincesAssoc = {};\n    geo.provinces.forEach(province => {\n      provincesAssoc[province.title] = province.chinese_title;\n    });\n    const citiesByProvince = {};\n    geo.cities.forEach(city => {\n      const p = provincesAssoc[city.province];\n\n      if (!citiesByProvince[p]) {\n        citiesByProvince[p] = [];\n      }\n\n      citiesByProvince[p].push(city.chinese_title);\n    });\n    return {\n      cities,\n      citiesByProvince,\n      provinces\n    };\n  }, []);\n  const [bankPicker, toggleBankPicker] = useState(false);\n  const [cityPicker, toggleCityPicker] = useState(false);\n  const [form, setForm] = useState({\n    bank_type: '中国银行',\n    bank_province: '贵州',\n    bank_city: '遵义市',\n    realname: userAuth.data.realName || '',\n    bank_addr: '',\n    bank_no: ''\n  });\n  const fields = [{\n    id: 'bank_type',\n    label: '开户银行',\n    select: toggleBankPicker,\n    placeholder: '开户银行'\n  }, {\n    id: 'bank_province',\n    label: '开户地区',\n    select: toggleCityPicker,\n    value: () => `${form.bank_province} ${form.bank_city}`,\n    placeholder: '开户地区'\n  }, {\n    id: 'bank_city',\n    label: '开户支行',\n    hidden: true,\n    select: false\n  }, {\n    id: 'bank_addr',\n    label: '开户支行',\n    select: false,\n    placeholder: '开户支行'\n  }, {\n    id: 'realname',\n    label: '开户人姓名',\n    select: false,\n    placeholder: '开户人姓名',\n    displayOnly: userAuth.data.realName ? true : false\n  }, {\n    id: 'bank_no',\n    label: '银行卡号',\n    select: false\n  }];\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(f => ({ ...f,\n      [name]: value\n    }));\n  };\n\n  const submit = () => {\n    props.onLoading();\n    Service.create({ ...User.read(),\n      ...form\n    }).promise.then(r => {\n      console.info('Successfully bound the card:', r);\n      props.onFinish();\n    }, e => {\n      console.info('Unable to bind the card:', e);\n    });\n  }; // console.log(form)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-add-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-add-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, fields.filter(f => !f.hidden).map((f, i) => /*#__PURE__*/React.createElement(FormField, {\n    key: i,\n    field: {\n      label: f.label,\n      placeholder: f.placeholder,\n      select: f.select,\n      displayOnly: f.displayOnly,\n      value: f.value,\n      onClick: () => f.select(true)\n    },\n    input: {\n      id: f.id,\n      label: f.label,\n      placeholder: f.placeholder,\n      name: f.id,\n      value: form[f.id],\n      onChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-stylized\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 6\n    }\n  }, \"\\u4FDD\\u5B58\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('card-add-overlay', {\n      shown: bankPicker || cityPicker\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, bankPicker ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleBankPicker(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"\\u53D6\\u6D88\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"\\u9009\\u62E9\\u94F6\\u884C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleBankPicker(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"\\u786E\\u5B9A\")) : null, cityPicker ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleCityPicker(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, \"\\u53D6\\u6D88\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"\\u9009\\u62E9\\u4E00\\u4E2A\\u57CE\\u5E02\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleCityPicker(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"\\u786E\\u5B9A\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }\n  }, bankPicker ? /*#__PURE__*/React.createElement(Picker, {\n    height: 120,\n    valueGroups: {\n      bank_type: form.bank_type\n    },\n    optionGroups: {\n      bank_type: banks\n    },\n    onChange: (k, v) => setForm({ ...form,\n      [k]: v\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }) : null, cityPicker ? /*#__PURE__*/React.createElement(Picker, {\n    height: 120,\n    valueGroups: {\n      bank_province: form.bank_province,\n      bank_city: form.bank_city\n    },\n    optionGroups: {\n      bank_province: GeoData.provinces,\n      bank_city: GeoData.citiesByProvince[form.bank_province]\n    },\n    onChange: (k, v) => {\n      const _fs = { ...form,\n        [k]: v\n      };\n\n      if (k === 'bank_province') {\n        _fs.bank_city = GeoData.citiesByProvince[v][0];\n      }\n\n      setForm(_fs);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }) : null))));\n};\n\nconst Card = () => {\n  const [status, setStatus] = useState(1);\n  const [adding, setAdding] = useState(false);\n  const [update, setUpdate] = useState(0);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const req = Service.read({ ...User.read()\n    });\n    setStatus(0);\n    req.promise.then(r => {\n      console.log('Got cards:', r);\n      setCards(r.info);\n      setStatus(1);\n    }, e => {\n      console.warn('Unable to get cards:', e);\n      setStatus(1);\n    });\n    return () => req.cancel();\n  }, [update]);\n\n  const onFinish = () => {\n    setAdding(false);\n    setUpdate(u => u + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: \"profile-payment\",\n    name: \"\\u8BBE\\u7F6E\\u94F6\\u884C\\u5361\",\n    isLoading: !status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 3\n    }\n  }, adding ? /*#__PURE__*/React.createElement(CardAddWrap, {\n    onLoading: () => setStatus(0),\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, cards.map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 8\n    }\n  }, c.debit_bank)))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"card\",\n    onClick: e => setAdding(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 8\n    }\n  })))));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/cramj/Downloads/usportproject 2/src/pwa/view/profile/Card.js"],"names":["React","useEffect","useState","useContext","useMemo","Picker","cx","Wrap","Icon","FormField","User","Card","Service","geo","CardAddWrap","props","userAuth","Context","banks","GeoData","cities","map","g","chinese_title","provinces","p","provincesAssoc","forEach","province","title","citiesByProvince","city","push","bankPicker","toggleBankPicker","cityPicker","toggleCityPicker","form","setForm","bank_type","bank_province","bank_city","realname","data","realName","bank_addr","bank_no","fields","id","label","select","placeholder","value","hidden","displayOnly","onChange","e","name","target","f","submit","onLoading","create","read","promise","then","r","console","info","onFinish","filter","i","onClick","shown","k","v","_fs","status","setStatus","adding","setAdding","update","setUpdate","cards","setCards","req","log","warn","cancel","u","c","debit_bank"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useMemo } from 'react';\r\nimport Picker from 'react-mobile-picker';\r\nimport cx from 'classnames';\r\n\r\nimport { Wrap } from './';\r\nimport { Icon, FormField } from '../../../component/';\r\nimport { User, Card as Service } from '../../../service/';\r\nimport * as geo from '../../../service/Geo';\r\n\r\nconst CardAddWrap = (props) => {\r\n\r\n\tconst { userAuth } = useContext(User.Context);\r\n\r\n\tconst banks = [\r\n\t\t// '中国百银行',\r\n\t\t// '建设银行',\r\n\t\t// '度工商银行',\r\n\t\t// '中信银行',\r\n\t\t// '招商银行',\r\n\t\t// '广东发展银行',\r\n\t\t// '民生银行',\r\n\t\t// '农业银行',\r\n\t\t// '兴业银行',\r\n\t\t// '上海浦东发展银行',\r\n\t\t// '华夏知银行',\r\n\t\t// '交通银行',\r\n\t\t// '光大银道行',\r\n\t\t// '深圳发展银行',\r\n\t\t// '恒丰银行',\r\n\t\t// '渤海银行',\r\n\t\t'中国银行',\r\n\t\t'中国建设银行',\r\n\t\t'中国农业银行',\r\n\t\t'中国工商银行',\r\n\t\t'中国邮政储蓄银行',\r\n\t\t'招商银行',\r\n\t\t'交通银行',\r\n\t\t'中信银行',\r\n\t\t'平安银行',\r\n\t\t'中国光大银行',\r\n\t\t'上海浦东发展银行',\r\n\t\t'广发银行',\r\n\t\t'华夏银行',\r\n\t\t'兴业银行',\r\n\t\t'民生银行',\r\n\t];\r\n\r\n\tconst GeoData = useMemo(() => {\r\n\r\n\t\tconst cities = geo.cities.map(g => g.chinese_title);\r\n\t\tconst provinces = geo.provinces.map(p => p.chinese_title);\r\n\r\n\t\tconst provincesAssoc = {};\r\n\r\n\t\tgeo.provinces.forEach(province => {\r\n\t\t\tprovincesAssoc[province.title] = province.chinese_title;\r\n\t\t});\r\n\r\n\t\tconst citiesByProvince = {};\r\n\r\n\t\tgeo.cities.forEach(city => {\r\n\t\t\tconst p = provincesAssoc[city.province];\r\n\t\t\tif (!citiesByProvince[p]) {\r\n\t\t\t\tcitiesByProvince[p] = [];\r\n\t\t\t}\r\n\t\t\tcitiesByProvince[p].push(city.chinese_title);\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tcities,\r\n\t\t\tcitiesByProvince,\r\n\t\t\tprovinces,\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\tconst [ bankPicker, toggleBankPicker ] = useState(false);\r\n\tconst [ cityPicker, toggleCityPicker ] = useState(false);\r\n\r\n\tconst [ form, setForm ] = useState({\r\n\t\tbank_type: '中国银行',\r\n\t\tbank_province: '贵州',\r\n\t\tbank_city: '遵义市',\r\n\t\trealname: userAuth.data.realName || '',\r\n\t\tbank_addr: '',\r\n\t\tbank_no: '',\r\n\t});\r\n\r\n\tconst fields = [\r\n\t\t{ id: 'bank_type', label: '开户银行', select: toggleBankPicker, placeholder: '开户银行' },\r\n\t\t{ id: 'bank_province', label: '开户地区', select: toggleCityPicker, value: () => `${form.bank_province} ${form.bank_city}`, placeholder: '开户地区' },\r\n\t\t{ id: 'bank_city', label: '开户支行', hidden: true, select: false, },\r\n\t\t{ id: 'bank_addr', label: '开户支行', select: false, placeholder: '开户支行' },\r\n\t\t{ id: 'realname', label: '开户人姓名', select: false, placeholder: '开户人姓名', displayOnly: (userAuth.data.realName ? true : false) },\r\n\t\t{ id: 'bank_no', label: '银行卡号', select: false },\r\n\t];\r\n\r\n\tconst onChange = e => {\r\n\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\tsetForm(f => ({\r\n\t\t\t...f,\r\n\t\t\t[name]: value,\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\tconst submit = () => {\r\n\r\n\t\tprops.onLoading();\r\n\r\n\t\tService.create({\r\n\t\t\t...User.read(),\r\n\t\t\t...form,\r\n\t\t}).promise.then(r => {\r\n\r\n\t\t\tconsole.info('Successfully bound the card:', r);\r\n\r\n\t\t\tprops.onFinish();\r\n\r\n\t\t}, e => {\r\n\r\n\t\t\tconsole.info('Unable to bind the card:', e);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t// console.log(form)\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"card-add-form\">\r\n\t\t\t<div className=\"card-add-wrap\">\r\n\t\t\t\t<div className=\"fields\">\r\n\t\t\t\t\t{fields.filter(f => !f.hidden).map((f, i) => (\r\n\t\t\t\t\t\t<FormField\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tfield={{\r\n\t\t\t\t\t\t\t\tlabel: f.label,\r\n\t\t\t\t\t\t\t\tplaceholder: f.placeholder,\r\n\t\t\t\t\t\t\t\tselect: f.select,\r\n\t\t\t\t\t\t\t\tdisplayOnly: f.displayOnly,\r\n\t\t\t\t\t\t\t\tvalue: f.value,\r\n\t\t\t\t\t\t\t\tonClick: () => f.select(true),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinput={{\r\n\t\t\t\t\t\t\t\tid: f.id,\r\n\t\t\t\t\t\t\t\tlabel: f.label,\r\n\t\t\t\t\t\t\t\tplaceholder: f.placeholder,\r\n\t\t\t\t\t\t\t\tname: f.id,\r\n\t\t\t\t\t\t\t\tvalue: form[f.id],\r\n\t\t\t\t\t\t\t\tonChange,\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"submit\">\r\n\t\t\t\t\t<button className=\"button-stylized\" onClick={submit}>保存</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={cx('card-add-overlay', { shown: bankPicker || cityPicker })}>\r\n\t\t\t\t<div className=\"picker-wrap\">\r\n\t\t\t\t\t{bankPicker ? (\r\n\t\t\t\t\t<div className=\"picker-head\">\r\n\t\t\t\t\t\t<button onClick={() => toggleBankPicker(false)}>取消</button>\r\n\t\t\t\t\t\t<p>选择银行</p>\r\n\t\t\t\t\t\t<button onClick={() => toggleBankPicker(false)}>确定</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{cityPicker ? (\r\n\t\t\t\t\t<div className=\"picker-head\">\r\n\t\t\t\t\t\t<button onClick={() => toggleCityPicker(false)}>取消</button>\r\n\t\t\t\t\t\t<p>选择一个城市</p>\r\n\t\t\t\t\t\t<button onClick={() => toggleCityPicker(false)}>确定</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<div className=\"picker-body\">\r\n\t\t\t\t\t\t{bankPicker ? (\r\n\t\t\t\t\t\t<Picker\r\n\t\t\t\t\t\t\theight={120}\r\n\t\t\t\t\t\t\tvalueGroups={{ bank_type: form.bank_type }}\r\n\t\t\t\t\t\t\toptionGroups={{ bank_type: banks }}\r\n\t\t\t\t\t\t\tonChange={(k, v) => setForm({ ...form, [k]: v })} />\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{cityPicker ? (\r\n\t\t\t\t\t\t<Picker\r\n\t\t\t\t\t\t\theight={120}\r\n\t\t\t\t\t\t\tvalueGroups={{\r\n\t\t\t\t\t\t\t\tbank_province: form.bank_province,\r\n\t\t\t\t\t\t\t\tbank_city: form.bank_city,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\toptionGroups={{\r\n\t\t\t\t\t\t\t\tbank_province: GeoData.provinces,\r\n\t\t\t\t\t\t\t\tbank_city: GeoData.citiesByProvince[form.bank_province],\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChange={(k, v) => {\r\n\r\n\t\t\t\t\t\t\t\tconst _fs = {\r\n\t\t\t\t\t\t\t\t\t...form,\r\n\t\t\t\t\t\t\t\t\t[k]: v,\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\tif (k === 'bank_province') {\r\n\t\t\t\t\t\t\t\t\t_fs.bank_city = GeoData.citiesByProvince[v][0];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tsetForm(_fs);\r\n\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nconst Card = () => {\r\n\r\n\tconst [ status, setStatus ] = useState(1);\r\n\r\n\tconst [ adding, setAdding ] = useState(false);\r\n\r\n\tconst [ update, setUpdate ] = useState(0);\r\n\r\n\tconst [ cards, setCards ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst req = Service.read({\r\n\t\t\t...User.read()\r\n\t\t});\r\n\r\n\t\tsetStatus(0);\r\n\r\n\t\treq.promise.then(r => {\r\n\r\n\t\t\tconsole.log('Got cards:', r);\r\n\r\n\t\t\tsetCards(r.info);\r\n\r\n\t\t\tsetStatus(1);\r\n\r\n\t\t}, e => {\r\n\r\n\t\t\tconsole.warn('Unable to get cards:', e);\r\n\r\n\t\t\tsetStatus(1);\r\n\r\n\t\t});\r\n\r\n\t\treturn () => req.cancel();\r\n\r\n\t}, [ update ]);\r\n\r\n\tconst onFinish = () => {\r\n\r\n\t\tsetAdding(false);\r\n\r\n\t\tsetUpdate(u => u + 1);\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Wrap className=\"profile-payment\" name=\"设置银行卡\" isLoading={!status}>\r\n\t\t\t{adding ? (\r\n\t\t\t\t<CardAddWrap onLoading={() => setStatus(0)} onFinish={onFinish} />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"cards-list\">\r\n\t\t\t\t\t{cards.map((c, i) => (\r\n\t\t\t\t\t<div key={i} className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t\t<h4>{c.debit_bank}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<button className=\"card\" onClick={e => setAdding(true)}>\r\n\t\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t\t<Icon name=\"plus\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Wrap>\r\n\t);\r\n\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}