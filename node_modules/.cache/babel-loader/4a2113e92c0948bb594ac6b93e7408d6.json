{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/GIT/src/pwa/view/profile/transfer/wheel.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport styled from 'styled-components';\nimport WheelPicker from 'react-simple-wheel-picker';\nimport { map, toString } from 'lodash';\nconst WheelWrapper = styled.div`\n    position: relative;\n    ul{\n        box-shadow: none;\n        position: relative;\n        z-index: 1;\n        background: none;\n        li{\n            justify-content: center;\n            span{\n                display: none;\n            }\n        }\n    }\n    .wheel-over {\n        box-shadow: 0 1px 24px rgba(0, 0, 0, 0.06);\n        position: absolute;\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 100%;\n        height: 36px;\n    }\n`;\n\nconst Wheel = props => {\n  const {\n    options,\n    selected,\n    onChange\n  } = props;\n  let val = toString(selected);\n\n  const handleOnChange = target => {};\n\n  const newBalData = map(options, (obj, i) => {\n    return {\n      id: toString(i),\n      value: obj\n    };\n  }); // console.log(val)\n\n  return /*#__PURE__*/React.createElement(WheelWrapper, {\n    className: \"wheelwrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WheelPicker, {\n    data: newBalData,\n    onChange: handleOnChange,\n    height: 180,\n    itemHeight: 36 // selectedID={val}\n    ,\n    selectedID: val,\n    color: \"#ccc\",\n    activeColor: \"#000\",\n    backgroundColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wheel-over\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Wheel;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/GIT/src/pwa/view/profile/transfer/wheel.js"],"names":["React","useEffect","useState","useContext","styled","WheelPicker","map","toString","WheelWrapper","div","Wheel","props","options","selected","onChange","val","handleOnChange","target","newBalData","obj","i","id","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,GAAR,EAAcC,QAAd,QAA6B,QAA7B;AACA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAAhC;;AA0BA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAYC,IAAAA,QAAZ;AAAuBC,IAAAA;AAAvB,MAAmCH,KAAzC;AAEA,MAAII,GAAG,GAAGR,QAAQ,CAACM,QAAD,CAAlB;;AACA,QAAMG,cAAc,GAAGC,MAAM,IAAI,CAEhC,CAFD;;AAIA,QAAMC,UAAU,GAAGZ,GAAG,CAACM,OAAD,EAAU,CAACO,GAAD,EAAOC,CAAP,KAAa;AACzC,WAAO;AACLC,MAAAA,EAAE,EAAEd,QAAQ,CAACa,CAAD,CADP;AAELE,MAAAA,KAAK,EAAGH;AAFH,KAAP;AAIH,GALqB,CAAtB,CARqB,CAerB;;AAEA,sBACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAED,UADV;AAEI,IAAA,QAAQ,EAAEF,cAFd;AAGI,IAAA,MAAM,EAAE,GAHZ;AAII,IAAA,UAAU,EAAE,EAJhB,CAKI;AALJ;AAMI,IAAA,UAAU,EAAED,GANhB;AAOI,IAAA,KAAK,EAAC,MAPV;AAQI,IAAA,WAAW,EAAC,MARhB;AASI,IAAA,eAAe,EAAC,MATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAYI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAgBH,CAjCD;;AAmCA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport styled from 'styled-components'\r\nimport WheelPicker from 'react-simple-wheel-picker';\r\nimport {map , toString} from 'lodash'\r\nconst WheelWrapper = styled.div`\r\n    position: relative;\r\n    ul{\r\n        box-shadow: none;\r\n        position: relative;\r\n        z-index: 1;\r\n        background: none;\r\n        li{\r\n            justify-content: center;\r\n            span{\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n    .wheel-over {\r\n        box-shadow: 0 1px 24px rgba(0, 0, 0, 0.06);\r\n        position: absolute;\r\n        left: 0;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        width: 100%;\r\n        height: 36px;\r\n    }\r\n`\r\n\r\n\r\nconst Wheel = (props) => {\r\n    const { options , selected , onChange} = props\r\n\r\n    let val = toString(selected)\r\n    const handleOnChange = target => {\r\n   \r\n    };\r\n\r\n    const newBalData = map(options, (obj , i ) =>{\r\n        return { \r\n          id: toString(i),\r\n          value : obj\r\n        }\r\n    }) \r\n\r\n    // console.log(val)\r\n\r\n    return (\r\n        <WheelWrapper className=\"wheelwrap\">\r\n            <WheelPicker\r\n                data={newBalData}\r\n                onChange={handleOnChange}\r\n                height={180}\r\n                itemHeight={36}\r\n                // selectedID={val}\r\n                selectedID={val}\r\n                color=\"#ccc\"\r\n                activeColor=\"#000\"\r\n                backgroundColor=\"#fff\"\r\n            />\r\n            <div className=\"wheel-over\" />\r\n        </WheelWrapper>\r\n    );\r\n};\r\n\r\nexport default Wheel"]},"metadata":{},"sourceType":"module"}