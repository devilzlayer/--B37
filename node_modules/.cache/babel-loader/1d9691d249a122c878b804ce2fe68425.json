{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/Inbox.js\";\nimport React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport { withAuth } from '../util/';\nimport { Inbox as _Inbox } from '../service/';\nconst status = ['未读', '已读'];\n\nconst Inbox = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    document.body.classList.add('inbox-page');\n    return () => document.body.classList.remove('inbox-page');\n  }, []);\n  const [messages, setMessages] = useState({\n    status: 0,\n    list: []\n  });\n  useEffect(() => {\n    setMessages({\n      status: 0,\n      list: []\n    });\n\n    const req = _Inbox.read({\n      record_type: 'message'\n    });\n\n    req.promise.then(r => {\n      console.info(r);\n      setMessages({\n        status: 1,\n        list: r.info.map(m => m)\n      });\n    }, e => {\n      if (!e.is_aborted) {\n        console.warn(e);\n      }\n    });\n    return () => req.cancel();\n  }, []);\n\n  const open = ({\n    id\n  }, i) => {\n    const _m = messages.list[i];\n\n    if (!_m.content) {\n      setMessages(m => ({ ...m,\n        status: 0\n      }));\n\n      _Inbox.readCurrent({\n        id\n      }).promise.then(r => {\n        _m.opened = !_m.opened;\n        _m.content = r.info.content;\n        _m.message_status = 1;\n        setMessages(m => ({ ...m,\n          list: m.list.filter((m, _i) => _i === i ? _m : m),\n          status: 1\n        }));\n      }, e => {\n        if (!e.is_aborted) {\n          console.warn(e);\n        }\n      });\n    } else {\n      _m.opened = !_m.opened;\n      setMessages(m => ({ ...m,\n        list: m.list.filter((m, _i) => _i === i ? _m : m)\n      }));\n    }\n  };\n\n  const _messagesList = messages.list.map((m, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('messages-list--item', {\n      opened: m.opened\n    }),\n    key: i,\n    onClick: e => open(m, i, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-list--item-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, m.subject), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, m.send_time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: cx('status', {\n      unread: m.message_status === 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, status[m.message_status]))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-list--item-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, m.content))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-wrap desktop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('messages-list', 'with-loader', {\n      loading: !messages.status\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"load-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }), _messagesList));\n};\n\nexport default withAuth(Inbox);","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/Inbox.js"],"names":["React","useEffect","useState","cx","withAuth","Inbox","_Inbox","status","window","scrollTo","document","body","classList","add","remove","messages","setMessages","list","req","read","record_type","promise","then","r","console","info","map","m","e","is_aborted","warn","cancel","open","id","i","_m","content","readCurrent","opened","message_status","filter","_i","_messagesList","subject","send_time","unread","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport { withAuth } from '../util/';\r\nimport { Inbox as _Inbox } from '../service/';\r\n\r\nconst status = [ '未读', '已读' ];\r\n\r\nconst Inbox = () => {\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\twindow.scrollTo(0, 0);\r\n\r\n\t\tdocument.body.classList.add('inbox-page');\r\n\r\n\t\treturn () => document.body.classList.remove('inbox-page');\r\n\r\n\t}, []);\r\n\r\n\tconst [ messages, setMessages ] = useState({\r\n\t\tstatus: 0,\r\n\t\tlist: [],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tsetMessages({\r\n\t\t\tstatus: 0,\r\n\t\t\tlist: [],\r\n\t\t});\r\n\r\n\t\tconst req = _Inbox.read({\r\n\t\t\trecord_type: 'message',\r\n\t\t});\r\n\t\t\r\n\t\treq.promise.then(r => {\r\n\r\n\t\t\tconsole.info(r);\r\n\r\n\t\t\tsetMessages({\r\n\t\t\t\tstatus: 1,\r\n\t\t\t\tlist: r.info.map(m => m),\r\n\t\t\t});\r\n\r\n\t\t}, e => {\r\n\r\n\t\t\tif (!e.is_aborted) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn () => req.cancel();\r\n\r\n\t}, []);\r\n\r\n\tconst open = ({ id }, i) => {\r\n\r\n\t\tconst _m = messages.list[i];\r\n\r\n\t\tif (!_m.content) {\r\n\r\n\t\t\tsetMessages(m => ({\r\n\t\t\t\t...m,\r\n\t\t\t\tstatus: 0,\r\n\t\t\t}));\r\n\r\n\t\t\t_Inbox.readCurrent({ id }).promise.then(r => {\r\n\r\n\t\t\t\t_m.opened = !_m.opened;\r\n\t\t\t\t_m.content = r.info.content;\r\n\t\t\t\t_m.message_status = 1;\r\n\r\n\t\t\t\tsetMessages(m => ({\r\n\t\t\t\t\t...m,\r\n\t\t\t\t\tlist: m.list.filter((m, _i) => _i === i ? _m : m),\r\n\t\t\t\t\tstatus: 1,\r\n\t\t\t\t}));\r\n\r\n\t\t\t}, e => {\r\n\r\n\t\t\t\tif (!e.is_aborted) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_m.opened = !_m.opened;\r\n\r\n\t\t\tsetMessages(m => ({\r\n\t\t\t\t...m,\r\n\t\t\t\tlist: m.list.filter((m, _i) => _i === i ? _m : m),\r\n\t\t\t}));\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _messagesList = messages.list.map((m, i) => (\r\n\t\t<div className={cx('messages-list--item', { opened: m.opened })} key={i} onClick={e => open(m, i, e)}>\r\n\t\t\t<div className=\"messages-list--item-wrap\">\r\n\t\t\t\t<div className=\"m-content\">\r\n\t\t\t\t\t<p className=\"subject\">{m.subject}</p>\r\n\t\t\t\t\t<p className=\"timestamp\">{m.send_time}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"m-status\">\r\n\t\t\t\t\t<p className={cx('status', { unread: m.message_status === 0 })}>{status[m.message_status]}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"messages-list--item-content\">\r\n\t\t\t\t<p>{m.content}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className=\"messages-wrap desktop\">\r\n\t\t\t<div className={cx('messages-list', 'with-loader', { loading: !messages.status })}>\r\n\t\t\t\t<div className=\"load-spin\"></div>\r\n\t\t\t\t{_messagesList}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default withAuth(Inbox);\r\n"]},"metadata":{},"sourceType":"module"}