{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/GIT/src/pwa/view/profile/Wrap.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LiveChatSA } from \"../../component/\";\n\nconst Wrap = props => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const {\n    className,\n    isLoading,\n    name,\n    centerName,\n    faq = true\n  } = props;\n  const [livechat, setLiveChat] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `profile-wrap-sa ${className} with-loader${isLoading ? \" loading\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"load-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-wrap-sa-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, props.sublevel && props.sublevel[0] ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.sublevel[1](),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"next-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), props.sublevel[2] || name ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, props.sublevel[2] || name) : null) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"next-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, name)), centerName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, centerName) : null, faq ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"faq-button\",\n    onClick: () => setLiveChat(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-wrap-sa-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, props.children)), /*#__PURE__*/React.createElement(LiveChatSA, {\n    shown: livechat,\n    onClose: () => setLiveChat(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Wrap;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/GIT/src/pwa/view/profile/Wrap.jsx"],"names":["React","useEffect","useState","Link","LiveChatSA","Wrap","props","window","scrollTo","className","isLoading","name","centerName","faq","livechat","setLiveChat","sublevel","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtBL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,UAA9B;AAA0CC,IAAAA,GAAG,GAAG;AAAhD,MAAyDP,KAA/D;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,mBAAkBO,SAAU,eACtCC,SAAS,GAAG,UAAH,GAAgB,EAC1B,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACU,QAAN,IAAkBV,KAAK,CAACU,QAAN,CAAe,CAAf,CAAlB,gBACC;AAAQ,IAAA,OAAO,EAAE,MAAMV,KAAK,CAACU,QAAN,CAAe,CAAf,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGV,KAAK,CAACU,QAAN,CAAe,CAAf,KAAqBL,IAArB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,KAAK,CAACU,QAAN,CAAe,CAAf,KAAqBL,IAA5B,CADD,GAEG,IAJN,CADD,gBAQC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAP,CAFF,CATJ,EAcGC,UAAU,gBAAG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,UAA9B,CAAH,GAAqD,IAdlE,EAeGC,GAAG,gBACF;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAE,MAAME,WAAW,CAAC,IAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAEA,IAjBN,CANF,eAyBE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCT,KAAK,CAACW,QAAtC,CADF,CAzBF,eA4BE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,QAAnB;AAA6B,IAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,CADF;AAgCD,CAxCD;;AA0CA,eAAeV,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { LiveChatSA } from \"../../component/\";\r\n\r\nconst Wrap = (props) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const { className, isLoading, name, centerName, faq = true } = props;\r\n  const [livechat, setLiveChat] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={`profile-wrap-sa ${className} with-loader${\r\n        isLoading ? \" loading\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"load-spin\"></div>\r\n      <div className=\"profile-wrap-sa-head\">\r\n        {props.sublevel && props.sublevel[0] ? (\r\n          <button onClick={() => props.sublevel[1]()}>\r\n            <div className=\"next-arrow\" />\r\n            {props.sublevel[2] || name ? (\r\n              <span>{props.sublevel[2] || name}</span>\r\n            ) : null}\r\n          </button>\r\n        ) : (\r\n          <Link to=\"/profile\">\r\n            <div className=\"next-arrow\" />\r\n            <span>{name}</span>\r\n          </Link>\r\n        )}\r\n        {centerName ? <div className=\"center-name\">{centerName}</div> : null}\r\n        {faq ? (\r\n          <div className=\"faq-button\" onClick={() => setLiveChat(true)} />\r\n        ) : null}\r\n      </div>\r\n      <div className=\"profile-wrap-sa-content\">\r\n        <div className=\"content-inner\">{props.children}</div>\r\n      </div>\r\n      <LiveChatSA shown={livechat} onClose={() => setLiveChat(false)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrap;\r\n"]},"metadata":{},"sourceType":"module"}