{"ast":null,"code":"import _objectSpread from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cramj/Documents/New PWA/GIT/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import{map,truncate,replace,split,head,last}from\"lodash\";import{Wrap}from\"../view/profile/\";import\"../assets/scss/TransferRecord.scss\";import api from\"../../service/api\";import{User,Transaction}from\"../../service\";import{getAuthKey}from\"../../util\";import{withAuth}from\"../util/\";var CardItem=function CardItem(props){var label=props.label,subLabel=props.subLabel,time=props.time,value=props.value,status=props.status,className=props.className;return/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-card-item \".concat(className?className:\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"cl-item transfer-record-card-text\"},/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-text\"},/*#__PURE__*/React.createElement(\"span\",null,label),subLabel&&/*#__PURE__*/React.createElement(\"span\",null,subLabel)),/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-time\"},time)),/*#__PURE__*/React.createElement(\"div\",{className:\"cl-item transfer-record-card-value\"},/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-amount\"},\"\\u91D1\\u989D: \",/*#__PURE__*/React.createElement(\"span\",null,value)),/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-status \".concat(status===\"成功\"?\"success\":\"failure\")},/*#__PURE__*/React.createElement(\"span\",null,status))));};var TransferRecord=function TransferRecord(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),load=_useState4[0],setLoad=_useState4[1];useEffect(function(){var fetch=function fetch(){// console.log(User.read())\nvar response=api.post(\"newpwa/ajax_data.php\",_objectSpread(_objectSpread({},User.read()),{},{auth:getAuthKey(),record_type:\"transfer\",type:\"record_list\"}));response.promise.then(function(result){// console.log(result);\nif(result.status===1){setItems(result.info);setLoad(false);}},function(e){console.log(\"Unable to response:\",e);});};fetch();},[load]);var history=useHistory();return/*#__PURE__*/React.createElement(Wrap,{className:\"transfer-record-wrap\",centerName:\"\\u8F6C\\u8D26\\u8BB0\\u5F55\",sublevel:[true,function(){return history.goBack();}]},/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-wrap-inner\"},/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-wrap-inner-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-card-head\"},/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-card-title\"},/*#__PURE__*/React.createElement(\"span\",null,\"\\u6700\\u8FD130\\u5929\"),/*#__PURE__*/React.createElement(\"i\",{className:load?\"reload\":\"\",onClick:function onClick(){return setLoad(true);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-card-body\"},items&&items.length>0?map(items,function(obj,i){var reg=split(obj.platName,\"-->\",2);return/*#__PURE__*/React.createElement(CardItem,{key:i,index:i,label:head(reg),subLabel:last(reg),time:obj.requestTime,value:obj.amount,status:obj.tranStatus});}):/*#__PURE__*/React.createElement(\"div\",{className:\"no-transactions\"},/*#__PURE__*/React.createElement(\"div\",{className:\"image-box\"}),/*#__PURE__*/React.createElement(\"span\",null,\"\\u6682\\u65E0\\u8BB0\\u5F55\")))))));};export default withAuth(TransferRecord,1);","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/GIT/src/pwa/view/TransferRecord.js"],"names":["React","useEffect","useState","useHistory","map","truncate","replace","split","head","last","Wrap","api","User","Transaction","getAuthKey","withAuth","CardItem","props","label","subLabel","time","value","status","className","TransferRecord","items","setItems","load","setLoad","fetch","response","post","read","auth","record_type","type","promise","then","result","info","e","console","log","history","goBack","length","obj","i","reg","platName","requestTime","amount","tranStatus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { map, truncate, replace, split, head, last } from \"lodash\";\r\n\r\nimport { Wrap } from \"../view/profile/\";\r\n\r\nimport \"../assets/scss/TransferRecord.scss\";\r\n\r\nimport api from \"../../service/api\";\r\nimport { User, Transaction } from \"../../service\";\r\n\r\nimport { getAuthKey } from \"../../util\";\r\nimport { withAuth } from \"../util/\";\r\n\r\nconst CardItem = (props) => {\r\n  const { label, subLabel, time, value, status, className } = props;\r\n\r\n  return (\r\n    <div className={`transfer-record-card-item ${className ? className : \"\"}`}>\r\n      <div className=\"cl-item transfer-record-card-text\">\r\n        <p className=\"cl-card-text\">\r\n          <span>{label}</span>\r\n          {subLabel && <span>{subLabel}</span>}\r\n        </p>\r\n        <p className=\"cl-card-time\">{time}</p>\r\n      </div>\r\n      <div className=\"cl-item transfer-record-card-value\">\r\n        <p className=\"cl-card-amount\">\r\n          金额: <span>{value}</span>\r\n        </p>\r\n        <p\r\n          className={`cl-card-status ${\r\n            status === \"成功\" ? \"success\" : \"failure\"\r\n          }`}\r\n        >\r\n          {/* <span>\t{status? \"成功\" : \"失败\"}</span> */}\r\n          <span>{status}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TransferRecord = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetch = () => {\r\n      // console.log(User.read())\r\n\r\n      const response = api.post(\"newpwa/ajax_data.php\", {\r\n        ...User.read(),\r\n        auth: getAuthKey(),\r\n        record_type: \"transfer\",\r\n        type: \"record_list\",\r\n      });\r\n\r\n      response.promise.then(\r\n        (result) => {\r\n          // console.log(result);\r\n          if (result.status === 1) {\r\n            setItems(result.info);\r\n            setLoad(false);\r\n          }\r\n        },\r\n        (e) => {\r\n          console.log(\"Unable to response:\", e);\r\n        }\r\n      );\r\n    };\r\n    fetch();\r\n  }, [load]);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Wrap\r\n      className=\"transfer-record-wrap\"\r\n      centerName=\"转账记录\"\r\n      sublevel={[true, () => history.goBack()]}\r\n    >\r\n      <div className=\"transfer-record-wrap-inner\">\r\n        <div className=\"transfer-record-wrap-inner-content\">\r\n          <div className=\"transfer-record-card\">\r\n            <div className=\"transfer-record-card-head\">\r\n              <div className=\"transfer-record-card-title\">\r\n                <span>最近30天</span>\r\n                <i\r\n                  className={load ? \"reload\" : \"\"}\r\n                  onClick={() => setLoad(true)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"transfer-record-card-body\">\r\n              {/* ITEM */}\r\n              {items && items.length > 0 ? (\r\n                map(items, (obj, i) => {\r\n                  let reg = split(obj.platName, \"-->\", 2);\r\n                  return (\r\n                    <CardItem\r\n                      key={i}\r\n                      index={i}\r\n                      label={head(reg)}\r\n                      subLabel={last(reg)}\r\n                      time={obj.requestTime}\r\n                      value={obj.amount}\r\n                      status={obj.tranStatus}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"no-transactions\">\r\n                  <div className=\"image-box\" />\r\n                  <span>暂无记录</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default withAuth(TransferRecord, 1);\r\n"]},"metadata":{},"sourceType":"module"}