{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/GIT/src/pwa/view/profile/personal/Cellphone.js\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { mobileModel } from \"react-device-detect\";\nimport { useHistory } from \"react-router-dom\";\nimport { Wrap, Service } from \"../\";\nimport { FormField } from \"../../../../component\";\n\nconst Cellphone = () => {\n  const history = useHistory();\n  const {\n    userAuth: {\n      data\n    },\n    setUserAuthFN\n  } = useContext(Service.User.Context);\n  const [status, setStatus] = useState(1);\n  const [cellphone, setCellphone] = useState(data.telephone || \"\");\n  const [code, setCode] = useState(\"\");\n  const form = {\n    realname: data.realName,\n    birthday: data.birthday,\n    email: data.email,\n    qq: data.qq,\n    wechat: data.wechat || \"\" // device: mobileModel, //\"Huawei Mate 20 Pro\",\n    // updates: [{ text: \"4.14.116\" }, { text: \"Thu Apr 30 18:27:58 CSTt 2020\" }],\n\n  };\n  const refcellphone = useRef(null);\n  const refcode = useRef(null);\n  const [message, setMessage] = useState({\n    className: null,\n    source: null,\n    message: null\n  });\n\n  const notify = (state, source, message) => {\n    setMessage({\n      className: state ? \"valid\" : \"invalid\",\n      source,\n      message\n    });\n  };\n\n  const [active, setActive] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [buttonActive, setButtonActive] = useState(cellphone ? true : false);\n  useEffect(() => {\n    function numbersOnly(value) {\n      const re = /^[0-9]*$/;\n      return re.test(value);\n    }\n\n    if (cellphone !== \"\" && cellphone.length === 11) {\n      setButtonActive(true);\n    }\n\n    if (cellphone !== \"\" && cellphone.length === 11 && numbersOnly(cellphone) && code !== \"\") setActive(true);else setActive(false);\n  }, [cellphone, code]);\n\n  const onChange = e => {\n    const cellphoneinput = e.target.value;\n\n    if (message.message && message.source === \"number\") {\n      setMessage({\n        className: null,\n        source: null,\n        message: null\n      });\n    }\n\n    setCellphone(cellphoneinput);\n  };\n\n  const onChangeCode = e => {\n    const codeinput = e.target.value;\n\n    if (message.message && message.source === \"number\") {\n      setMessage({\n        className: null,\n        source: null,\n        message: null\n      });\n    }\n\n    setCode(codeinput);\n  };\n\n  const update = () => {\n    setStatus(0);\n    console.info(\"You're updating account phone number:\", cellphone);\n    Service.User.update({ ...form,\n      ...Service.User.read(),\n      phone: cellphone,\n      verification_code: code\n    }).promise.then(r => {\n      console.info(\"✅ You have successfully updated account phone number:\", r.info);\n      notify(true, \"phone number\", r.info);\n      setStatus(1);\n      setActive(false);\n      setDisabled(true);\n      Service.User.session({ ...Service.User.read()\n      }).promise.then(r => setUserAuthFN(1, r.info));\n    }, e => {\n      console.warn(\"Unable to update account phone number:\", e);\n      notify(false, \"phone number\", e);\n      setStatus(1);\n      setActive(false);\n    });\n  };\n\n  function verification() {\n    setButtonActive(false);\n    setTimeout(() => {\n      setButtonActive(true);\n    }, 60000);\n\n    if (cellphone !== \"\") {\n      const req = Service.User.mobileVerification({\n        type: \"verification_code\",\n        phone: cellphone,\n        ...Service.User.read()\n      });\n      req.promise.then(r => {\n        console.log(\"Verification sent!\");\n      }, e => {\n        console.warn(\"Verification nto generated\", e);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: \"profile-general profile-cellphone\",\n    name: \"\\u624B\\u673A\\u53F7\\u7801\",\n    sublevel: [true, () => history.goBack()],\n    isLoading: !status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, disabled && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"profile-valid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    field: {\n      label: \"手机号码\"\n    },\n    input: {\n      id: \"number\",\n      name: \"number\",\n      type: \"text\",\n      className: `${buttonActive && \"active\"}`,\n      placeholder: \"请输入绑定的手机号码\",\n      ref: refcellphone,\n      maxLength: 11,\n      onChange,\n      defaultValue: cellphone,\n      onInput: () => refcellphone.current.value = refcellphone.current.value.replace(/[^0-9]/g, \"\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field verification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"code\",\n    name: \"code\",\n    type: \"text\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n    ref: refcode,\n    onChange: onChangeCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: `code ${buttonActive && \"active\"}`,\n    onClick: buttonActive ? () => verification() : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, \"\\u53D1\\u9001\\u9A8C\\u8BC1\\u7801\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-button ${active && !disabled && \"form-button-active\"}`,\n    onClick: active && !disabled ? update : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, \"\\u63D0\\u4EA4\"))));\n};\n\nexport default Cellphone;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/GIT/src/pwa/view/profile/personal/Cellphone.js"],"names":["React","useState","useRef","useEffect","useContext","mobileModel","useHistory","Wrap","Service","FormField","Cellphone","history","userAuth","data","setUserAuthFN","User","Context","status","setStatus","cellphone","setCellphone","telephone","code","setCode","form","realname","realName","birthday","email","qq","wechat","refcellphone","refcode","message","setMessage","className","source","notify","state","active","setActive","disabled","setDisabled","buttonActive","setButtonActive","numbersOnly","value","re","test","length","onChange","e","cellphoneinput","target","onChangeCode","codeinput","update","console","info","read","phone","verification_code","promise","then","r","session","warn","verification","setTimeout","req","mobileVerification","type","log","goBack","label","id","name","placeholder","ref","maxLength","defaultValue","onInput","current","replace"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { mobileModel } from \"react-device-detect\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Wrap, Service } from \"../\";\r\nimport { FormField } from \"../../../../component\";\r\n\r\nconst Cellphone = () => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    userAuth: { data },\r\n    setUserAuthFN,\r\n  } = useContext(Service.User.Context);\r\n\r\n  const [status, setStatus] = useState(1);\r\n  const [cellphone, setCellphone] = useState(data.telephone || \"\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const form = {\r\n    realname: data.realName,\r\n    birthday: data.birthday,\r\n    email: data.email,\r\n    qq: data.qq,\r\n    wechat: data.wechat || \"\",\r\n    // device: mobileModel, //\"Huawei Mate 20 Pro\",\r\n    // updates: [{ text: \"4.14.116\" }, { text: \"Thu Apr 30 18:27:58 CSTt 2020\" }],\r\n  };\r\n\r\n  const refcellphone = useRef(null);\r\n  const refcode = useRef(null);\r\n\r\n  const [message, setMessage] = useState({\r\n    className: null,\r\n    source: null,\r\n    message: null,\r\n  });\r\n\r\n  const notify = (state, source, message) => {\r\n    setMessage({\r\n      className: state ? \"valid\" : \"invalid\",\r\n      source,\r\n      message,\r\n    });\r\n  };\r\n\r\n  const [active, setActive] = useState(false);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [buttonActive, setButtonActive] = useState(cellphone ? true : false);\r\n\r\n  useEffect(() => {\r\n    function numbersOnly(value) {\r\n      const re = /^[0-9]*$/;\r\n      return re.test(value);\r\n    }\r\n    if (cellphone !== \"\" && cellphone.length === 11) {\r\n      setButtonActive(true);\r\n    }\r\n\r\n    if (\r\n      cellphone !== \"\" &&\r\n      cellphone.length === 11 &&\r\n      numbersOnly(cellphone) &&\r\n      code !== \"\"\r\n    )\r\n      setActive(true);\r\n    else setActive(false);\r\n  }, [cellphone, code]);\r\n\r\n  const onChange = (e) => {\r\n    const cellphoneinput = e.target.value;\r\n\r\n    if (message.message && message.source === \"number\") {\r\n      setMessage({\r\n        className: null,\r\n        source: null,\r\n        message: null,\r\n      });\r\n    }\r\n\r\n    setCellphone(cellphoneinput);\r\n  };\r\n\r\n  const onChangeCode = (e) => {\r\n    const codeinput = e.target.value;\r\n\r\n    if (message.message && message.source === \"number\") {\r\n      setMessage({\r\n        className: null,\r\n        source: null,\r\n        message: null,\r\n      });\r\n    }\r\n\r\n    setCode(codeinput);\r\n  };\r\n\r\n  const update = () => {\r\n    setStatus(0);\r\n\r\n    console.info(\"You're updating account phone number:\", cellphone);\r\n\r\n    Service.User.update({\r\n      ...form,\r\n      ...Service.User.read(),\r\n      phone: cellphone,\r\n      verification_code: code,\r\n    }).promise.then(\r\n      (r) => {\r\n        console.info(\r\n          \"✅ You have successfully updated account phone number:\",\r\n          r.info\r\n        );\r\n        notify(true, \"phone number\", r.info);\r\n        setStatus(1);\r\n        setActive(false);\r\n        setDisabled(true);\r\n\r\n        Service.User.session({\r\n          ...Service.User.read(),\r\n        }).promise.then((r) => setUserAuthFN(1, r.info));\r\n      },\r\n      (e) => {\r\n        console.warn(\"Unable to update account phone number:\", e);\r\n        notify(false, \"phone number\", e);\r\n        setStatus(1);\r\n        setActive(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  function verification() {\r\n    setButtonActive(false);\r\n\r\n    setTimeout(() => {\r\n      setButtonActive(true);\r\n    }, 60000);\r\n\r\n    if (cellphone !== \"\") {\r\n      const req = Service.User.mobileVerification({\r\n        type: \"verification_code\",\r\n        phone: cellphone,\r\n        ...Service.User.read(),\r\n      });\r\n\r\n      req.promise.then(\r\n        (r) => {\r\n          console.log(\"Verification sent!\");\r\n        },\r\n        (e) => {\r\n          console.warn(\"Verification nto generated\", e);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrap\r\n      className=\"profile-general profile-cellphone\"\r\n      name=\"手机号码\"\r\n      sublevel={[true, () => history.goBack()]}\r\n      isLoading={!status}\r\n    >\r\n      {disabled && <span className=\"profile-valid\" />}\r\n      <FormField\r\n        field={{ label: \"手机号码\" }}\r\n        input={{\r\n          id: \"number\",\r\n          name: \"number\",\r\n          type: \"text\",\r\n          className: `${buttonActive && \"active\"}`,\r\n          placeholder: \"请输入绑定的手机号码\",\r\n          ref: refcellphone,\r\n          maxLength: 11,\r\n          onChange,\r\n          defaultValue: cellphone,\r\n          onInput: () =>\r\n            (refcellphone.current.value = refcellphone.current.value.replace(\r\n              /[^0-9]/g,\r\n              \"\"\r\n            )),\r\n        }}\r\n      />\r\n      <div className={\"form-field verification\"}>\r\n        <input\r\n          id=\"code\"\r\n          name=\"code\"\r\n          type=\"text\"\r\n          placeholder=\"请输入验证码\"\r\n          ref={refcode}\r\n          onChange={onChangeCode}\r\n        />\r\n        <button\r\n          className={`code ${buttonActive && \"active\"}`}\r\n          onClick={buttonActive ? () => verification() : null}\r\n        >\r\n          发送验证码\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"submit\">\r\n        <div\r\n          className={`form-button ${\r\n            active && !disabled && \"form-button-active\"\r\n          }`}\r\n          onClick={active && !disabled ? update : null}\r\n        >\r\n          <span>提交</span>\r\n        </div>\r\n      </div>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Cellphone;\r\n"]},"metadata":{},"sourceType":"module"}