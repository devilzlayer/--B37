{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/cramj/Documents/New PWA/ubet-project (1)/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    position: relative;\\n    ul{\\n        box-shadow: none;\\n        position: relative;\\n        z-index: 1;\\n        background: none;\\n        li{\\n            justify-content: center;\\n            span{\\n                display: none;\\n            }\\n        }\\n    }\\n    .wheel-over {\\n        box-shadow: 0 1px 24px rgba(0, 0, 0, 0.06);\\n        position: absolute;\\n        left: 0;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        width: 100%;\\n        height: 36px;\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useState,useContext}from\"react\";import styled from'styled-components';import WheelPicker from'react-simple-wheel-picker';import{map,toString}from'lodash';var WheelWrapper=styled.div(_templateObject());var Wheel=function Wheel(props){var options=props.options,selected=props.selected,onChange=props.onChange;var val=toString(selected);var handleOnChange=function handleOnChange(target){};var newBalData=map(options,function(obj,i){return{id:toString(i),value:obj};});// console.log(val)\nreturn/*#__PURE__*/React.createElement(WheelWrapper,{className:\"wheelwrap\"},/*#__PURE__*/React.createElement(WheelPicker,{data:newBalData,onChange:handleOnChange,height:180,itemHeight:36// selectedID={val}\n,selectedID:val,color:\"#ccc\",activeColor:\"#000\",backgroundColor:\"#fff\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"wheel-over\"}));};export default Wheel;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/pwa/view/profile/transfer/wheel.js"],"names":["React","useEffect","useState","useContext","styled","WheelPicker","map","toString","WheelWrapper","div","Wheel","props","options","selected","onChange","val","handleOnChange","target","newBalData","obj","i","id","value"],"mappings":"2yBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,OAAQC,GAAR,CAAcC,QAAd,KAA6B,QAA7B,CACA,GAAMC,CAAAA,YAAY,CAAGJ,MAAM,CAACK,GAAV,mBAAlB,CA0BA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,IACbC,CAAAA,OADa,CACoBD,KADpB,CACbC,OADa,CACHC,QADG,CACoBF,KADpB,CACHE,QADG,CACQC,QADR,CACoBH,KADpB,CACQG,QADR,CAGrB,GAAIC,CAAAA,GAAG,CAAGR,QAAQ,CAACM,QAAD,CAAlB,CACA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,MAAM,CAAI,CAEhC,CAFD,CAIA,GAAMC,CAAAA,UAAU,CAAGZ,GAAG,CAACM,OAAD,CAAU,SAACO,GAAD,CAAOC,CAAP,CAAa,CACzC,MAAO,CACLC,EAAE,CAAEd,QAAQ,CAACa,CAAD,CADP,CAELE,KAAK,CAAGH,GAFH,CAAP,CAIH,CALqB,CAAtB,CAOA;AAEA,mBACI,oBAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,eACI,oBAAC,WAAD,EACI,IAAI,CAAED,UADV,CAEI,QAAQ,CAAEF,cAFd,CAGI,MAAM,CAAE,GAHZ,CAII,UAAU,CAAE,EACZ;AALJ,CAMI,UAAU,CAAED,GANhB,CAOI,KAAK,CAAC,MAPV,CAQI,WAAW,CAAC,MARhB,CASI,eAAe,CAAC,MATpB,EADJ,cAYI,2BAAK,SAAS,CAAC,YAAf,EAZJ,CADJ,CAgBH,CAjCD,CAmCA,cAAeL,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport styled from 'styled-components'\r\nimport WheelPicker from 'react-simple-wheel-picker';\r\nimport {map , toString} from 'lodash'\r\nconst WheelWrapper = styled.div`\r\n    position: relative;\r\n    ul{\r\n        box-shadow: none;\r\n        position: relative;\r\n        z-index: 1;\r\n        background: none;\r\n        li{\r\n            justify-content: center;\r\n            span{\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n    .wheel-over {\r\n        box-shadow: 0 1px 24px rgba(0, 0, 0, 0.06);\r\n        position: absolute;\r\n        left: 0;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        width: 100%;\r\n        height: 36px;\r\n    }\r\n`\r\n\r\n\r\nconst Wheel = (props) => {\r\n    const { options , selected , onChange} = props\r\n\r\n    let val = toString(selected)\r\n    const handleOnChange = target => {\r\n   \r\n    };\r\n\r\n    const newBalData = map(options, (obj , i ) =>{\r\n        return { \r\n          id: toString(i),\r\n          value : obj\r\n        }\r\n    }) \r\n\r\n    // console.log(val)\r\n\r\n    return (\r\n        <WheelWrapper className=\"wheelwrap\">\r\n            <WheelPicker\r\n                data={newBalData}\r\n                onChange={handleOnChange}\r\n                height={180}\r\n                itemHeight={36}\r\n                // selectedID={val}\r\n                selectedID={val}\r\n                color=\"#ccc\"\r\n                activeColor=\"#000\"\r\n                backgroundColor=\"#fff\"\r\n            />\r\n            <div className=\"wheel-over\" />\r\n        </WheelWrapper>\r\n    );\r\n};\r\n\r\nexport default Wheel"]},"metadata":{},"sourceType":"module"}