{"ast":null,"code":"import _objectSpread from\"/Users/cramj/Documents/New PWA/ubet-project (1)/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cramj/Documents/New PWA/ubet-project (1)/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{map,head,last,split,isEmpty}from'lodash';import{Service}from'../';var CardItem=function CardItem(props){var label=props.label,subLabel=props.subLabel,time=props.time,value=props.value,status=props.status,className=props.className;return/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-record-card-item \".concat(className?className:\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"cl-item transfer-record-card-text\"},/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-text\"},/*#__PURE__*/React.createElement(\"span\",null,label),subLabel&&/*#__PURE__*/React.createElement(\"span\",null,subLabel)),/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-time\"},time)),/*#__PURE__*/React.createElement(\"div\",{className:\"cl-item transfer-record-card-value\"},/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-amount\"},\"\\u91D1\\u989D: \",/*#__PURE__*/React.createElement(\"span\",null,value)),/*#__PURE__*/React.createElement(\"p\",{className:\"cl-card-status \".concat(status===\"成功\"?\"success\":\"failure\")},/*#__PURE__*/React.createElement(\"span\",null,status))));};var TransferRecord=function TransferRecord(props){var id=props.id,refresh=props.refresh,onStop=props.onStop;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),load=_useState4[0],setLoad=_useState4[1];useEffect(function(){if(refresh==id){setLoad(true);}},[refresh]);useEffect(function(){var fetch=function fetch(){// console.log(User.read())\nvar req=Service.Transaction.read(_objectSpread(_objectSpread({},Service.User.read()),{},{record_type:\"transfer\",type:\"record_list\"}));req.promise.then(function(result){// console.log(result);\nif(result.status===1){setItems(result.info);setLoad(false);onStop();}},function(e){console.log(\"Unable to response:\",e);});};fetch();},[load]);if(!isEmpty(items)){return/*#__PURE__*/React.createElement(\"div\",{className:\"transfer-history-card-body\"},map(items,function(obj,i){var reg=split(obj.platName,\"-->\",2);return/*#__PURE__*/React.createElement(CardItem,{key:i,index:i,label:head(reg),subLabel:last(reg),time:obj.requestTime,value:obj.amount,status:obj.tranStatus});}));}return/*#__PURE__*/React.createElement(\"div\",{className:\"no-transactions\"},/*#__PURE__*/React.createElement(\"div\",{className:\"image-box\"}),/*#__PURE__*/React.createElement(\"span\",null,\"\\u6682\\u65E0\\u8BB0\\u5F55\"));};export default TransferRecord;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/profile/transferhistory/transferrecord.js"],"names":["React","useEffect","useState","map","head","last","split","isEmpty","Service","CardItem","props","label","subLabel","time","value","status","className","TransferRecord","id","refresh","onStop","items","setItems","load","setLoad","fetch","req","Transaction","read","User","record_type","type","promise","then","result","info","e","console","log","obj","i","reg","platName","requestTime","amount","tranStatus"],"mappings":"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","sourcesContent":["import React  ,{ useEffect, useState }from \"react\";\r\nimport { map , head,  last , split,isEmpty } from 'lodash'\r\n\r\nimport { Service } from '../'\r\n\r\n\r\n\r\nconst CardItem = (props) => {\r\n    const { label, subLabel, time, value, status, className } = props;\r\n  \r\n    return (\r\n      <div className={`transfer-record-card-item ${className ? className : \"\"}`}>\r\n        <div className=\"cl-item transfer-record-card-text\">\r\n          <p className=\"cl-card-text\">\r\n            <span>{label}</span>\r\n            {subLabel && <span>{subLabel}</span>}\r\n          </p>\r\n          <p className=\"cl-card-time\">{time}</p>\r\n        </div>\r\n        <div className=\"cl-item transfer-record-card-value\">\r\n          <p className=\"cl-card-amount\">\r\n            金额: <span>{value}</span>\r\n          </p>\r\n          <p\r\n            className={`cl-card-status ${\r\n              status === \"成功\" ? \"success\" : \"failure\"\r\n            }`}\r\n          >\r\n            {/* <span>\t{status? \"成功\" : \"失败\"}</span> */}\r\n            <span>{status}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst TransferRecord = (props) => {\r\n    const { id ,refresh , onStop } = props\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [load, setLoad] = useState(false);\r\n\r\n    useEffect(() =>{\r\n      if(refresh == id ){\r\n        setLoad(true)\r\n      }\r\n    },[refresh])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetch = () => {\r\n        // console.log(User.read())\r\n\r\n          const req = Service.Transaction.read({\r\n              ...Service.User.read(),\r\n              record_type: \"transfer\",\r\n              type: \"record_list\",\r\n          });\r\n\r\n          req.promise.then((result) => {\r\n              // console.log(result);\r\n              if (result.status === 1) {\r\n                  setItems(result.info);\r\n                  setLoad(false);\r\n                  onStop()\r\n\r\n              }\r\n          },(e) => {\r\n              console.log(\"Unable to response:\", e);\r\n          })\r\n        };\r\n        fetch();\r\n    }, [load]);\r\n\r\n    if(!isEmpty(items)){\r\n        return  <div className=\"transfer-history-card-body\">\r\n                    {\r\n                    map(items, (obj, i) => {\r\n                        let reg = split(obj.platName, \"-->\", 2);\r\n                        return (\r\n                        <CardItem\r\n                            key={i}\r\n                            index={i}\r\n                            label={head(reg)}\r\n                            subLabel={last(reg)}\r\n                            time={obj.requestTime}\r\n                            value={obj.amount}\r\n                            status={obj.tranStatus}\r\n                          />\r\n                        );\r\n                    })\r\n                    }\r\n\r\n                </div>\r\n    }\r\n\r\n    return  <div className=\"no-transactions\">\r\n                <div className=\"image-box\" />\r\n                <span>暂无记录</span>\r\n            </div>\r\n\r\n\r\n}\r\n\r\nexport default TransferRecord"]},"metadata":{},"sourceType":"module"}