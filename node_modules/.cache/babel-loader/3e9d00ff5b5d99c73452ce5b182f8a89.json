{"ast":null,"code":"import qs from \"query-string\";\nconst baseURL = \"https://u2daszapp.u2d8899.com/\"; // const baseURL = 'https://sghsrthth9i9.u2d12345.com/';\n\nfunction request(method, path, data, params = {}) {\n  let is_aborted = false;\n  const controller = new AbortController();\n  const promise = new Promise((resolve, reject) => {\n    let url = `${baseURL}${path}`;\n    let req = {\n      method,\n      headers: {},\n      signal: controller.signal\n    };\n\n    if (data && Object.keys(data).length && method === \"get\") {\n      url += `?${qs.stringify(data)}`;\n    }\n\n    if (data && Object.keys(data).length && method === \"post\") {\n      // req.body = JSON.stringify(data);\n      // req.headers['Content-Type'] = 'application/json; charset=utf-8';\n      if (data.type === \"upload_pictures\") {\n        req.body = data.body;\n      } else {\n        req.body = qs.stringify(data);\n        req.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded; charset=utf-8\";\n      }\n    }\n\n    fetch(url, req).then(r => {\n      r.json().then(r => {\n        if (+r.status !== 1) {\n          return void (params.fail ? params.fail(r.info, reject, resolve) : reject(r.info || r.message));\n        }\n\n        params.done ? params.done(r, resolve, reject) : resolve(r);\n      }, e => {\n        const error = {\n          is_aborted,\n          level: 1,\n          e\n        };\n        params.fail ? params.fail(error, reject) : reject(error);\n      });\n    }, e => {\n      const error = {\n        is_aborted,\n        level: 0,\n        e\n      };\n      params.fail ? params.fail(error, reject) : reject(error);\n    });\n  });\n  return {\n    promise,\n    cancel: () => {\n      is_aborted = true;\n      controller.abort();\n    }\n  };\n}\n\nexport default {\n  request,\n  get: (path, data, params) => request(\"get\", path, data, params),\n  post: (path, data, params) => request(\"post\", path, data, params)\n};","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/service/api.js"],"names":["qs","baseURL","request","method","path","data","params","is_aborted","controller","AbortController","promise","Promise","resolve","reject","url","req","headers","signal","Object","keys","length","stringify","type","body","fetch","then","r","json","status","fail","info","message","done","e","error","level","cancel","abort","get","post"],"mappings":"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","sourcesContent":["import qs from \"query-string\";\r\n\r\nconst baseURL = \"https://u2daszapp.u2d8899.com/\";\r\n// const baseURL = 'https://sghsrthth9i9.u2d12345.com/';\r\n\r\nfunction request(method, path, data, params = {}) {\r\n  let is_aborted = false;\r\n\r\n  const controller = new AbortController();\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    let url = `${baseURL}${path}`;\r\n\r\n    let req = {\r\n      method,\r\n      headers: {},\r\n      signal: controller.signal,\r\n    };\r\n\r\n    if (data && Object.keys(data).length && method === \"get\") {\r\n      url += `?${qs.stringify(data)}`;\r\n    }\r\n\r\n    if (data && Object.keys(data).length && method === \"post\") {\r\n      // req.body = JSON.stringify(data);\r\n      // req.headers['Content-Type'] = 'application/json; charset=utf-8';\r\n      if (data.type === \"upload_pictures\") {\r\n        req.body = data.body;\r\n      } else {\r\n        req.body = qs.stringify(data);\r\n        req.headers[\"Content-Type\"] =\r\n          \"application/x-www-form-urlencoded; charset=utf-8\";\r\n      }\r\n    }\r\n\r\n    fetch(url, req).then(\r\n      (r) => {\r\n        r.json().then(\r\n          (r) => {\r\n            if (+r.status !== 1) {\r\n              return void (params.fail\r\n                ? params.fail(r.info, reject, resolve)\r\n                : reject(r.info || r.message));\r\n            }\r\n\r\n            params.done ? params.done(r, resolve, reject) : resolve(r);\r\n          },\r\n          (e) => {\r\n            const error = {\r\n              is_aborted,\r\n              level: 1,\r\n              e,\r\n            };\r\n\r\n            params.fail ? params.fail(error, reject) : reject(error);\r\n          }\r\n        );\r\n      },\r\n      (e) => {\r\n        const error = {\r\n          is_aborted,\r\n          level: 0,\r\n          e,\r\n        };\r\n\r\n        params.fail ? params.fail(error, reject) : reject(error);\r\n      }\r\n    );\r\n  });\r\n\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      is_aborted = true;\r\n\r\n      controller.abort();\r\n    },\r\n  };\r\n}\r\n\r\nexport default {\r\n  request,\r\n\r\n  get: (path, data, params) => request(\"get\", path, data, params),\r\n\r\n  post: (path, data, params) => request(\"post\", path, data, params),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}