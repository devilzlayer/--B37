{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/profile/Inbox.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { map, isEmpty } from \"lodash\";\nimport { withAuth } from \"../../util\";\nimport { Service } from \"./\";\nimport Wrap from \"./Wrap\";\nconst status = [\"未读\", \"已读\"];\n\nconst Inbox = () => {\n  const [messages, setMessages] = useState({\n    status: 0,\n    list: null\n  });\n  const [read, setRead] = useState(null);\n  useEffect(() => {\n    const req = Service.Inbox.read({\n      record_type: \"message\"\n    });\n    req.promise.then(r => {\n      // console.info(r);\n      setMessages({\n        status: 1,\n        list: r.info\n      });\n    }, e => {\n      console.warn(e);\n    });\n  }, []);\n\n  const onRead = id => {\n    Service.Inbox.readCurrent({\n      id\n    }).promise.then(r => {\n      console.info(r);\n      setRead(r.info);\n    }, e => {\n      console.warn(e);\n    });\n  };\n\n  console.log(messages.list);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: \"profile-inbox-desktop\",\n    title: \"信息\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-section section-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-section-message-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, !isEmpty(messages.list) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-section-message-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, map(messages.list, (obj, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"p-section-m-item\",\n      onClick: () => onRead(obj.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-section-m-subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, obj.subject), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-section-m-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, obj.send_time), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-section-m-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: obj.message_status == 0 ? \"unread\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, status[obj.message_status])));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-section-message-norecord\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-section-message-norecord-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"\\u627E\\u4E0D\\u5230\\u8BAF\\u606F\"))))), read && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"read-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"read-message-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"read-message-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"\\u4FE1\\u606F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"read-message-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"read-message-subject-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, read.subject), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, read.send_time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"read-message-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, read.content)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"read-message-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRead(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"\\u786E\\u5B9A\")))));\n};\n\nexport default Inbox;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/profile/Inbox.js"],"names":["React","useEffect","useState","map","isEmpty","withAuth","Service","Wrap","status","Inbox","messages","setMessages","list","read","setRead","req","record_type","promise","then","r","info","e","console","warn","onRead","id","readCurrent","log","obj","i","subject","send_time","message_status","content"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { map , isEmpty} from \"lodash\";\r\nimport { withAuth } from \"../../util\";\r\n\r\nimport { Service } from \"./\";\r\n\r\nimport Wrap from \"./Wrap\";\r\n\r\nconst status = [\"未读\", \"已读\"];\r\nconst Inbox = () => {\r\n  const [messages, setMessages] = useState({\r\n    status: 0,\r\n    list: null,\r\n  });\r\n\r\n  const [read, setRead] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const req = Service.Inbox.read({\r\n      record_type: \"message\",\r\n    });\r\n    req.promise.then(\r\n      (r) => {\r\n        // console.info(r);\r\n        setMessages({\r\n          status: 1,\r\n          list: r.info,\r\n        });\r\n      },\r\n      (e) => {\r\n        console.warn(e);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const onRead = (id) => {\r\n    Service.Inbox.readCurrent({ id }).promise.then(\r\n      (r) => {\r\n        console.info(r);\r\n        setRead(r.info);\r\n      },\r\n      (e) => {\r\n        console.warn(e);\r\n      }\r\n    );\r\n  };\r\n\r\n  console.log( messages.list )\r\n\r\n  return (\r\n    <Wrap className=\"profile-inbox-desktop\" title={\"信息\"}>\r\n      <div className=\"profile-section section-box\">\r\n        \r\n        {/* <div className=\"profile-section-title\">信息</div> */}\r\n\r\n        <div className=\"profile-section-message-wrap\">\r\n          {!isEmpty(messages.list) ? (\r\n            <div className=\"profile-section-message-list\">\r\n              {map(messages.list, (obj, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"p-section-m-item\"\r\n                    onClick={() => onRead(obj.id)}\r\n                  >\r\n                    <div className=\"p-section-m-subject\">{obj.subject}</div>\r\n                    <div className=\"p-section-m-time\">{obj.send_time}</div>\r\n                    <div className=\"p-section-m-status\">\r\n                      <span className={obj.message_status == 0 ? \"unread\" : \"\"}>\r\n                        {status[obj.message_status]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <div className=\"profile-section-message-norecord\">\r\n              <div className=\"profile-section-message-norecord-wrap\">\r\n                <i />\r\n                <span>找不到讯息</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {read && (\r\n        <div className=\"read-message\">\r\n          <div className=\"read-message-wrap\">\r\n            <div className=\"read-message-title\">信息</div>\r\n\r\n            <div className=\"read-message-content\">\r\n              <div className=\"read-message-subject-time\">\r\n                <span>{read.subject}</span>\r\n                <span>{read.send_time}</span>\r\n              </div>\r\n              <div className=\"read-message-text\">{read.content}</div>\r\n            </div>\r\n            <div className=\"read-message-button\">\r\n              <button onClick={() => setRead(null)}>确定</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n"]},"metadata":{},"sourceType":"module"}