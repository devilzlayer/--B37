{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/GIT/src/view/profile/settings/calendar.js\";\nimport React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport DatePicker from 'react-mobile-datepicker';\nimport moment from 'moment';\nimport { getDates } from \"../../../util\";\n\nconst Calendar = props => {\n  const {\n    onDate\n  } = props;\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate();\n  const [dateRange, setRange] = useState({\n    min: new Date(1989, 0, 1),\n    max: new Date(year - 18, month, day)\n  });\n  const [time, setTime] = useState(new Date(year - 18, month, day));\n\n  const onChange = e => {\n    const newDate = new Date(e);\n    const year = newDate.getFullYear();\n    const month = newDate.getMonth();\n    const day = newDate.getDate();\n    setTime(e);\n    onDate(`${year}年${month + 1}月${day}日`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-setting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    value: time,\n    isOpen: true,\n    isPopup: false,\n    showHeader: false,\n    showFooter: false,\n    min: dateRange.min,\n    max: dateRange.max,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/GIT/src/view/profile/settings/calendar.js"],"names":["React","useState","useEffect","useContext","useMemo","DatePicker","moment","getDates","Calendar","props","onDate","date","Date","year","getFullYear","month","getMonth","day","getDate","dateRange","setRange","min","max","time","setTime","onChange","e","newDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAkDC,OAAlD,QAAgE,OAAhE;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AAEA,QAAME,IAAI,GAAI,IAAIC,IAAJ,EAAd;AACA,QAAMC,IAAI,GAAIF,IAAI,CAACG,WAAL,EAAd;AACA,QAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,EAAd;AACA,QAAMC,GAAG,GAAKN,IAAI,CAACO,OAAL,EAAd;AAGA,QAAM,CAAEC,SAAF,EAAcC,QAAd,IAA0BnB,QAAQ,CAAC;AACrCoB,IAAAA,GAAG,EAAG,IAAIT,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CAD+B;AAErCU,IAAAA,GAAG,EAAG,IAAIV,IAAJ,CAASC,IAAI,GAAG,EAAhB,EAAoBE,KAApB,EAA2BE,GAA3B;AAF+B,GAAD,CAAxC;AAIA,QAAM,CAAEM,IAAF,EAASC,OAAT,IAAqBvB,QAAQ,CAAC,IAAIW,IAAJ,CAASC,IAAI,GAAG,EAAhB,EAAoBE,KAApB,EAA2BE,GAA3B,CAAD,CAAnC;;AAGA,QAAMQ,QAAQ,GAAIC,CAAD,IAAM;AACnB,UAAMC,OAAO,GAAK,IAAIf,IAAJ,CAASc,CAAT,CAAlB;AACA,UAAMb,IAAI,GAAQc,OAAO,CAACb,WAAR,EAAlB;AACA,UAAMC,KAAK,GAAOY,OAAO,CAACX,QAAR,EAAlB;AACA,UAAMC,GAAG,GAASU,OAAO,CAACT,OAAR,EAAlB;AACAM,IAAAA,OAAO,CAACE,CAAD,CAAP;AACAhB,IAAAA,MAAM,CAAE,GAAEG,IAAK,IAAGE,KAAK,GAAG,CAAE,IAAGE,GAAI,GAA7B,CAAN;AACH,GAPD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEM,IADX;AAEI,IAAA,MAAM,EAAE,IAFZ;AAGI,IAAA,OAAO,EAAE,KAHb;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,UAAU,EAAE,KALhB;AAMI,IAAA,GAAG,EAAEJ,SAAS,CAACE,GANnB;AAOI,IAAA,GAAG,EAAEF,SAAS,CAACG,GAPnB;AAQI,IAAA,QAAQ,EAAEG,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAcH,CAxCD;;AA0CA,eAAejB,QAAf","sourcesContent":["import React, { useState, useEffect, useContext , useMemo} from \"react\";\r\nimport DatePicker from 'react-mobile-datepicker';\r\nimport moment from 'moment'\r\n\r\nimport { getDates } from \"../../../util\";\r\n\r\nconst Calendar = (props) =>{\r\n    const { onDate } = props\r\n\r\n    const date  = new Date();\r\n    const year  = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day   = date.getDate();\r\n\r\n    \r\n    const [ dateRange , setRange ]= useState({\r\n        min : new Date(1989,0,1),\r\n        max : new Date(year - 18, month, day)\r\n    })\r\n    const [ time , setTime ] = useState(new Date(year - 18, month, day))\r\n\r\n\r\n    const onChange = (e) =>{\r\n        const newDate   = new Date(e);\r\n        const year      = newDate.getFullYear();\r\n        const month     = newDate.getMonth();\r\n        const day       = newDate.getDate();\r\n        setTime(e)\r\n        onDate(`${year}年${month + 1}月${day}日`)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-setting\">\r\n            <DatePicker\r\n                value={time}\r\n                isOpen={true}\r\n                isPopup={false}\r\n                showHeader={false}\r\n                showFooter={false}\r\n                min={dateRange.min}\r\n                max={dateRange.max}\r\n                onChange={onChange}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar"]},"metadata":{},"sourceType":"module"}