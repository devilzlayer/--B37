{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/ubet-project (1)/src/pwa/view/profile/Personal.jsx\";\nimport React, { useState, useContext, useCallback, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { mobileModel } from \"react-device-detect\";\nimport { Wrap, Service } from \"./\";\nimport { UIAlertSA, LiveChatSA } from \"../../component/\";\nimport { FormField } from \"../../../component/\";\nimport { withAuth } from \"../../util\";\nimport { getDates } from \"../../util\";\n\nconst Switch = () => {\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Personal = () => {\n  const {\n    userAuth: {\n      data: user\n    } // setUserAuthFN,\n\n  } = useContext(Service.User.Context); // const [status, setStatus] = useState(1);\n\n  const [editKey, setEditKey] = useState(false);\n  const [eye, setEye] = useState(false);\n  const [livechat, setLiveChat] = useState(false);\n  const refPassword = useRef(null);\n\n  const _dateParse = useCallback(date => {\n    const _parsed = (date || \"\").match(/([\\d]{4})年([\\d]{1,2})月([\\d]{1,2})日/);\n\n    if (!_parsed) {\n      return {\n        year: null,\n        month: null,\n        day: null\n      };\n    }\n\n    const _date = {\n      year: +_parsed[1],\n      month: +_parsed[2],\n      day: +_parsed[3]\n    };\n    return _date;\n  }, []);\n\n  const [form, setForm] = useState({\n    email: user.email || \"\",\n    name: user.realName || \"\",\n    birthday: _dateParse(user.birthday) || \"\",\n    number: user.telephone || \"\",\n    qq: user.qq || \"\",\n    wechat: user.wechat || \"\",\n    device: mobileModel,\n    //\"Huawei Mate 20 Pro\",\n    updates: [{\n      text: \"4.14.116\"\n    }, {\n      text: getDates\n    }]\n  });\n  const [subform, setSubform] = useState({\n    email: !!user.email,\n    name: !!user.realName,\n    birthday: !!_dateParse(user.birthday).year,\n    number: !!user.telephone,\n    qq: !!user.qq\n  });\n\n  const _dateFormat = useCallback(date => date.year ? `${date.year}年${date.month}月${date.day}日` : \"请选择一个日期\", []);\n\n  const fields = [{\n    field: {\n      label: \"真实姓名\",\n      class: \"name\",\n      type: \"link\",\n      link: \"fullname\"\n    },\n    input: {\n      id: \"name\",\n      type: \"text\",\n      name: \"name\"\n    }\n  }, {\n    field: {\n      label: \"出生日期\",\n      class: \"birthday\",\n      // type: \"input\",\n      type: \"link\",\n      link: \"birthdate\"\n    },\n    input: {\n      id: \"birthday\",\n      type: \"text\",\n      name: \"birthday\",\n      readOnly: true\n    }\n  }, {\n    field: {\n      label: \"手机号码\",\n      class: \"contact group top\",\n      type: \"link\",\n      link: \"cellphone\"\n    },\n    input: {\n      id: \"number\",\n      type: \"text\",\n      name: \"number\"\n    }\n  }, {\n    field: {\n      label: \"邮箱地址\",\n      class: \"email group\",\n      type: \"link\",\n      link: \"email\"\n    },\n    input: {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\"\n    }\n  }, {\n    field: {\n      label: \"修改密码\",\n      class: \"password group bottom\",\n      type: \"link\",\n      link: \"password\"\n    },\n    input: {\n      id: \"password\",\n      type: \"password\",\n      name: \"password\"\n    }\n  }, {\n    field: {\n      label: \"夜间模式\",\n      class: \"nightmode\",\n      type: \"button\"\n    },\n    input: {\n      name: \"nigtmode\"\n    }\n  }, {\n    field: {\n      label: \"设备信息\",\n      class: \"device group top\",\n      type: \"text\"\n    },\n    input: {\n      id: \"device\",\n      type: \"text\",\n      readOnly: true,\n      name: \"device\"\n    }\n  }, {\n    field: {\n      label: \"清理缓存\",\n      class: \"cache group\",\n      type: \"link\",\n      link: \"\"\n    }\n  },\n  /*{\r\n    field: {\r\n      label: \"清理缓存\",\r\n      class: \"cache group\",\r\n      link: \"cache\",\r\n    },\r\n    input: {\r\n      readOnly: true,\r\n      name: \"cache\",\r\n    },\r\n  },*/\n  {\n    field: {\n      label: \"检查更新\",\n      class: \"updates group bottom\",\n      type: \"text\"\n    },\n    input: {\n      id: \"updates\",\n      type: \"text\",\n      readOnly: true,\n      name: \"updates\"\n    }\n  }];\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(f => ({ ...f,\n      [name]: value\n    }));\n  };\n\n  const onVision = () => {\n    if (refPassword.current.type === \"password\") {\n      refPassword.current.type = \"text\";\n      setEye(true);\n      return false;\n    }\n\n    refPassword.current.type = \"password\";\n    setEye(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: \"profile-personal\",\n    name: \"\\u4E2A\\u4EBA\\u8D44\\u6599\" // isLoading={!status}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, fields.map((f, i) => {\n    let inputVal = \"\";\n\n    if (f.input) {\n      inputVal = form[f.input.name] ? form[f.input.name] : \"\";\n\n      if (f.input.name === \"birthday\") {\n        inputVal = _dateFormat(form[f.input.name]);\n      }\n    }\n\n    if (f.field.type === \"link\" && (inputVal === \"请选择一个日期\" || f.field.class === \"contact group top\" && user.phone_verify === \"0\" || !inputVal)) {\n      return /*#__PURE__*/React.createElement(Link, {\n        className: `field-item ${f.field.class}`,\n        key: i,\n        to: f.field.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }\n      }, f.field.label), !inputVal && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 31\n        }\n      }), inputVal && /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 30\n        }\n      }, inputVal ? inputVal : null));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `field-item 123 ${f.field.class}`,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, f.field.label), f.field.type === \"button\" && /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 45\n      }\n    }), f.input && f.field.type === \"input\" && /*#__PURE__*/React.createElement(FormField, {\n      field: { ...f.field\n      },\n      input: { ...f.input,\n        onChange,\n        onBlur: () => setEditKey(null),\n        value: form[f.input.name] ? form[f.input.name] : \"\",\n        disabled: subform[f.input.name]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }), inputVal && Array.isArray(inputVal) ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, inputVal.map((obj, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 28\n        }\n      }, obj.text);\n    })) : f.input && f.input.type !== \"password\" && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      onClick: () => f.input.name === \"birthday\" || f.input.name === \"email\" || f.input.name === \"number\" && user.phone_verify === \"1\" ? setEditKey(true) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }, inputVal), inputVal && f.input && f.input.type === \"password\" && [/*#__PURE__*/React.createElement(\"input\", {\n      key: \"password\",\n      className: \"readOnly\",\n      ref: refPassword,\n      type: f.input.type,\n      value: inputVal,\n      readOnly: true,\n      onClick: () => setEditKey(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      key: \"eye\",\n      className: `eye${eye ? \" vision\" : \"\"}`,\n      onClick: () => onVision(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    })]);\n  })), /*#__PURE__*/React.createElement(UIAlertSA, {\n    onClose: () => setTimeout(() => {\n      setEditKey(false);\n    }, 200),\n    shown: editKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-error-update-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-error-update-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, \"\\u8BF7\\u6CE8\\u610F \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-error-update-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-e-u-b-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => {\n      setEditKey(false);\n      setLiveChat(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, \"\\u5982\\u9700\\u66F4\\u6539\\u6B64\\u4FE1\\u606F\\u8BF7\\u8054\\u7CFB\\u5BA2\\u670D\\u534F\\u52A9\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"\\u8C22\\u8C22\"))))), /*#__PURE__*/React.createElement(LiveChatSA, {\n    shown: livechat,\n    onClose: () => setLiveChat(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default withAuth(Personal, 1);","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/pwa/view/profile/Personal.jsx"],"names":["React","useState","useContext","useCallback","useRef","Link","mobileModel","Wrap","Service","UIAlertSA","LiveChatSA","FormField","withAuth","getDates","Switch","Personal","userAuth","data","user","User","Context","editKey","setEditKey","eye","setEye","livechat","setLiveChat","refPassword","_dateParse","date","_parsed","match","year","month","day","_date","form","setForm","email","name","realName","birthday","number","telephone","qq","wechat","device","updates","text","subform","setSubform","_dateFormat","fields","field","label","class","type","link","input","id","readOnly","onChange","e","value","target","f","onVision","current","map","i","inputVal","phone_verify","onBlur","disabled","Array","isArray","obj","key","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useCallback, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { mobileModel } from \"react-device-detect\";\r\nimport { Wrap, Service } from \"./\";\r\nimport { UIAlertSA, LiveChatSA } from \"../../component/\";\r\nimport { FormField } from \"../../../component/\";\r\nimport { withAuth } from \"../../util\";\r\nimport { getDates } from \"../../util\";\r\n\r\nconst Switch = () => {\r\n  return (\r\n    <label className=\"switch\">\r\n      <input type=\"checkbox\" />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst Personal = () => {\r\n  const {\r\n    userAuth: { data: user },\r\n    // setUserAuthFN,\r\n  } = useContext(Service.User.Context);\r\n\r\n  // const [status, setStatus] = useState(1);\r\n  const [editKey, setEditKey] = useState(false);\r\n  const [eye, setEye] = useState(false);\r\n  const [livechat, setLiveChat] = useState(false);\r\n\r\n  const refPassword = useRef(null);\r\n\r\n  const _dateParse = useCallback((date) => {\r\n    const _parsed = (date || \"\").match(/([\\d]{4})年([\\d]{1,2})月([\\d]{1,2})日/);\r\n\r\n    if (!_parsed) {\r\n      return {\r\n        year: null,\r\n        month: null,\r\n        day: null,\r\n      };\r\n    }\r\n\r\n    const _date = {\r\n      year: +_parsed[1],\r\n      month: +_parsed[2],\r\n      day: +_parsed[3],\r\n    };\r\n\r\n    return _date;\r\n  }, []);\r\n\r\n  const [form, setForm] = useState({\r\n    email: user.email || \"\",\r\n    name: user.realName || \"\",\r\n    birthday: _dateParse(user.birthday) || \"\",\r\n    number: user.telephone || \"\",\r\n    qq: user.qq || \"\",\r\n    wechat: user.wechat || \"\",\r\n    device: mobileModel, //\"Huawei Mate 20 Pro\",\r\n    updates: [{ text: \"4.14.116\" }, { text: getDates }],\r\n  });\r\n\r\n  const [subform, setSubform] = useState({\r\n    email: !!user.email,\r\n    name: !!user.realName,\r\n    birthday: !!_dateParse(user.birthday).year,\r\n    number: !!user.telephone,\r\n    qq: !!user.qq,\r\n  });\r\n\r\n  const _dateFormat = useCallback(\r\n    (date) =>\r\n      date.year\r\n        ? `${date.year}年${date.month}月${date.day}日`\r\n        : \"请选择一个日期\",\r\n    []\r\n  );\r\n\r\n  const fields = [\r\n    {\r\n      field: {\r\n        label: \"真实姓名\",\r\n        class: \"name\",\r\n        type: \"link\",\r\n        link: \"fullname\",\r\n      },\r\n      input: {\r\n        id: \"name\",\r\n        type: \"text\",\r\n        name: \"name\",\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"出生日期\",\r\n        class: \"birthday\",\r\n        // type: \"input\",\r\n        type: \"link\",\r\n        link: \"birthdate\",\r\n      },\r\n      input: {\r\n        id: \"birthday\",\r\n        type: \"text\",\r\n        name: \"birthday\",\r\n        readOnly: true,\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"手机号码\",\r\n        class: \"contact group top\",\r\n        type: \"link\",\r\n        link: \"cellphone\",\r\n      },\r\n      input: {\r\n        id: \"number\",\r\n        type: \"text\",\r\n        name: \"number\",\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"邮箱地址\",\r\n        class: \"email group\",\r\n        type: \"link\",\r\n        link: \"email\",\r\n      },\r\n      input: {\r\n        id: \"email\",\r\n        type: \"email\",\r\n        name: \"email\",\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"修改密码\",\r\n        class: \"password group bottom\",\r\n        type: \"link\",\r\n        link: \"password\",\r\n      },\r\n      input: {\r\n        id: \"password\",\r\n        type: \"password\",\r\n        name: \"password\",\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"夜间模式\",\r\n        class: \"nightmode\",\r\n        type: \"button\",\r\n      },\r\n      input: {\r\n        name: \"nigtmode\",\r\n      },\r\n    },\r\n    {\r\n      field: {\r\n        label: \"设备信息\",\r\n        class: \"device group top\",\r\n        type: \"text\",\r\n      },\r\n      input: {\r\n        id: \"device\",\r\n        type: \"text\",\r\n        readOnly: true,\r\n        name: \"device\",\r\n      },\r\n    },\r\n     {\r\n       field: {\r\n         label: \"清理缓存\",\r\n         class: \"cache group\",\r\n         type: \"link\",\r\n         link: \"\",\r\n       },\r\n     },\r\n     /*{\r\n       field: {\r\n         label: \"清理缓存\",\r\n         class: \"cache group\",\r\n         link: \"cache\",\r\n       },\r\n       input: {\r\n         readOnly: true,\r\n         name: \"cache\",\r\n       },\r\n     },*/\r\n     {\r\n       field: {\r\n         label: \"检查更新\",\r\n         class: \"updates group bottom\",\r\n         type: \"text\",\r\n       },\r\n       input: {\r\n         id: \"updates\",\r\n         type: \"text\",\r\n         readOnly: true,\r\n         name: \"updates\",\r\n       },\r\n     },\r\n  ];\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setForm((f) => ({\r\n      ...f,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onVision = () => {\r\n    if (refPassword.current.type === \"password\") {\r\n      refPassword.current.type = \"text\";\r\n      setEye(true);\r\n      return false;\r\n    }\r\n    refPassword.current.type = \"password\";\r\n    setEye(false);\r\n  };\r\n\r\n  return (\r\n    <Wrap\r\n      className=\"profile-personal\"\r\n      name=\"个人资料\"\r\n      // isLoading={!status}\r\n    >\r\n      <div className=\"fields\">\r\n        {fields.map((f, i) => {\r\n          let inputVal = \"\";\r\n          if (f.input) {\r\n            inputVal = form[f.input.name] ? form[f.input.name] : \"\";\r\n            if (f.input.name === \"birthday\") {\r\n              inputVal = _dateFormat(form[f.input.name]);\r\n            }\r\n          }\r\n\r\n          if (\r\n            f.field.type === \"link\" &&\r\n            (inputVal === \"请选择一个日期\" ||\r\n              (f.field.class === \"contact group top\" &&\r\n                user.phone_verify === \"0\") ||\r\n              !inputVal)\r\n          ) {\r\n            return (\r\n              <Link\r\n                className={`field-item ${f.field.class}`}\r\n                key={i}\r\n                to={f.field.link}\r\n              >\r\n                <i />\r\n                <p>{f.field.label}</p>\r\n                {!inputVal && <span />}\r\n                {inputVal && <label>{inputVal ? inputVal : null}</label>}\r\n              </Link>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <div className={`field-item 123 ${f.field.class}`} key={i}>\r\n              <i />\r\n              <p>{f.field.label}</p>\r\n              {f.field.type === \"button\" && <Switch />}\r\n              {f.input && f.field.type === \"input\" && (\r\n                <FormField\r\n                  field={{\r\n                    ...f.field,\r\n                  }}\r\n                  input={{\r\n                    ...f.input,\r\n                    onChange,\r\n                    onBlur: () => setEditKey(null),\r\n                    value: form[f.input.name] ? form[f.input.name] : \"\",\r\n                    disabled: subform[f.input.name],\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              {inputVal && Array.isArray(inputVal) ? (\r\n                <span className=\"value\">\r\n                  {inputVal.map((obj, key) => {\r\n                    return <div key={key}>{obj.text}</div>;\r\n                  })}\r\n                </span>\r\n              ) : (\r\n                f.input &&\r\n                f.input.type !== \"password\" && (\r\n                  <span\r\n                    className=\"value\"\r\n                    onClick={() =>\r\n                      f.input.name === \"birthday\" ||\r\n                      f.input.name === \"email\" ||\r\n                      (f.input.name === \"number\" && user.phone_verify === \"1\")\r\n                        ? setEditKey(true)\r\n                        : null\r\n                    }\r\n                  >\r\n                    {inputVal}\r\n                  </span>\r\n                )\r\n              )}\r\n\r\n              {inputVal &&\r\n                f.input &&\r\n                f.input.type === \"password\" && [\r\n                  <input\r\n                    key=\"password\"\r\n                    className=\"readOnly\"\r\n                    ref={refPassword}\r\n                    type={f.input.type}\r\n                    value={inputVal}\r\n                    readOnly\r\n                    onClick={() => setEditKey(i)}\r\n                  />,\r\n                  <i\r\n                    key=\"eye\"\r\n                    className={`eye${eye ? \" vision\" : \"\"}`}\r\n                    onClick={() => onVision()}\r\n                  />,\r\n                ]}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <UIAlertSA\r\n        onClose={() =>\r\n          setTimeout(() => {\r\n            setEditKey(false);\r\n          }, 200)\r\n        }\r\n        shown={editKey}\r\n      >\r\n        <div className=\"modal-error-update-wrap\">\r\n          <div className=\"modal-error-update-head\">\r\n            <h3>\r\n              请注意 <i />\r\n            </h3>\r\n          </div>\r\n          <div className=\"modal-error-update-body\">\r\n            <div className=\"m-e-u-b-text\">\r\n              <i\r\n                onClick={() => {\r\n                  setEditKey(false);\r\n                  setLiveChat(true);\r\n                }}\r\n              />\r\n              <p>如需更改此信息请联系客服协助</p>\r\n              <p>谢谢</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </UIAlertSA>\r\n      <LiveChatSA shown={livechat} onClose={() => setLiveChat(false)} />\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default withAuth(Personal, 1);\r\n"]},"metadata":{},"sourceType":"module"}