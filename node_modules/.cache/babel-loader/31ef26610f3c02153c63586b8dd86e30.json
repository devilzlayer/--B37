{"ast":null,"code":"import { PureComponent, createContext, createRef, createElement, Fragment, Component, useContext, useEffect, useState, useRef } from 'react';\nimport memoize from 'memoize-one';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n\nvar shallowEqualScroll = function (a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  return a.x === b.x && a.y === b.y && a.xTurn === b.xTurn && a.yTurn === b.yTurn && a.xDTurn === b.xDTurn && a.yDTurn === b.yDTurn && a.isScrollingUp === b.isScrollingUp && a.isScrollingDown === b.isScrollingDown && a.isScrollingLeft === b.isScrollingLeft && a.isScrollingRight === b.isScrollingRight;\n};\n\nvar shallowEqualRect = function (a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  return a.top === b.top && a.right === b.right && a.bottom === b.bottom && a.left === b.left && a.height === b.height && a.width === b.width;\n};\n\nvar shallowEqualDimensions = function (a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  return a.width === b.width && a.height === b.height && a.clientWidth === b.clientWidth && a.clientHeight === b.clientHeight && a.outerWidth === b.outerWidth && a.outerHeight === b.outerHeight && a.documentWidth === b.documentWidth && a.documentHeight === b.documentHeight;\n}; // implementation based on https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n\n\nvar browserSupportsPassiveEvents = function () {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  var supportsPassive = false;\n\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function () {\n        supportsPassive = true;\n      }\n    });\n    window.addEventListener('testPassive', null, opts);\n    window.removeEventListener('testPassive', null, opts);\n  } catch (e) {\n    return false;\n  }\n\n  return supportsPassive;\n}();\n\nvar simpleDebounce = function (fn, delay) {\n  var timeout;\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout.apply(void 0, __spreadArrays([fn, delay], args));\n  };\n};\n\nvar debounceOnUpdate = function (fn, delay) {\n  var timeout;\n  var scrollDidUpdate = false;\n  var dimensionsDidUpdate = false;\n  return function (viewport, options) {\n    clearTimeout(timeout);\n    scrollDidUpdate = scrollDidUpdate || options.scrollDidUpdate;\n    dimensionsDidUpdate = dimensionsDidUpdate || options.dimensionsDidUpdate;\n    timeout = setTimeout(function () {\n      fn(viewport, {\n        scrollDidUpdate: scrollDidUpdate,\n        dimensionsDidUpdate: dimensionsDidUpdate\n      });\n      scrollDidUpdate = false;\n      dimensionsDidUpdate = false;\n    }, delay);\n  };\n};\n\nvar warnNoContextAvailable = function (location) {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n\n  var fromHook = location.startsWith('use');\n\n  if (fromHook) {\n    console.warn(\"react-viewport-utils: \" + location + \" hook is not able to connect to a <ViewportProvider>. Therefore it cannot detect updates from the viewport and will not work as expected. To resolve this issue please add a <ViewportProvider> as a parent of the component using the hook, e.g. directly in the ReactDOM.render call:\\n\\nimport * as ReactDOM from 'react-dom';\\nimport { ViewportProvider, \" + location + \" } from 'react-viewport-utils';\\n\\nconst MyComponent = () => {\\n  \" + location + \"()\\n  ...\\n}\\n\\nReactDOM.render(\\n  <ViewportProvider>\\n    <main role=\\\"main\\\">\\n      <MyComponent />\\n    </main>\\n  </ViewportProvider>,\\n  document.getElementById('root')\\n);\");\n    return;\n  }\n\n  console.warn(\"react-viewport-utils: \" + location + \" component is not able to connect to a <ViewportProvider>. Therefore it cannot detect updates from the viewport and will not work as expected. To resolve this issue please add a <ViewportProvider> as a parent of the <ObserveViewport> component, e.g. directly in the ReactDOM.render call:\\n\\nimport * as ReactDOM from 'react-dom';\\nimport { ViewportProvider, ObserveViewport } from 'react-viewport-utils';\\nReactDOM.render(\\n  <ViewportProvider>\\n    <main role=\\\"main\\\">\\n      <ObserveViewport>\\n        {({ scroll, dimensions }) => ...}\\n      </ObserveViewport>\\n    </main>\\n  </ViewportProvider>,\\n  document.getElementById('root')\\n);\");\n};\n\nvar warnNoResizeObserver = function () {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n\n  console.warn('react-viewport-utils: This browser does not support the ResizeObserver API, therefore not all possible resize events will be detected. In most of the cases this is not an issue and can be ignored. If its relevant to your application please consider adding a polyfill, e.g. https://www.npmjs.com/package/resize-observer-polyfill .');\n};\n\nvar requestAnimationFrame = function () {\n  if (typeof window !== 'undefined') {\n    var nativeRAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n\n    if (nativeRAF) {\n      return nativeRAF.bind(window);\n    }\n  }\n\n  return function requestAnimationFrameFallback(callback) {\n    return setTimeout(callback, 1000 / 60);\n  };\n}();\n\nvar cancelAnimationFrame = function () {\n  if (typeof window !== 'undefined') {\n    var nativeCAF = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.webkitCancelRequestAnimationFrame;\n\n    if (nativeCAF) {\n      return nativeCAF.bind(window);\n    }\n  }\n\n  return clearTimeout;\n}();\n\nvar now = typeof performance !== 'undefined' && performance.now ? performance.now.bind(performance) : Date.now.bind(Date);\n\nvar createPerformanceMarker = function () {\n  var start = now();\n  return function () {\n    return now() - start;\n  };\n};\n\nvar getClientDimensions = function () {\n  if (typeof document === 'undefined' || !document.documentElement) {\n    return createEmptyDimensionState();\n  }\n\n  var innerWidth = window.innerWidth,\n      innerHeight = window.innerHeight,\n      outerWidth = window.outerWidth,\n      outerHeight = window.outerHeight;\n  var _a = document.documentElement,\n      clientWidth = _a.clientWidth,\n      clientHeight = _a.clientHeight,\n      scrollHeight = _a.scrollHeight,\n      scrollWidth = _a.scrollWidth,\n      offsetHeight = _a.offsetHeight,\n      offsetWidth = _a.offsetWidth;\n  return {\n    width: innerWidth,\n    height: innerHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    documentWidth: Math.max(scrollWidth, offsetWidth, clientWidth),\n    documentHeight: Math.max(scrollHeight, offsetHeight, clientHeight)\n  };\n};\n\nvar getNodeScroll = function (elem) {\n  if (elem === void 0) {\n    elem = window;\n  }\n\n  var scrollX = elem.scrollX,\n      scrollY = elem.scrollY;\n\n  if (scrollX === undefined) {\n    scrollX = elem.pageXOffset;\n  }\n\n  if (scrollY === undefined) {\n    scrollY = elem.pageYOffset;\n  }\n\n  return {\n    x: scrollX,\n    y: scrollY\n  };\n};\n\nvar getClientScroll = function (prevScrollState) {\n  if (prevScrollState === void 0) {\n    prevScrollState = createEmptyScrollState();\n  }\n\n  if (typeof window === 'undefined') {\n    return createEmptyScrollState();\n  }\n\n  var _a = getNodeScroll(),\n      x = _a.x,\n      y = _a.y;\n\n  var nextScrollState = __assign({}, prevScrollState);\n\n  var prevIsScrollingLeft = prevScrollState.isScrollingLeft,\n      prevIsScrollingUp = prevScrollState.isScrollingUp,\n      prevXTurn = prevScrollState.xTurn,\n      prevYTurn = prevScrollState.yTurn;\n  nextScrollState.isScrollingLeft = isScrollingLeft(x, nextScrollState);\n  nextScrollState.isScrollingRight = isScrollingRight(x, nextScrollState);\n  nextScrollState.isScrollingUp = isScrollingUp(y, nextScrollState);\n  nextScrollState.isScrollingDown = isScrollingDown(y, nextScrollState);\n  nextScrollState.xTurn = nextScrollState.isScrollingLeft === prevIsScrollingLeft ? prevXTurn : x;\n  nextScrollState.yTurn = nextScrollState.isScrollingUp === prevIsScrollingUp ? prevYTurn : y;\n  nextScrollState.xDTurn = x - nextScrollState.xTurn;\n  nextScrollState.yDTurn = y - nextScrollState.yTurn;\n  nextScrollState.x = x;\n  nextScrollState.y = y;\n  return nextScrollState;\n};\n\nvar isScrollingLeft = function (x, prev) {\n  switch (true) {\n    case x < prev.x:\n      return true;\n\n    case x > prev.x:\n      return false;\n\n    case x === prev.x:\n      return prev.isScrollingLeft;\n\n    default:\n      throw new Error('Could not calculate isScrollingLeft');\n  }\n};\n\nvar isScrollingRight = function (x, prev) {\n  switch (true) {\n    case x > prev.x:\n      return true;\n\n    case x < prev.x:\n      return false;\n\n    case x === prev.x:\n      return prev.isScrollingRight;\n\n    default:\n      throw new Error('Could not calculate isScrollingRight');\n  }\n};\n\nvar isScrollingUp = function (y, prev) {\n  switch (true) {\n    case y < prev.y:\n      return true;\n\n    case y > prev.y:\n      return false;\n\n    case y === prev.y:\n      return prev.isScrollingUp;\n\n    default:\n      throw new Error('Could not calculate isScrollingUp');\n  }\n};\n\nvar isScrollingDown = function (y, prev) {\n  switch (true) {\n    case y > prev.y:\n      return true;\n\n    case y < prev.y:\n      return false;\n\n    case y === prev.y:\n      return prev.isScrollingDown;\n\n    default:\n      throw new Error('Could not calculate isScrollingDown');\n  }\n};\n\nvar createEmptyScrollState = function () {\n  return {\n    x: 0,\n    y: 0,\n    isScrollingUp: false,\n    isScrollingDown: false,\n    isScrollingLeft: false,\n    isScrollingRight: false,\n    xTurn: 0,\n    yTurn: 0,\n    xDTurn: 0,\n    yDTurn: 0\n  };\n};\n\nvar createEmptyDimensionState = function () {\n  return {\n    width: 0,\n    height: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0,\n    documentWidth: 0,\n    documentHeight: 0\n  };\n};\n\nvar ViewportCollector =\n/** @class */\nfunction (_super) {\n  __extends(ViewportCollector, _super);\n\n  function ViewportCollector(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.tick = function () {\n      if (_this) {\n        if (_this.scrollMightHaveUpdated || _this.resizeMightHaveUpdated) {\n          _this.syncState();\n\n          _this.scrollMightHaveUpdated = false;\n          _this.resizeMightHaveUpdated = false;\n        }\n\n        _this.tickId = undefined;\n      }\n    };\n\n    _this.handleScroll = function () {\n      _this.scrollMightHaveUpdated = true;\n\n      if (!_this.tickId) {\n        _this.tickId = requestAnimationFrame(_this.tick);\n      }\n    };\n\n    _this.handleResize = function () {\n      _this.resizeMightHaveUpdated = true;\n\n      if (!_this.tickId) {\n        _this.tickId = requestAnimationFrame(_this.tick);\n      }\n    };\n\n    _this.handleResizeDebounce = simpleDebounce(_this.handleResize, 88);\n    _this.getPublicScroll = memoize(function (scroll) {\n      return __assign({}, scroll);\n    }, function (_a, _b) {\n      var a = _a[0];\n      var b = _b[0];\n      return shallowEqualScroll(a, b);\n    });\n    _this.getPublicDimensions = memoize(function (dimensions) {\n      return __assign({}, dimensions);\n    }, function (_a, _b) {\n      var a = _a[0];\n      var b = _b[0];\n      return shallowEqualDimensions(a, b);\n    });\n\n    _this.syncState = function () {\n      if (!_this.syncedStateOnce) {\n        _this.syncedStateOnce = true;\n      }\n\n      if (_this.scrollMightHaveUpdated) {\n        Object.assign(_this.scrollState, getClientScroll(_this.scrollState));\n      }\n\n      if (_this.resizeMightHaveUpdated) {\n        Object.assign(_this.dimensionsState, getClientDimensions());\n      }\n\n      var scrollDidUpdate = _this.scrollMightHaveUpdated && !shallowEqualScroll(_this.lastSyncedScrollState, _this.scrollState);\n      var dimensionsDidUpdate = _this.resizeMightHaveUpdated && !shallowEqualDimensions(_this.lastSyncedDimensionsState, _this.dimensionsState);\n\n      if (scrollDidUpdate) {\n        _this.lastSyncedScrollState = __assign({}, _this.scrollState);\n      }\n\n      if (dimensionsDidUpdate) {\n        _this.lastSyncedDimensionsState = __assign({}, _this.dimensionsState);\n      }\n\n      if (scrollDidUpdate || dimensionsDidUpdate) {\n        var publicState = _this.getPropsFromState();\n\n        _this.props.onUpdate(publicState, {\n          scrollDidUpdate: scrollDidUpdate,\n          dimensionsDidUpdate: dimensionsDidUpdate\n        });\n\n        _this.updateOnIdle(publicState, {\n          scrollDidUpdate: scrollDidUpdate,\n          dimensionsDidUpdate: dimensionsDidUpdate\n        });\n      }\n    };\n\n    _this.updateOnIdle = debounceOnUpdate(function () {\n      var _a;\n\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      if (typeof _this.props.onIdledUpdate === 'function') {\n        (_a = _this.props).onIdledUpdate.apply(_a, args);\n      }\n    }, 166);\n    _this.state = {\n      parentProviderExists: false\n    };\n    _this.scrollMightHaveUpdated = false;\n    _this.resizeMightHaveUpdated = false;\n    _this.scrollState = createEmptyScrollState();\n    _this.dimensionsState = createEmptyDimensionState();\n    _this.lastSyncedDimensionsState = __assign({}, _this.dimensionsState);\n    _this.lastSyncedScrollState = __assign({}, _this.scrollState);\n    _this.resizeObserver = null;\n    _this.syncedStateOnce = false;\n    return _this;\n  }\n\n  ViewportCollector.prototype.componentDidMount = function () {\n    var options = browserSupportsPassiveEvents ? {\n      passive: true\n    } : false;\n    window.addEventListener('scroll', this.handleScroll, options);\n    window.addEventListener('resize', this.handleResizeDebounce, options);\n    window.addEventListener('orientationchange', this.handleResizeDebounce, options);\n\n    if (typeof window.ResizeObserver !== 'undefined') {\n      this.resizeObserver = new window.ResizeObserver(this.handleResizeDebounce);\n      this.resizeObserver.observe(document.body);\n    } else {\n      warnNoResizeObserver();\n    }\n\n    this.handleScroll();\n    this.handleResize();\n  };\n\n  ViewportCollector.prototype.componentWillUnmount = function () {\n    window.removeEventListener('scroll', this.handleScroll, false);\n    window.removeEventListener('resize', this.handleResizeDebounce, false);\n    window.removeEventListener('orientationchange', this.handleResizeDebounce, false);\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n\n    if (typeof this.tickId === 'number') {\n      cancelAnimationFrame(this.tickId);\n    }\n  };\n\n  ViewportCollector.prototype.getPropsFromState = function () {\n    return {\n      scroll: this.getPublicScroll(this.lastSyncedScrollState),\n      dimensions: this.getPublicDimensions(this.lastSyncedDimensionsState)\n    };\n  };\n\n  ViewportCollector.prototype.render = function () {\n    return null;\n  };\n\n  return ViewportCollector;\n}(PureComponent);\n\nvar createFallbackViewportRequester = function () {\n  var defaultValue;\n  var lastAccess = 0;\n  return function () {\n    if (!defaultValue || now() - lastAccess > 1000) {\n      defaultValue = {\n        scroll: getClientScroll(),\n        dimensions: getClientDimensions()\n      };\n      lastAccess = now();\n    }\n\n    return defaultValue;\n  };\n};\n\nvar ViewportContext = createContext({\n  removeViewportChangeListener: function (handler) {},\n  scheduleReinitializeChangeHandler: function (handler) {},\n  addViewportChangeListener: function (handler, options) {},\n  getCurrentViewport: createFallbackViewportRequester(),\n  hasRootProviderAsParent: false,\n  version: '1.12.1'\n});\n\nvar maxIterations = function (priority) {\n  switch (priority) {\n    case 'highest':\n      return 0;\n\n    case 'high':\n      return 4;\n\n    case 'normal':\n      return 16;\n\n    case 'low':\n      return 64;\n  }\n};\n\nvar shouldSkipIteration = function (_a, budget) {\n  var getPriority = _a.priority,\n      averageExecutionCost = _a.averageExecutionCost,\n      skippedIterations = _a.skippedIterations;\n  var priority = getPriority();\n\n  if (priority === 'highest') {\n    return false;\n  }\n\n  if (priority !== 'low' && averageExecutionCost <= budget) {\n    return false;\n  }\n\n  if (averageExecutionCost <= budget / 10) {\n    return false;\n  }\n\n  var probability = skippedIterations / maxIterations(priority);\n\n  if (probability >= 1) {\n    return false;\n  }\n\n  return Math.random() > probability;\n};\n\nvar ViewportProvider =\n/** @class */\nfunction (_super) {\n  __extends(ViewportProvider, _super);\n\n  function ViewportProvider(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.listeners = [];\n\n    _this.triggerUpdateToListeners = function (state, _a, options) {\n      var scrollDidUpdate = _a.scrollDidUpdate,\n          dimensionsDidUpdate = _a.dimensionsDidUpdate;\n      var getOverallDuration = createPerformanceMarker();\n\n      var _b = Object.assign({\n        isIdle: false,\n        shouldInitialize: false\n      }, options),\n          isIdle = _b.isIdle,\n          shouldInitialize = _b.shouldInitialize;\n\n      var updatableListeners = _this.listeners.filter(function (_a) {\n        var notifyScroll = _a.notifyScroll,\n            notifyDimensions = _a.notifyDimensions,\n            notifyOnlyWhenIdle = _a.notifyOnlyWhenIdle,\n            skippedIterations = _a.skippedIterations,\n            initialized = _a.initialized;\n        var needsUpdate = skippedIterations > 0;\n\n        if (notifyOnlyWhenIdle() !== isIdle && !needsUpdate) {\n          return false;\n        }\n\n        if (shouldInitialize && !initialized) {\n          return true;\n        }\n\n        var updateForScroll = notifyScroll() && scrollDidUpdate;\n        var updateForDimensions = notifyDimensions() && dimensionsDidUpdate;\n        return updateForScroll || updateForDimensions;\n      });\n\n      if (_this.props.experimentalSchedulerEnabled) {\n        if (!isIdle) {\n          var budget_1 = 16 / updatableListeners.length;\n          updatableListeners = updatableListeners.filter(function (listener) {\n            var skip = listener.initialized ? shouldSkipIteration(listener, budget_1) : false;\n\n            if (skip) {\n              listener.skippedIterations++;\n              return false;\n            }\n\n            listener.skippedIterations = 0;\n            return true;\n          });\n        }\n      }\n\n      var layouts = updatableListeners.map(function (_a) {\n        var recalculateLayoutBeforeUpdate = _a.recalculateLayoutBeforeUpdate;\n\n        if (recalculateLayoutBeforeUpdate) {\n          var getDuration = createPerformanceMarker();\n          var layoutState = recalculateLayoutBeforeUpdate(state);\n          return [layoutState, getDuration()];\n        }\n\n        return null;\n      });\n      var overallJSHandlerTotalCost = 0;\n      updatableListeners.forEach(function (listener, index) {\n        var handler = listener.handler,\n            averageExecutionCost = listener.averageExecutionCost,\n            iterations = listener.iterations;\n\n        var _a = layouts[index] || [null, 0],\n            layout = _a[0],\n            layoutCost = _a[1];\n\n        var getDuration = createPerformanceMarker();\n        handler(state, layout);\n        var totalCost = layoutCost + getDuration();\n        var diff = totalCost - averageExecutionCost;\n        var i = iterations + 1;\n        listener.averageExecutionCost = averageExecutionCost + diff / i;\n        listener.iterations = i;\n        listener.initialized = true;\n        overallJSHandlerTotalCost += totalCost;\n      });\n\n      if (_this.props.experimentalSchedulerLayoutCalculatorEnabled && updatableListeners.length) {\n        setTimeout(function () {\n          var diffPerHandler = (getOverallDuration() - overallJSHandlerTotalCost) / updatableListeners.length;\n          updatableListeners.forEach(function (listener) {\n            listener.averageExecutionCost = listener.averageExecutionCost + diffPerHandler / listener.iterations;\n          });\n        }, 0);\n      }\n    };\n\n    _this.addViewportChangeListener = function (handler, options) {\n      _this.listeners.push(__assign({\n        handler: handler,\n        iterations: 0,\n        averageExecutionCost: 0,\n        skippedIterations: 0,\n        initialized: false\n      }, options));\n\n      _this.handleListenerUpdate();\n    };\n\n    _this.scheduleReinitializeChangeHandler = function (h) {\n      var listener = _this.listeners.find(function (_a) {\n        var handler = _a.handler;\n        return handler === h;\n      });\n\n      if (listener && listener.initialized) {\n        listener.initialized = false;\n\n        _this.handleListenerUpdate();\n      }\n    };\n\n    _this.removeViewportChangeListener = function (h) {\n      _this.listeners = _this.listeners.filter(function (_a) {\n        var handler = _a.handler;\n        return handler !== h;\n      });\n\n      _this.handleListenerUpdate();\n    };\n\n    _this.collector = createRef();\n    _this.getCurrentDefaultViewport = createFallbackViewportRequester();\n    _this.contextValue = {\n      addViewportChangeListener: _this.addViewportChangeListener,\n      removeViewportChangeListener: _this.removeViewportChangeListener,\n      scheduleReinitializeChangeHandler: _this.scheduleReinitializeChangeHandler,\n      getCurrentViewport: function () {\n        if (_this.collector.current && _this.collector.current.syncedStateOnce) {\n          return _this.collector.current.getPropsFromState();\n        }\n\n        return _this.getCurrentDefaultViewport();\n      },\n      hasRootProviderAsParent: true,\n      version: '1.12.1'\n    };\n\n    _this.renderChildren = function (props) {\n      if (props.hasRootProviderAsParent) {\n        if (process.env.NODE_ENV !== 'production' && props.version !== '1.12.1') {\n          console.warn(\"react-viewport-utils: Two different versions of the react-viewport-utils library are used in the same react tree. This can lead to unexpected results as the versions might not be compatible.\\nThe <ViewportProvider> of version \" + props.version + \" is currently used, another <ViewportProvider> of version 1.12.1 was detected but is ignored.\\nThis is most probably due to some dependencies that use different versions of the react-viewport-utils library. You can check if an update is possible.\");\n        }\n\n        return _this.props.children;\n      }\n\n      return createElement(Fragment, null, _this.state.hasListeners && createElement(ViewportCollector, {\n        ref: _this.collector,\n        onUpdate: _this.triggerUpdateToListeners,\n        onIdledUpdate: function (state, updates) {\n          return _this.triggerUpdateToListeners(state, updates, {\n            isIdle: true\n          });\n        }\n      }), createElement(ViewportContext.Provider, {\n        value: _this.contextValue\n      }, _this.props.children));\n    };\n\n    _this.state = {\n      hasListeners: false\n    };\n    return _this;\n  }\n\n  ViewportProvider.prototype.componentWillUnmount = function () {\n    if (typeof this.updateListenersTick === 'number') {\n      clearTimeout(this.updateListenersTick);\n    }\n\n    if (typeof this.initializeListenersTick === 'number') {\n      cancelAnimationFrame(this.initializeListenersTick);\n    }\n  };\n\n  ViewportProvider.prototype.handleListenerUpdate = function () {\n    var _this = this;\n\n    if (this.updateListenersTick === undefined) {\n      this.updateListenersTick = setTimeout(function () {\n        var nextState = _this.listeners.length !== 0;\n\n        if (_this.state.hasListeners !== nextState) {\n          _this.setState({\n            hasListeners: _this.listeners.length !== 0\n          });\n        }\n\n        _this.updateListenersTick = undefined;\n      }, 1);\n    }\n\n    if (this.initializeListenersTick === undefined) {\n      this.initializeListenersTick = requestAnimationFrame(function () {\n        if (_this.collector.current && _this.collector.current.syncedStateOnce && _this.listeners.some(function (l) {\n          return !l.initialized;\n        })) {\n          _this.triggerUpdateToListeners(_this.collector.current.getPropsFromState(), {\n            dimensionsDidUpdate: false,\n            scrollDidUpdate: false\n          }, {\n            isIdle: false,\n            shouldInitialize: true\n          });\n        }\n\n        _this.initializeListenersTick = undefined;\n      });\n    }\n  };\n\n  ViewportProvider.prototype.render = function () {\n    return createElement(ViewportContext.Consumer, null, this.renderChildren);\n  };\n\n  return ViewportProvider;\n}(PureComponent);\n\nvar ObserveViewport =\n/** @class */\nfunction (_super) {\n  __extends(ObserveViewport, _super);\n\n  function ObserveViewport(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handleViewportUpdate = function (viewport, layoutSnapshot) {\n      if (_this.props.onUpdate) {\n        _this.props.onUpdate(viewport, layoutSnapshot);\n      }\n\n      if (_this.props.children) {\n        _this.syncState(viewport);\n      }\n    };\n\n    _this.registerViewportListeners = function (_a) {\n      var addViewportChangeListener = _a.addViewportChangeListener,\n          removeViewportChangeListener = _a.removeViewportChangeListener,\n          scheduleReinitializeChangeHandler = _a.scheduleReinitializeChangeHandler,\n          hasRootProviderAsParent = _a.hasRootProviderAsParent,\n          getCurrentViewport = _a.getCurrentViewport;\n\n      if (!hasRootProviderAsParent) {\n        warnNoContextAvailable('ObserveViewport');\n        return null;\n      }\n\n      var shouldRegister = _this.removeViewportChangeListener !== removeViewportChangeListener;\n\n      if (!shouldRegister) {\n        return null;\n      }\n\n      if (_this.removeViewportChangeListener) {\n        _this.removeViewportChangeListener(_this.handleViewportUpdate);\n      }\n\n      _this.removeViewportChangeListener = removeViewportChangeListener;\n      _this.scheduleReinitializeChangeHandler = scheduleReinitializeChangeHandler;\n      addViewportChangeListener(_this.handleViewportUpdate, {\n        notifyScroll: function () {\n          return !_this.props.disableScrollUpdates;\n        },\n        notifyDimensions: function () {\n          return !_this.props.disableDimensionsUpdates;\n        },\n        notifyOnlyWhenIdle: function () {\n          return _this.props.deferUpdateUntilIdle;\n        },\n        priority: function () {\n          return _this.props.priority;\n        },\n        recalculateLayoutBeforeUpdate: function (viewport) {\n          if (_this.props.recalculateLayoutBeforeUpdate) {\n            return _this.props.recalculateLayoutBeforeUpdate(viewport);\n          }\n\n          return null;\n        }\n      });\n\n      if (_this.props.children) {\n        _this.syncState(getCurrentViewport());\n      }\n\n      return null;\n    };\n\n    _this.state = {\n      scroll: createEmptyScrollState(),\n      dimensions: createEmptyDimensionState()\n    };\n    return _this;\n  }\n\n  ObserveViewport.prototype.componentDidUpdate = function (prevProps) {\n    var dimensionsBecameActive = !this.props.disableDimensionsUpdates && prevProps.disableDimensionsUpdates;\n    var scrollBecameActive = !this.props.disableScrollUpdates && prevProps.disableScrollUpdates;\n\n    if (typeof this.scheduleReinitializeChangeHandler === 'function' && (dimensionsBecameActive || scrollBecameActive)) {\n      this.scheduleReinitializeChangeHandler(this.handleViewportUpdate);\n    }\n  };\n\n  ObserveViewport.prototype.componentWillUnmount = function () {\n    if (this.removeViewportChangeListener) {\n      this.removeViewportChangeListener(this.handleViewportUpdate);\n    }\n\n    this.removeViewportChangeListener = undefined;\n    this.scheduleReinitializeChangeHandler = undefined;\n\n    if (typeof this.tickId === 'number') {\n      cancelAnimationFrame(this.tickId);\n    }\n  };\n\n  ObserveViewport.prototype.syncState = function (nextViewport) {\n    var _this = this;\n\n    this.nextViewport = nextViewport;\n\n    if (this.tickId === undefined) {\n      this.tickId = requestAnimationFrame(function () {\n        if (_this.nextViewport) {\n          _this.setState(_this.nextViewport);\n        }\n\n        _this.tickId = undefined;\n        _this.nextViewport = undefined;\n      });\n    }\n  };\n\n  Object.defineProperty(ObserveViewport.prototype, \"optionNotifyScroll\", {\n    get: function () {\n      return !this.props.disableScrollUpdates;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ObserveViewport.prototype, \"optionNotifyDimensions\", {\n    get: function () {\n      return !this.props.disableDimensionsUpdates;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ObserveViewport.prototype.render = function () {\n    var children = this.props.children;\n    return createElement(Fragment, null, createElement(ViewportContext.Consumer, null, this.registerViewportListeners), children ? children(this.state) : null);\n  };\n\n  ObserveViewport.defaultProps = {\n    disableScrollUpdates: false,\n    disableDimensionsUpdates: false,\n    deferUpdateUntilIdle: false,\n    priority: 'normal'\n  };\n  return ObserveViewport;\n}(Component);\n\nfunction connect(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var deferUpdateUntilIdle = Boolean(options.deferUpdateUntilIdle);\n  var omit = options.omit || [];\n  var shouldOmitScroll = omit.indexOf('scroll') !== -1;\n  var shouldOmitDimensions = omit.indexOf('dimensions') !== -1;\n  return function (WrappedComponent) {\n    var _a;\n\n    var displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    return _a =\n    /** @class */\n    function (_super) {\n      __extends(ConnectViewport, _super);\n\n      function ConnectViewport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      ConnectViewport.prototype.render = function () {\n        var _this = this;\n\n        return createElement(ObserveViewport, {\n          disableScrollUpdates: shouldOmitScroll,\n          disableDimensionsUpdates: shouldOmitDimensions,\n          deferUpdateUntilIdle: deferUpdateUntilIdle,\n          priority: options.priority\n        }, function (_a) {\n          var scroll = _a.scroll,\n              dimensions = _a.dimensions;\n          return createElement(WrappedComponent, __assign({\n            scroll: scroll,\n            dimensions: dimensions\n          }, _this.props));\n        });\n      };\n\n      return ConnectViewport;\n    }(Component), _a.displayName = \"connectViewport(\" + displayName + \")\", _a;\n  };\n}\n/**\r\n * @deprecated Use useRect or useRectEffect instead as it provides better performance.\r\n */\n\n\nvar ObserveBoundingClientRect =\n/** @class */\nfunction (_super) {\n  __extends(ObserveBoundingClientRect, _super);\n\n  function ObserveBoundingClientRect(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.syncState = function () {\n      var node = _this.props.node;\n\n      if (!node || !node.current) {\n        return;\n      }\n\n      var rect = _this.getRectFromNode();\n\n      if (rect && !_this.state.isInitialized) {\n        _this.setState(__assign(__assign({}, rect), {\n          isInitialized: true\n        }));\n\n        return;\n      }\n\n      _this.setState(rect);\n    };\n\n    _this.state = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      height: 0,\n      width: 0,\n      isInitialized: false\n    };\n    return _this;\n  }\n\n  ObserveBoundingClientRect.prototype.componentDidMount = function () {\n    this.tick(this.syncState);\n  };\n\n  ObserveBoundingClientRect.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var rect = this.getRectFromState();\n    var prevRect = this.getRectFromState(prevState);\n\n    if (!rect) {\n      return;\n    }\n\n    if (this.props.onInit) {\n      if (!prevState.isInitialized && this.state.isInitialized) {\n        this.props.onInit(rect);\n      }\n    }\n\n    if (this.props.onUpdate) {\n      if (prevRect === null || !shallowEqualRect(rect, prevRect)) {\n        this.props.onUpdate(rect);\n      }\n    }\n  };\n\n  ObserveBoundingClientRect.prototype.componentWillUnmount = function () {\n    if (typeof this.tickId === 'number') {\n      cancelAnimationFrame(this.tickId);\n    }\n  };\n\n  ObserveBoundingClientRect.prototype.tick = function (updater) {\n    var _this = this;\n\n    this.tickId = requestAnimationFrame(function () {\n      updater();\n\n      _this.tick(updater);\n    });\n  };\n\n  ObserveBoundingClientRect.prototype.getRectFromState = function (state) {\n    if (state === void 0) {\n      state = this.state;\n    }\n\n    if (!state.isInitialized) {\n      return null;\n    }\n\n    return {\n      height: state.height,\n      width: state.width,\n      top: state.top,\n      bottom: state.bottom,\n      left: state.left,\n      right: state.right\n    };\n  };\n\n  ObserveBoundingClientRect.prototype.getRectFromNode = function () {\n    var node = this.props.node;\n\n    if (!node || !node.current) {\n      return null;\n    }\n\n    var rect = node.current.getBoundingClientRect();\n    return {\n      height: rect.height,\n      width: rect.width,\n      top: rect.top,\n      bottom: rect.bottom,\n      left: rect.left,\n      right: rect.right\n    };\n  };\n\n  ObserveBoundingClientRect.prototype.render = function () {\n    var children = this.props.children;\n    return typeof children === 'function' ? children(this.getRectFromState()) : null;\n  };\n\n  return ObserveBoundingClientRect;\n}(PureComponent);\n\nfunction useViewportEffect(handleViewportChange, second, third) {\n  var _a = useContext(ViewportContext),\n      addViewportChangeListener = _a.addViewportChangeListener,\n      removeViewportChangeListener = _a.removeViewportChangeListener,\n      hasRootProviderAsParent = _a.hasRootProviderAsParent;\n\n  var _b = sortArgs(second, third),\n      options = _b.options,\n      deps = _b.deps;\n\n  var memoOptions = useOptions(options);\n  useEffect(function () {\n    if (!hasRootProviderAsParent) {\n      warnNoContextAvailable('useViewport');\n      return;\n    }\n\n    addViewportChangeListener(handleViewportChange, {\n      notifyScroll: function () {\n        return !memoOptions.disableScrollUpdates;\n      },\n      notifyDimensions: function () {\n        return !memoOptions.disableDimensionsUpdates;\n      },\n      notifyOnlyWhenIdle: function () {\n        return Boolean(memoOptions.deferUpdateUntilIdle);\n      },\n      priority: function () {\n        return memoOptions.priority || 'normal';\n      },\n      recalculateLayoutBeforeUpdate: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return memoOptions.recalculateLayoutBeforeUpdate ? memoOptions.recalculateLayoutBeforeUpdate.apply(memoOptions, args) : null;\n      }\n    });\n    return function () {\n      return removeViewportChangeListener(handleViewportChange);\n    };\n  }, __spreadArrays([addViewportChangeListener || null, removeViewportChangeListener || null], deps));\n}\n\nvar useViewport = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var getCurrentViewport = useContext(ViewportContext).getCurrentViewport;\n\n  var _a = useState(getCurrentViewport()),\n      state = _a[0],\n      setViewport = _a[1];\n\n  useViewportEffect(function (viewport) {\n    return setViewport(viewport);\n  }, options);\n  return state;\n};\n\nfunction useScrollEffect(effect, second, third) {\n  var _a = sortArgs(second, third),\n      options = _a.options,\n      deps = _a.deps;\n\n  useViewportEffect(function (viewport, snapshot) {\n    return effect(viewport.scroll, snapshot);\n  }, __assign({\n    disableDimensionsUpdates: true\n  }, options), deps);\n}\n\nvar useScroll = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var scroll = useViewport(__assign({\n    disableDimensionsUpdates: true\n  }, options)).scroll;\n  return scroll;\n};\n\nfunction useDimensionsEffect(effect, second, third) {\n  var _a = sortArgs(second, third),\n      options = _a.options,\n      deps = _a.deps;\n\n  useViewportEffect(function (viewport, snapshot) {\n    return effect(viewport.dimensions, snapshot);\n  }, __assign({\n    disableScrollUpdates: true\n  }, options), deps);\n}\n\nvar useDimensions = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var dimensions = useViewport(__assign({\n    disableScrollUpdates: true\n  }, options)).dimensions;\n  return dimensions;\n};\n\nfunction useRectEffect(effect, ref, third, fourth) {\n  var _a = sortArgs(third, fourth),\n      options = _a.options,\n      deps = _a.deps;\n\n  useViewportEffect(function (_, snapshot) {\n    return effect(snapshot);\n  }, __assign(__assign({}, options), {\n    recalculateLayoutBeforeUpdate: function () {\n      return ref.current ? ref.current.getBoundingClientRect() : null;\n    }\n  }), __spreadArrays([ref.current], deps));\n}\n\nfunction useRect(ref, second, third) {\n  var _a = sortArgs(second, third),\n      options = _a.options,\n      deps = _a.deps;\n\n  return useLayoutSnapshot(function () {\n    return ref.current ? ref.current.getBoundingClientRect() : null;\n  }, options, __spreadArrays([ref.current], deps));\n}\n\nfunction useLayoutSnapshot(recalculateLayoutBeforeUpdate, second, third) {\n  var _a = sortArgs(second, third),\n      options = _a.options,\n      deps = _a.deps;\n\n  var _b = useState(null),\n      state = _b[0],\n      setSnapshot = _b[1];\n\n  useViewportEffect(function (_, snapshot) {\n    return setSnapshot(snapshot);\n  }, __assign(__assign({}, options), {\n    recalculateLayoutBeforeUpdate: recalculateLayoutBeforeUpdate\n  }), deps);\n  return state;\n}\n\nvar useOptions = function (o) {\n  var optionsRef = useRef(Object.create(null));\n\n  for (var _i = 0, _a = Object.keys(optionsRef.current); _i < _a.length; _i++) {\n    var key = _a[_i];\n    delete optionsRef.current[key];\n  }\n\n  Object.assign(optionsRef.current, o);\n  return optionsRef.current;\n};\n\nvar sortArgs = function (first, second) {\n  var options = {};\n\n  if (first && !Array.isArray(first)) {\n    options = first;\n  }\n\n  var deps = second || [];\n\n  if (first && Array.isArray(first)) {\n    deps = first;\n  }\n\n  return {\n    deps: deps,\n    options: options\n  };\n};\n\nvar VERSION = '1.12.1';\nexport { ObserveBoundingClientRect, ObserveViewport, VERSION, ViewportProvider, cancelAnimationFrame, connect as connectViewport, requestAnimationFrame, useDimensions, useDimensionsEffect, useLayoutSnapshot, useRect, useRectEffect, useScroll, useScrollEffect, useViewport, useViewportEffect };","map":{"version":3,"sources":["../lib/utils.ts","../lib/ViewportCollector.tsx","../lib/ViewportProvider.tsx","../lib/ObserveViewport.tsx","../lib/ConnectViewport.tsx","../lib/ObserveBoundingClientRect.tsx","../lib/hooks.ts","../lib/index.ts"],"names":["React.PureComponent","React.createContext","React.createRef","React.createElement","React.Fragment","React.Component"],"mappings":"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","sourcesContent":["import { Rect, Scroll, Dimensions, OnUpdateType } from './types';\n\nexport const shallowEqualScroll = (a: Scroll, b: Scroll) => {\n  if (a === b) {\n    return true;\n  }\n  return (\n    a.x === b.x &&\n    a.y === b.y &&\n    a.xTurn === b.xTurn &&\n    a.yTurn === b.yTurn &&\n    a.xDTurn === b.xDTurn &&\n    a.yDTurn === b.yDTurn &&\n    a.isScrollingUp === b.isScrollingUp &&\n    a.isScrollingDown === b.isScrollingDown &&\n    a.isScrollingLeft === b.isScrollingLeft &&\n    a.isScrollingRight === b.isScrollingRight\n  );\n};\n\nexport const shallowEqualRect = (a: Rect, b: Rect) => {\n  if (a === b) {\n    return true;\n  }\n\n  return (\n    a.top === b.top &&\n    a.right === b.right &&\n    a.bottom === b.bottom &&\n    a.left === b.left &&\n    a.height === b.height &&\n    a.width === b.width\n  );\n};\n\nexport const shallowEqualDimensions = (a: Dimensions, b: Dimensions) => {\n  if (a === b) {\n    return true;\n  }\n\n  return (\n    a.width === b.width &&\n    a.height === b.height &&\n    a.clientWidth === b.clientWidth &&\n    a.clientHeight === b.clientHeight &&\n    a.outerWidth === b.outerWidth &&\n    a.outerHeight === b.outerHeight &&\n    a.documentWidth === b.documentWidth &&\n    a.documentHeight === b.documentHeight\n  );\n};\n\n// implementation based on https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\nexport const browserSupportsPassiveEvents = (() => {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  let supportsPassive = false;\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      get: () => {\n        supportsPassive = true;\n      },\n    });\n    window.addEventListener('testPassive', null as any, opts);\n    window.removeEventListener('testPassive', null as any, opts);\n  } catch (e) {\n    return false;\n  }\n  return supportsPassive;\n})();\n\nexport const simpleDebounce = <F extends (...args: any[]) => any>(\n  fn: F,\n  delay: number,\n): F => {\n  let timeout: NodeJS.Timer;\n  return ((...args: any[]) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, delay, ...args);\n  }) as F;\n};\n\nexport const debounceOnUpdate = (\n  fn: OnUpdateType,\n  delay: number,\n): OnUpdateType => {\n  let timeout: NodeJS.Timer;\n  let scrollDidUpdate = false;\n  let dimensionsDidUpdate = false;\n\n  return (viewport, options) => {\n    clearTimeout(timeout);\n    scrollDidUpdate = scrollDidUpdate || options.scrollDidUpdate;\n    dimensionsDidUpdate = dimensionsDidUpdate || options.dimensionsDidUpdate;\n    timeout = setTimeout(() => {\n      fn(viewport, {\n        scrollDidUpdate,\n        dimensionsDidUpdate,\n      });\n      scrollDidUpdate = false;\n      dimensionsDidUpdate = false;\n    }, delay);\n  };\n};\n\nexport const warnNoContextAvailable = (location: string) => {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  const fromHook = location.startsWith('use');\n  if (fromHook) {\n    console.warn(\n      `react-viewport-utils: ${location} hook is not able to connect to a <ViewportProvider>. Therefore it cannot detect updates from the viewport and will not work as expected. To resolve this issue please add a <ViewportProvider> as a parent of the component using the hook, e.g. directly in the ReactDOM.render call:\n\nimport * as ReactDOM from 'react-dom';\nimport { ViewportProvider, ${location} } from 'react-viewport-utils';\n\nconst MyComponent = () => {\n  ${location}()\n  ...\n}\n\nReactDOM.render(\n  <ViewportProvider>\n    <main role=\"main\">\n      <MyComponent />\n    </main>\n  </ViewportProvider>,\n  document.getElementById('root')\n);`,\n    );\n    return;\n  }\n  console.warn(\n    `react-viewport-utils: ${location} component is not able to connect to a <ViewportProvider>. Therefore it cannot detect updates from the viewport and will not work as expected. To resolve this issue please add a <ViewportProvider> as a parent of the <ObserveViewport> component, e.g. directly in the ReactDOM.render call:\n\nimport * as ReactDOM from 'react-dom';\nimport { ViewportProvider, ObserveViewport } from 'react-viewport-utils';\nReactDOM.render(\n  <ViewportProvider>\n    <main role=\"main\">\n      <ObserveViewport>\n        {({ scroll, dimensions }) => ...}\n      </ObserveViewport>\n    </main>\n  </ViewportProvider>,\n  document.getElementById('root')\n);`,\n  );\n};\n\nexport const warnNoResizeObserver = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  console.warn(\n    'react-viewport-utils: This browser does not support the ResizeObserver API, therefore not all possible resize events will be detected. In most of the cases this is not an issue and can be ignored. If its relevant to your application please consider adding a polyfill, e.g. https://www.npmjs.com/package/resize-observer-polyfill .',\n  );\n};\n\ntype RequestAnimationFrameType = (callback: FrameRequestCallback) => number;\n\nexport const requestAnimationFrame = ((): RequestAnimationFrameType => {\n  if (typeof window !== 'undefined') {\n    const nativeRAF =\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      (<any>window).mozRequestAnimationFrame;\n    if (nativeRAF) {\n      return nativeRAF.bind(window);\n    }\n  }\n  return function requestAnimationFrameFallback(\n    callback: FrameRequestCallback,\n  ): number {\n    return (setTimeout(callback, 1000 / 60) as unknown) as number;\n  };\n})();\n\nexport const cancelAnimationFrame = ((): ((handle: number) => void) => {\n  if (typeof window !== 'undefined') {\n    const nativeCAF =\n      window.cancelAnimationFrame ||\n      window.webkitCancelAnimationFrame ||\n      (<any>window).webkitCancelRequestAnimationFrame;\n    if (nativeCAF) {\n      return nativeCAF.bind(window);\n    }\n  }\n  return clearTimeout;\n})();\n\nexport const now =\n  typeof performance !== 'undefined' && performance.now\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\nexport const createPerformanceMarker = () => {\n  const start = now();\n  return () => now() - start;\n};\n","import * as React from 'react';\nimport memoize from 'memoize-one';\n\nimport {\n  shallowEqualScroll,\n  shallowEqualDimensions,\n  browserSupportsPassiveEvents,\n  simpleDebounce,\n  debounceOnUpdate,\n  warnNoResizeObserver,\n  requestAnimationFrame,\n  cancelAnimationFrame,\n} from './utils';\n\nimport { Dimensions, Scroll, Viewport, OnUpdateType } from './types';\n\nexport const getClientDimensions = (): Dimensions => {\n  if (typeof document === 'undefined' || !document.documentElement) {\n    return createEmptyDimensionState();\n  }\n  const { innerWidth, innerHeight, outerWidth, outerHeight } = window;\n  const {\n    clientWidth,\n    clientHeight,\n    scrollHeight,\n    scrollWidth,\n    offsetHeight,\n    offsetWidth,\n  } = document.documentElement;\n  return {\n    width: innerWidth,\n    height: innerHeight,\n    clientWidth,\n    clientHeight,\n    outerWidth,\n    outerHeight,\n    documentWidth: Math.max(scrollWidth, offsetWidth, clientWidth),\n    documentHeight: Math.max(scrollHeight, offsetHeight, clientHeight),\n  };\n};\n\nconst getNodeScroll = (elem = window) => {\n  let { scrollX, scrollY } = elem;\n  if (scrollX === undefined) {\n    scrollX = elem.pageXOffset;\n  }\n  if (scrollY === undefined) {\n    scrollY = elem.pageYOffset;\n  }\n\n  return {\n    x: scrollX,\n    y: scrollY,\n  };\n};\n\nexport const getClientScroll = (\n  prevScrollState: Scroll = createEmptyScrollState(),\n) => {\n  if (typeof window === 'undefined') {\n    return createEmptyScrollState();\n  }\n  const { x, y } = getNodeScroll();\n  const nextScrollState = { ...prevScrollState };\n  const {\n    isScrollingLeft: prevIsScrollingLeft,\n    isScrollingUp: prevIsScrollingUp,\n    xTurn: prevXTurn,\n    yTurn: prevYTurn,\n  } = prevScrollState;\n\n  nextScrollState.isScrollingLeft = isScrollingLeft(x, nextScrollState);\n  nextScrollState.isScrollingRight = isScrollingRight(x, nextScrollState);\n\n  nextScrollState.isScrollingUp = isScrollingUp(y, nextScrollState);\n  nextScrollState.isScrollingDown = isScrollingDown(y, nextScrollState);\n\n  nextScrollState.xTurn =\n    nextScrollState.isScrollingLeft === prevIsScrollingLeft ? prevXTurn : x;\n  nextScrollState.yTurn =\n    nextScrollState.isScrollingUp === prevIsScrollingUp ? prevYTurn : y;\n\n  nextScrollState.xDTurn = x - nextScrollState.xTurn;\n  nextScrollState.yDTurn = y - nextScrollState.yTurn;\n\n  nextScrollState.x = x;\n  nextScrollState.y = y;\n\n  return nextScrollState;\n};\n\nconst isScrollingLeft = (x: number, prev: Scroll) => {\n  switch (true) {\n    case x < prev.x:\n      return true;\n    case x > prev.x:\n      return false;\n    case x === prev.x:\n      return prev.isScrollingLeft;\n    default:\n      throw new Error('Could not calculate isScrollingLeft');\n  }\n};\n\nconst isScrollingRight = (x: number, prev: Scroll) => {\n  switch (true) {\n    case x > prev.x:\n      return true;\n    case x < prev.x:\n      return false;\n    case x === prev.x:\n      return prev.isScrollingRight;\n    default:\n      throw new Error('Could not calculate isScrollingRight');\n  }\n};\n\nconst isScrollingUp = (y: number, prev: Scroll) => {\n  switch (true) {\n    case y < prev.y:\n      return true;\n    case y > prev.y:\n      return false;\n    case y === prev.y:\n      return prev.isScrollingUp;\n    default:\n      throw new Error('Could not calculate isScrollingUp');\n  }\n};\n\nconst isScrollingDown = (y: number, prev: Scroll) => {\n  switch (true) {\n    case y > prev.y:\n      return true;\n    case y < prev.y:\n      return false;\n    case y === prev.y:\n      return prev.isScrollingDown;\n    default:\n      throw new Error('Could not calculate isScrollingDown');\n  }\n};\n\nexport const createEmptyScrollState = () => ({\n  x: 0,\n  y: 0,\n  isScrollingUp: false,\n  isScrollingDown: false,\n  isScrollingLeft: false,\n  isScrollingRight: false,\n  xTurn: 0,\n  yTurn: 0,\n  xDTurn: 0,\n  yDTurn: 0,\n});\n\nexport const createEmptyDimensionState = (): Dimensions => ({\n  width: 0,\n  height: 0,\n  clientWidth: 0,\n  clientHeight: 0,\n  outerWidth: 0,\n  outerHeight: 0,\n  documentWidth: 0,\n  documentHeight: 0,\n});\n\ninterface IProps {\n  onUpdate: OnUpdateType;\n  onIdledUpdate?: OnUpdateType;\n}\n\nexport default class ViewportCollector extends React.PureComponent<IProps> {\n  private scrollState: Scroll;\n  private dimensionsState: Dimensions;\n  private lastSyncedScrollState: Scroll;\n  private lastSyncedDimensionsState: Dimensions;\n  private tickId?: number;\n  private scrollMightHaveUpdated: boolean;\n  private resizeMightHaveUpdated: boolean;\n  private resizeObserver: ResizeObserver | null;\n  public syncedStateOnce: boolean;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      parentProviderExists: false,\n    };\n    this.scrollMightHaveUpdated = false;\n    this.resizeMightHaveUpdated = false;\n    this.scrollState = createEmptyScrollState();\n    this.dimensionsState = createEmptyDimensionState();\n    this.lastSyncedDimensionsState = { ...this.dimensionsState };\n    this.lastSyncedScrollState = { ...this.scrollState };\n    this.resizeObserver = null;\n    this.syncedStateOnce = false;\n  }\n\n  componentDidMount() {\n    const options = browserSupportsPassiveEvents ? { passive: true } : false;\n    window.addEventListener('scroll', this.handleScroll, options);\n    window.addEventListener('resize', this.handleResizeDebounce, options);\n    window.addEventListener(\n      'orientationchange',\n      this.handleResizeDebounce,\n      options,\n    );\n\n    if (typeof window.ResizeObserver !== 'undefined') {\n      this.resizeObserver = new window.ResizeObserver(\n        this.handleResizeDebounce,\n      );\n      this.resizeObserver!.observe(document.body);\n    } else {\n      warnNoResizeObserver();\n    }\n\n    this.handleScroll();\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll, false);\n    window.removeEventListener('resize', this.handleResizeDebounce, false);\n    window.removeEventListener(\n      'orientationchange',\n      this.handleResizeDebounce,\n      false,\n    );\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n    if (typeof this.tickId === 'number') {\n      cancelAnimationFrame(this.tickId);\n    }\n  }\n\n  tick = () => {\n    if (this) {\n      if (this.scrollMightHaveUpdated || this.resizeMightHaveUpdated) {\n        this.syncState();\n        this.scrollMightHaveUpdated = false;\n        this.resizeMightHaveUpdated = false;\n      }\n      this.tickId = undefined;\n    }\n  };\n\n  handleScroll = () => {\n    this.scrollMightHaveUpdated = true;\n    if (!this.tickId) {\n      this.tickId = requestAnimationFrame(this.tick);\n    }\n  };\n\n  handleResize = () => {\n    this.resizeMightHaveUpdated = true;\n    if (!this.tickId) {\n      this.tickId = requestAnimationFrame(this.tick);\n    }\n  };\n\n  handleResizeDebounce = simpleDebounce(this.handleResize, 88);\n\n  getPublicScroll = memoize(\n    (scroll: Scroll): Scroll => ({ ...scroll }),\n    ([a]: [Scroll], [b]: [Scroll]) => shallowEqualScroll(a, b),\n  );\n\n  getPublicDimensions = memoize(\n    (dimensions: Dimensions): Dimensions => ({ ...dimensions }),\n    ([a]: [Dimensions], [b]: [Dimensions]) => shallowEqualDimensions(a, b),\n  );\n\n  syncState = () => {\n    if (!this.syncedStateOnce) {\n      this.syncedStateOnce = true;\n    }\n    if (this.scrollMightHaveUpdated) {\n      Object.assign(this.scrollState, getClientScroll(this.scrollState));\n    }\n    if (this.resizeMightHaveUpdated) {\n      Object.assign(this.dimensionsState, getClientDimensions());\n    }\n    const scrollDidUpdate =\n      this.scrollMightHaveUpdated &&\n      !shallowEqualScroll(this.lastSyncedScrollState, this.scrollState);\n    const dimensionsDidUpdate =\n      this.resizeMightHaveUpdated &&\n      !shallowEqualDimensions(\n        this.lastSyncedDimensionsState,\n        this.dimensionsState,\n      );\n\n    if (scrollDidUpdate) {\n      this.lastSyncedScrollState = { ...this.scrollState };\n    }\n\n    if (dimensionsDidUpdate) {\n      this.lastSyncedDimensionsState = { ...this.dimensionsState };\n    }\n\n    if (scrollDidUpdate || dimensionsDidUpdate) {\n      const publicState = this.getPropsFromState();\n      this.props.onUpdate(publicState, {\n        scrollDidUpdate,\n        dimensionsDidUpdate,\n      });\n      this.updateOnIdle(publicState, {\n        scrollDidUpdate,\n        dimensionsDidUpdate,\n      });\n    }\n  };\n\n  updateOnIdle = debounceOnUpdate((...args) => {\n    if (typeof this.props.onIdledUpdate === 'function') {\n      this.props.onIdledUpdate(...args);\n    }\n  }, 166);\n\n  getPropsFromState(): Viewport {\n    return {\n      scroll: this.getPublicScroll(this.lastSyncedScrollState),\n      dimensions: this.getPublicDimensions(this.lastSyncedDimensionsState),\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n","import * as React from 'react';\n\nimport {\n  ViewportChangeHandler,\n  ViewportChangeOptions,\n  Viewport,\n  ViewportCollectorUpdateOptions,\n} from './types';\nimport ViewportCollector, {\n  getClientDimensions,\n  getClientScroll,\n} from './ViewportCollector';\nimport {\n  createPerformanceMarker,\n  now,\n  requestAnimationFrame,\n  cancelAnimationFrame,\n} from './utils';\n\ninterface Props {\n  experimentalSchedulerEnabled?: boolean;\n  experimentalSchedulerLayoutCalculatorEnabled?: boolean;\n}\n\ninterface Listener extends ViewportChangeOptions {\n  handler: ViewportChangeHandler;\n  iterations: number;\n  initialized: boolean;\n  averageExecutionCost: number;\n  skippedIterations: number;\n}\n\nconst createFallbackViewportRequester = () => {\n  let defaultValue: Viewport;\n  let lastAccess = 0;\n  return (): Viewport => {\n    if (!defaultValue || now() - lastAccess > 1000) {\n      defaultValue = {\n        scroll: getClientScroll(),\n        dimensions: getClientDimensions(),\n      };\n      lastAccess = now();\n    }\n    return defaultValue;\n  };\n};\n\nexport const ViewportContext = React.createContext({\n  removeViewportChangeListener: (handler: ViewportChangeHandler) => {},\n  scheduleReinitializeChangeHandler: (handler: ViewportChangeHandler) => {},\n  addViewportChangeListener: (\n    handler: ViewportChangeHandler,\n    options: ViewportChangeOptions,\n  ) => {},\n  getCurrentViewport: createFallbackViewportRequester(),\n  hasRootProviderAsParent: false,\n  version: '__VERSION__',\n});\n\nconst maxIterations = (priority: 'highest' | 'high' | 'normal' | 'low') => {\n  switch (priority) {\n    case 'highest':\n      return 0;\n    case 'high':\n      return 4;\n    case 'normal':\n      return 16;\n    case 'low':\n      return 64;\n  }\n};\n\nconst shouldSkipIteration = (\n  { priority: getPriority, averageExecutionCost, skippedIterations }: Listener,\n  budget: number,\n): boolean => {\n  const priority = getPriority();\n  if (priority === 'highest') {\n    return false;\n  }\n  if (priority !== 'low' && averageExecutionCost <= budget) {\n    return false;\n  }\n  if (averageExecutionCost <= budget / 10) {\n    return false;\n  }\n  const probability = skippedIterations / maxIterations(priority);\n  if (probability >= 1) {\n    return false;\n  }\n  return Math.random() > probability;\n};\n\nexport default class ViewportProvider extends React.PureComponent<\n  Props,\n  { hasListeners: boolean }\n> {\n  static defaultProps: {\n    experimentalSchedulerEnabled: false;\n    experimentalSchedulerLayoutCalculatorEnabled: false;\n  };\n  private listeners: Listener[] = [];\n  private updateListenersTick?: NodeJS.Timer;\n  private initializeListenersTick?: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasListeners: false,\n    };\n  }\n\n  componentWillUnmount() {\n    if (typeof this.updateListenersTick === 'number') {\n      clearTimeout(this.updateListenersTick);\n    }\n    if (typeof this.initializeListenersTick === 'number') {\n      cancelAnimationFrame(this.initializeListenersTick);\n    }\n  }\n\n  triggerUpdateToListeners = (\n    state: Viewport,\n    { scrollDidUpdate, dimensionsDidUpdate }: ViewportCollectorUpdateOptions,\n    options?: { isIdle?: boolean; shouldInitialize?: boolean },\n  ) => {\n    const getOverallDuration = createPerformanceMarker();\n    const { isIdle, shouldInitialize } = Object.assign(\n      { isIdle: false, shouldInitialize: false },\n      options,\n    );\n    let updatableListeners = this.listeners.filter(\n      ({\n        notifyScroll,\n        notifyDimensions,\n        notifyOnlyWhenIdle,\n        skippedIterations,\n        initialized,\n      }) => {\n        const needsUpdate = skippedIterations > 0;\n        if (notifyOnlyWhenIdle() !== isIdle && !needsUpdate) {\n          return false;\n        }\n        if (shouldInitialize && !initialized) {\n          return true;\n        }\n        const updateForScroll = notifyScroll() && scrollDidUpdate;\n        const updateForDimensions = notifyDimensions() && dimensionsDidUpdate;\n        return updateForScroll || updateForDimensions;\n      },\n    );\n    if (this.props.experimentalSchedulerEnabled) {\n      if (!isIdle) {\n        const budget = 16 / updatableListeners.length;\n        updatableListeners = updatableListeners.filter(listener => {\n          const skip = listener.initialized\n            ? shouldSkipIteration(listener, budget)\n            : false;\n          if (skip) {\n            listener.skippedIterations++;\n            return false;\n          }\n          listener.skippedIterations = 0;\n          return true;\n        });\n      }\n    }\n    const layouts = updatableListeners.map(\n      ({ recalculateLayoutBeforeUpdate }) => {\n        if (recalculateLayoutBeforeUpdate) {\n          const getDuration = createPerformanceMarker();\n          const layoutState = recalculateLayoutBeforeUpdate(state);\n          return [layoutState, getDuration()] as const;\n        }\n        return null;\n      },\n    );\n    let overallJSHandlerTotalCost = 0;\n    updatableListeners.forEach((listener, index) => {\n      const { handler, averageExecutionCost, iterations } = listener;\n      const [layout, layoutCost] = layouts[index] || [null, 0];\n\n      const getDuration = createPerformanceMarker();\n      handler(state, layout);\n      const totalCost = layoutCost + getDuration();\n      const diff = totalCost - averageExecutionCost;\n      const i = iterations + 1;\n\n      listener.averageExecutionCost = averageExecutionCost + diff / i;\n      listener.iterations = i;\n      listener.initialized = true;\n      overallJSHandlerTotalCost += totalCost;\n    });\n    if (\n      this.props.experimentalSchedulerLayoutCalculatorEnabled &&\n      updatableListeners.length\n    ) {\n      setTimeout(() => {\n        const diffPerHandler =\n          (getOverallDuration() - overallJSHandlerTotalCost) /\n          updatableListeners.length;\n        updatableListeners.forEach(listener => {\n          listener.averageExecutionCost =\n            listener.averageExecutionCost +\n            diffPerHandler / listener.iterations;\n        });\n      }, 0);\n    }\n  };\n\n  addViewportChangeListener = (\n    handler: ViewportChangeHandler,\n    options: ViewportChangeOptions,\n  ) => {\n    this.listeners.push({\n      handler,\n      iterations: 0,\n      averageExecutionCost: 0,\n      skippedIterations: 0,\n      initialized: false,\n      ...options,\n    });\n    this.handleListenerUpdate();\n  };\n\n  scheduleReinitializeChangeHandler = (h: ViewportChangeHandler) => {\n    const listener = this.listeners.find(({ handler }) => handler === h);\n    if (listener && listener.initialized) {\n      listener.initialized = false;\n      this.handleListenerUpdate();\n    }\n  };\n\n  removeViewportChangeListener = (h: ViewportChangeHandler) => {\n    this.listeners = this.listeners.filter(({ handler }) => handler !== h);\n    this.handleListenerUpdate();\n  };\n\n  handleListenerUpdate() {\n    if (this.updateListenersTick === undefined) {\n      this.updateListenersTick = setTimeout(() => {\n        const nextState = this.listeners.length !== 0;\n        if (this.state.hasListeners !== nextState) {\n          this.setState({\n            hasListeners: this.listeners.length !== 0,\n          });\n        }\n        this.updateListenersTick = undefined;\n      }, 1);\n    }\n    if (this.initializeListenersTick === undefined) {\n      this.initializeListenersTick = requestAnimationFrame(() => {\n        if (\n          this.collector.current &&\n          this.collector.current.syncedStateOnce &&\n          this.listeners.some(l => !l.initialized)\n        ) {\n          this.triggerUpdateToListeners(\n            this.collector.current.getPropsFromState(),\n            {\n              dimensionsDidUpdate: false,\n              scrollDidUpdate: false,\n            },\n            {\n              isIdle: false,\n              shouldInitialize: true,\n            },\n          );\n        }\n        this.initializeListenersTick = undefined;\n      });\n    }\n  }\n\n  private collector = React.createRef<ViewportCollector>();\n  private getCurrentDefaultViewport = createFallbackViewportRequester();\n  private contextValue = {\n    addViewportChangeListener: this.addViewportChangeListener,\n    removeViewportChangeListener: this.removeViewportChangeListener,\n    scheduleReinitializeChangeHandler: this.scheduleReinitializeChangeHandler,\n    getCurrentViewport: () => {\n      if (this.collector.current && this.collector.current.syncedStateOnce) {\n        return this.collector.current.getPropsFromState();\n      }\n      return this.getCurrentDefaultViewport();\n    },\n    hasRootProviderAsParent: true,\n    version: '__VERSION__',\n  };\n\n  renderChildren = (props: {\n    hasRootProviderAsParent: boolean;\n    version: string;\n  }) => {\n    if (props.hasRootProviderAsParent) {\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        props.version !== '__VERSION__'\n      ) {\n        console.warn(\n          `react-viewport-utils: Two different versions of the react-viewport-utils library are used in the same react tree. This can lead to unexpected results as the versions might not be compatible.\nThe <ViewportProvider> of version ${props.version} is currently used, another <ViewportProvider> of version __VERSION__ was detected but is ignored.\nThis is most probably due to some dependencies that use different versions of the react-viewport-utils library. You can check if an update is possible.`,\n        );\n      }\n      return this.props.children;\n    }\n    return (\n      <React.Fragment>\n        {this.state.hasListeners && (\n          <ViewportCollector\n            ref={this.collector}\n            onUpdate={this.triggerUpdateToListeners}\n            onIdledUpdate={(state, updates) =>\n              this.triggerUpdateToListeners(state, updates, { isIdle: true })\n            }\n          />\n        )}\n        <ViewportContext.Provider value={this.contextValue}>\n          {this.props.children}\n        </ViewportContext.Provider>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <ViewportContext.Consumer>{this.renderChildren}</ViewportContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { ViewportContext } from './ViewportProvider';\nimport {\n  createEmptyDimensionState,\n  createEmptyScrollState,\n} from './ViewportCollector';\nimport {\n  Scroll,\n  Dimensions,\n  Viewport,\n  ViewportChangeHandler,\n  ViewportChangeOptions,\n  PriorityType,\n} from './types';\nimport {\n  warnNoContextAvailable,\n  requestAnimationFrame,\n  cancelAnimationFrame,\n} from './utils';\n\ninterface ChildProps {\n  scroll: Scroll | null;\n  dimensions: Dimensions | null;\n}\n\ninterface State extends ChildProps {}\n\ninterface Props {\n  children?: (props: ChildProps) => React.ReactNode;\n  onUpdate?: (props: ChildProps, layoutSnapshot: unknown) => void;\n  recalculateLayoutBeforeUpdate?: (props: ChildProps) => unknown;\n  disableScrollUpdates: boolean;\n  disableDimensionsUpdates: boolean;\n  deferUpdateUntilIdle: boolean;\n  priority: PriorityType;\n}\n\ninterface Context {\n  addViewportChangeListener: (\n    handler: ViewportChangeHandler,\n    options: ViewportChangeOptions,\n  ) => void;\n  removeViewportChangeListener: (handler: ViewportChangeHandler) => void;\n  scheduleReinitializeChangeHandler: (handler: ViewportChangeHandler) => void;\n  hasRootProviderAsParent: boolean;\n  getCurrentViewport: () => Viewport;\n  version: string;\n}\n\nexport default class ObserveViewport extends React.Component<Props, State> {\n  private removeViewportChangeListener?: (\n    handler: ViewportChangeHandler,\n  ) => void;\n  private scheduleReinitializeChangeHandler?: (\n    handler: ViewportChangeHandler,\n  ) => void;\n\n  private tickId?: number;\n  private nextViewport?: Viewport;\n\n  static defaultProps: Props = {\n    disableScrollUpdates: false,\n    disableDimensionsUpdates: false,\n    deferUpdateUntilIdle: false,\n    priority: 'normal',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      scroll: createEmptyScrollState(),\n      dimensions: createEmptyDimensionState(),\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const dimensionsBecameActive =\n      !this.props.disableDimensionsUpdates &&\n      prevProps.disableDimensionsUpdates;\n    const scrollBecameActive =\n      !this.props.disableScrollUpdates && prevProps.disableScrollUpdates;\n    if (\n      typeof this.scheduleReinitializeChangeHandler === 'function' &&\n      (dimensionsBecameActive || scrollBecameActive)\n    ) {\n      this.scheduleReinitializeChangeHandler(this.handleViewportUpdate);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.removeViewportChangeListener) {\n      this.removeViewportChangeListener(this.handleViewportUpdate);\n    }\n    this.removeViewportChangeListener = undefined;\n    this.scheduleReinitializeChangeHandler = undefined;\n    if (typeof this.tickId === 'number') {\n      cancelAnimationFrame(this.tickId);\n    }\n  }\n\n  handleViewportUpdate = (viewport: Viewport, layoutSnapshot: unknown) => {\n    if (this.props.onUpdate) {\n      this.props.onUpdate(viewport, layoutSnapshot);\n    }\n\n    if (this.props.children) {\n      this.syncState(viewport);\n    }\n  };\n\n  syncState(nextViewport: Viewport) {\n    this.nextViewport = nextViewport;\n    if (this.tickId === undefined) {\n      this.tickId = requestAnimationFrame(() => {\n        if (this.nextViewport) {\n          this.setState(this.nextViewport);\n        }\n        this.tickId = undefined;\n        this.nextViewport = undefined;\n      });\n    }\n  }\n\n  get optionNotifyScroll(): boolean {\n    return !this.props.disableScrollUpdates;\n  }\n\n  get optionNotifyDimensions(): boolean {\n    return !this.props.disableDimensionsUpdates;\n  }\n\n  registerViewportListeners = ({\n    addViewportChangeListener,\n    removeViewportChangeListener,\n    scheduleReinitializeChangeHandler,\n    hasRootProviderAsParent,\n    getCurrentViewport,\n  }: Context): React.ReactNode => {\n    if (!hasRootProviderAsParent) {\n      warnNoContextAvailable('ObserveViewport');\n      return null;\n    }\n\n    const shouldRegister =\n      this.removeViewportChangeListener !== removeViewportChangeListener;\n\n    if (!shouldRegister) {\n      return null;\n    }\n\n    if (this.removeViewportChangeListener) {\n      this.removeViewportChangeListener(this.handleViewportUpdate);\n    }\n\n    this.removeViewportChangeListener = removeViewportChangeListener;\n    this.scheduleReinitializeChangeHandler = scheduleReinitializeChangeHandler;\n    addViewportChangeListener(this.handleViewportUpdate, {\n      notifyScroll: () => !this.props.disableScrollUpdates,\n      notifyDimensions: () => !this.props.disableDimensionsUpdates,\n      notifyOnlyWhenIdle: () => this.props.deferUpdateUntilIdle,\n      priority: () => this.props.priority,\n      recalculateLayoutBeforeUpdate: (viewport: Viewport) => {\n        if (this.props.recalculateLayoutBeforeUpdate) {\n          return this.props.recalculateLayoutBeforeUpdate(viewport);\n        }\n        return null;\n      },\n    });\n\n    if (this.props.children) {\n      this.syncState(getCurrentViewport());\n    }\n\n    return null;\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <React.Fragment>\n        <ViewportContext.Consumer>\n          {this.registerViewportListeners}\n        </ViewportContext.Consumer>\n        {children ? children(this.state) : null}\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IScroll, IDimensions } from './index';\nimport ObserveViewport from './ObserveViewport';\nimport { PriorityType } from './types';\n\ninterface InjectedProps {\n  scroll?: IScroll | null;\n  dimensions?: IDimensions | null;\n}\n\ntype OmitValues = 'scroll' | 'dimensions';\n\ninterface IOptions {\n  omit?: OmitValues[];\n  deferUpdateUntilIdle?: boolean;\n  priority?: PriorityType;\n}\n\nexport default function connect(options: IOptions = {}) {\n  const deferUpdateUntilIdle = Boolean(options.deferUpdateUntilIdle);\n  const omit = options.omit || [];\n  const shouldOmitScroll = omit.indexOf('scroll') !== -1;\n  const shouldOmitDimensions = omit.indexOf('dimensions') !== -1;\n  return <P extends object>(\n    WrappedComponent: React.ComponentType<P & InjectedProps>,\n  ): React.ComponentClass<P> => {\n    const displayName =\n      WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    return class ConnectViewport extends React.Component<P, {}> {\n      static displayName = `connectViewport(${displayName})`;\n\n      render() {\n        return (\n          <ObserveViewport\n            disableScrollUpdates={shouldOmitScroll}\n            disableDimensionsUpdates={shouldOmitDimensions}\n            deferUpdateUntilIdle={deferUpdateUntilIdle}\n            priority={options.priority}\n          >\n            {({ scroll, dimensions }) => (\n              <WrappedComponent\n                scroll={scroll}\n                dimensions={dimensions}\n                {...this.props}\n              />\n            )}\n          </ObserveViewport>\n        );\n      }\n    };\n  };\n}\n","import * as React from 'react';\n\nimport {\n  shallowEqualRect,\n  requestAnimationFrame,\n  cancelAnimationFrame,\n} from './utils';\nimport { Rect } from './types';\n\ninterface Props {\n  /**\n   * Called every time when an update is detected. Same as\n   * using `onUpdate` but it requires to render a node.\n   */\n  children?: (rect: Rect | null) => React.ReactNode;\n  /**\n   * The reference to the node that should be observed\n   */\n  node: React.RefObject<HTMLElement>;\n  /**\n   * Called once a node is mounted for the first time.\n   */\n  onInit?: (rect: Rect) => void;\n  /**\n   * Called every time when an update is detected. Same as\n   * using `children` but it does not allow to render a node.\n   */\n  onUpdate?: (rect: Rect) => void;\n}\n\ninterface IState extends Rect {\n  isInitialized: boolean;\n}\n\n/**\n * @deprecated Use useRect or useRectEffect instead as it provides better performance.\n */\nexport default class ObserveBoundingClientRect extends React.PureComponent<\n  Props,\n  IState\n> {\n  private tickId?: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      height: 0,\n      width: 0,\n      isInitialized: false,\n    };\n  }\n\n  componentDidMount() {\n    this.tick(this.syncState);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: IState) {\n    const rect = this.getRectFromState();\n    const prevRect = this.getRectFromState(prevState);\n    if (!rect) {\n      return;\n    }\n\n    if (this.props.onInit) {\n      if (!prevState.isInitialized && this.state.isInitialized) {\n        this.props.onInit(rect);\n      }\n    }\n\n    if (this.props.onUpdate) {\n      if (prevRect === null || !shallowEqualRect(rect, prevRect)) {\n        this.props.onUpdate(rect);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (typeof this.tickId === 'number') {\n      cancelAnimationFrame(this.tickId);\n    }\n  }\n\n  tick(updater: Function) {\n    this.tickId = requestAnimationFrame(() => {\n      updater();\n      this.tick(updater);\n    });\n  }\n\n  getRectFromState(state: IState = this.state): Rect | null {\n    if (!state.isInitialized) {\n      return null;\n    }\n\n    return {\n      height: state.height,\n      width: state.width,\n      top: state.top,\n      bottom: state.bottom,\n      left: state.left,\n      right: state.right,\n    };\n  }\n\n  getRectFromNode(): Rect | null {\n    const { node } = this.props;\n    if (!node || !node.current) {\n      return null;\n    }\n\n    const rect = node.current.getBoundingClientRect();\n    return {\n      height: rect.height,\n      width: rect.width,\n      top: rect.top,\n      bottom: rect.bottom,\n      left: rect.left,\n      right: rect.right,\n    };\n  }\n\n  syncState = () => {\n    const { node } = this.props;\n    if (!node || !node.current) {\n      return;\n    }\n    const rect = this.getRectFromNode();\n\n    if (rect && !this.state.isInitialized) {\n      this.setState({ ...rect, isInitialized: true });\n      return;\n    }\n\n    this.setState(rect);\n  };\n\n  render() {\n    const { children } = this.props;\n    return typeof children === 'function'\n      ? children(this.getRectFromState())\n      : null;\n  }\n}\n","import {\n  useContext,\n  useEffect,\n  useState,\n  RefObject,\n  useRef,\n  DependencyList,\n} from 'react';\n\nimport { ViewportContext } from './ViewportProvider';\nimport { Viewport, Scroll, Dimensions, PriorityType, Rect } from './types';\nimport { warnNoContextAvailable } from './utils';\n\ninterface ViewPortEffectOptions<T> extends FullOptions {\n  recalculateLayoutBeforeUpdate?: (viewport: Viewport) => T;\n}\n\ninterface FullOptions extends IOptions {\n  disableScrollUpdates?: boolean;\n  disableDimensionsUpdates?: boolean;\n}\n\ninterface IOptions {\n  [key: string]: unknown;\n  deferUpdateUntilIdle?: boolean;\n  priority?: PriorityType;\n}\ninterface IEffectOptions<T> extends IOptions {\n  recalculateLayoutBeforeUpdate?: (viewport: Viewport) => T;\n}\n\nexport function useViewportEffect<T = unknown>(\n  handleViewportChange: (viewport: Viewport, snapshot: T) => void,\n  deps?: DependencyList,\n): void;\n\nexport function useViewportEffect<T = unknown>(\n  handleViewportChange: (viewport: Viewport, snapshot: T) => void,\n  options?: ViewPortEffectOptions<T>,\n  deps?: DependencyList,\n): void;\n\nexport function useViewportEffect<T>(\n  handleViewportChange: (viewport: Viewport, snapshot: T) => void,\n  second?: any,\n  third?: any,\n) {\n  const {\n    addViewportChangeListener,\n    removeViewportChangeListener,\n    hasRootProviderAsParent,\n  } = useContext(ViewportContext);\n  const { options, deps } = sortArgs(second, third);\n  const memoOptions = useOptions(options);\n\n  useEffect(() => {\n    if (!hasRootProviderAsParent) {\n      warnNoContextAvailable('useViewport');\n      return;\n    }\n    addViewportChangeListener(handleViewportChange, {\n      notifyScroll: () => !memoOptions.disableScrollUpdates,\n      notifyDimensions: () => !memoOptions.disableDimensionsUpdates,\n      notifyOnlyWhenIdle: () => Boolean(memoOptions.deferUpdateUntilIdle),\n      priority: () => memoOptions.priority || 'normal',\n      recalculateLayoutBeforeUpdate: (...args: any) =>\n        memoOptions.recalculateLayoutBeforeUpdate\n          ? memoOptions.recalculateLayoutBeforeUpdate(...args)\n          : null,\n    });\n    return () => removeViewportChangeListener(handleViewportChange);\n  }, [\n    addViewportChangeListener || null,\n    removeViewportChangeListener || null,\n    ...deps,\n  ]);\n}\n\nexport const useViewport = (options: FullOptions = {}): Viewport => {\n  const { getCurrentViewport } = useContext(ViewportContext);\n  const [state, setViewport] = useState(getCurrentViewport());\n  useViewportEffect(viewport => setViewport(viewport), options);\n\n  return state;\n};\n\nexport function useScrollEffect<T = unknown>(\n  effect: (scroll: Scroll, snapshot: T) => void,\n  deps?: DependencyList,\n): void;\n\nexport function useScrollEffect<T = unknown>(\n  effect: (scroll: Scroll, snapshot: T) => void,\n  options: IEffectOptions<T>,\n  deps?: DependencyList,\n): void;\n\nexport function useScrollEffect<T = unknown>(\n  effect: (scroll: Scroll, snapshot: T) => void,\n  second?: any,\n  third?: any,\n) {\n  const { options, deps } = sortArgs(second, third);\n  useViewportEffect(\n    (viewport, snapshot: T) => effect(viewport.scroll, snapshot),\n    {\n      disableDimensionsUpdates: true,\n      ...options,\n    },\n    deps,\n  );\n}\n\nexport const useScroll = (options: IOptions = {}): Scroll => {\n  const { scroll } = useViewport({\n    disableDimensionsUpdates: true,\n    ...options,\n  });\n\n  return scroll;\n};\n\nexport function useDimensionsEffect<T = unknown>(\n  effect: (dimensions: Dimensions, snapshot: T) => void,\n  deps?: DependencyList,\n): void;\n\nexport function useDimensionsEffect<T = unknown>(\n  effect: (dimensions: Dimensions, snapshot: T) => void,\n  options: IEffectOptions<T>,\n  deps?: DependencyList,\n): void;\n\nexport function useDimensionsEffect<T = unknown>(\n  effect: (dimensions: Dimensions, snapshot: T) => void,\n  second: any,\n  third?: any,\n) {\n  const { options, deps } = sortArgs(second, third);\n  useViewportEffect(\n    (viewport, snapshot: T) => effect(viewport.dimensions, snapshot),\n    {\n      disableScrollUpdates: true,\n      ...options,\n    },\n    deps,\n  );\n}\n\nexport const useDimensions = (options: IOptions = {}): Dimensions => {\n  const { dimensions } = useViewport({\n    disableScrollUpdates: true,\n    ...options,\n  });\n\n  return dimensions;\n};\n\nexport function useRectEffect(\n  effect: (rect: Rect | null) => void,\n  ref: RefObject<HTMLElement>,\n  deps?: DependencyList,\n): void;\n\nexport function useRectEffect(\n  effect: (rect: Rect | null) => void,\n  ref: RefObject<HTMLElement>,\n  options: FullOptions,\n  deps?: DependencyList,\n): void;\n\nexport function useRectEffect(\n  effect: (rect: Rect | null) => void,\n  ref: RefObject<HTMLElement>,\n  third?: any,\n  fourth?: any,\n) {\n  const { options, deps } = sortArgs(third, fourth);\n  useViewportEffect(\n    (_, snapshot) => effect(snapshot),\n    {\n      ...options,\n      recalculateLayoutBeforeUpdate: () =>\n        ref.current ? ref.current.getBoundingClientRect() : null,\n    },\n    [ref.current, ...deps],\n  );\n}\n\nexport function useRect(\n  ref: RefObject<HTMLElement>,\n  deps?: DependencyList,\n): Rect | null;\n\nexport function useRect(\n  ref: RefObject<HTMLElement>,\n  options: FullOptions,\n  deps?: DependencyList,\n): Rect | null;\n\nexport function useRect(\n  ref: RefObject<HTMLElement>,\n  second: any,\n  third?: any,\n): Rect | null {\n  const { options, deps } = sortArgs(second, third);\n  return useLayoutSnapshot(\n    () => (ref.current ? ref.current.getBoundingClientRect() : null),\n    options,\n    [ref.current, ...deps],\n  );\n}\n\nexport function useLayoutSnapshot<T = unknown>(\n  recalculateLayoutBeforeUpdate: (viewport: Viewport) => T,\n  deps?: DependencyList,\n): null | T;\n\nexport function useLayoutSnapshot<T = unknown>(\n  recalculateLayoutBeforeUpdate: (viewport: Viewport) => T,\n  options?: FullOptions,\n  deps?: DependencyList,\n): null | T;\n\nexport function useLayoutSnapshot<T = unknown>(\n  recalculateLayoutBeforeUpdate: (viewport: Viewport) => T,\n  second?: any,\n  third?: any,\n): null | T {\n  const { options, deps } = sortArgs(second, third);\n  const [state, setSnapshot] = useState<null | T>(null);\n  useViewportEffect(\n    (_, snapshot: T) => setSnapshot(snapshot),\n    {\n      ...options,\n      recalculateLayoutBeforeUpdate,\n    },\n    deps,\n  );\n\n  return state;\n}\n\nconst useOptions = <T>(o: ViewPortEffectOptions<T>) => {\n  const optionsRef = useRef<ViewPortEffectOptions<T>>(Object.create(null));\n  for (const key of Object.keys(optionsRef.current)) {\n    delete optionsRef.current[key];\n  }\n  Object.assign(optionsRef.current, o);\n\n  return optionsRef.current;\n};\n\nconst sortArgs = (\n  first: DependencyList | IOptions,\n  second?: DependencyList,\n) => {\n  let options = {};\n  if (first && !Array.isArray(first)) {\n    options = first;\n  }\n  let deps = second || [];\n  if (first && Array.isArray(first)) {\n    deps = first;\n  }\n  return { deps, options };\n};\n","export { default as ViewportProvider } from './ViewportProvider';\nexport { default as connectViewport } from './ConnectViewport';\nexport { default as ObserveBoundingClientRect } from './ObserveBoundingClientRect';\nexport { default as ObserveViewport } from './ObserveViewport';\nexport {\n  useScroll,\n  useScrollEffect,\n  useDimensions,\n  useDimensionsEffect,\n  useViewport,\n  useViewportEffect,\n  useLayoutSnapshot,\n  useRect,\n  useRectEffect,\n} from './hooks';\nexport { requestAnimationFrame, cancelAnimationFrame } from './utils';\nexport {\n  Rect as IRect,\n  Scroll as IScroll,\n  Dimensions as IDimensions,\n  Rect,\n  Scroll,\n  Dimensions,\n} from './types';\n\nexport const VERSION = '__VERSION__';\n"]},"metadata":{},"sourceType":"module"}