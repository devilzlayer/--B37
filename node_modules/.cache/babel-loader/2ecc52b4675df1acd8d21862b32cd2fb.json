{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Downloads/usportproject 2/src/component/FormField.js\";\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport '../assets/scss/FormField.scss';\n\nfunction FormField(props) {\n  const {\n    field,\n    input\n  } = props;\n  const [eye, setEye] = useState(false); // ===========\n\n  const onVision = () => {\n    if (input.ref.current.type === 'password') {\n      input.ref.current.type = 'text';\n      setEye(true);\n      return false;\n    }\n\n    input.ref.current.type = 'password';\n    setEye(false);\n  }; // ==========\n\n\n  let is_valid = true;\n\n  if (props.isValid !== undefined) {\n    is_valid = props.isValid;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(`form-field ${input.className}`, {\n      'form-field--invalid': !is_valid\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, field.label ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: input.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, field.label) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('form-field--input-wrap', {\n      'with-arrow': field.select\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, field.select ? /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('input-like', {\n      'has-value': input.value,\n      'disabled': input.disabled\n    }),\n    onClick: e => !input.disabled && field.onClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, field.value ? field.value() : input.value || input.placeholder) : field.displayOnly ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"input-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, input.value) : [/*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    key: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  })),\n  /*#__PURE__*/\n  // ===================== JEAN ================== //\n  React.createElement(\"span\", {\n    className: input.name,\n    key: 'icon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), input.type === \"password\" && /*#__PURE__*/React.createElement(\"span\", {\n    className: `eye${eye ? ' vision' : ''}`,\n    key: 'eye',\n    onClick: () => onVision(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }) // ===================== JEAN ================== //\n  ]));\n}\n\nexport default FormField;","map":{"version":3,"sources":["/Users/cramj/Downloads/usportproject 2/src/component/FormField.js"],"names":["React","useState","cx","FormField","props","field","input","eye","setEye","onVision","ref","current","type","is_valid","isValid","undefined","className","label","id","select","value","disabled","e","onClick","placeholder","displayOnly","name"],"mappings":"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","sourcesContent":["import React , {   useState} from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport '../assets/scss/FormField.scss';\r\n\r\nfunction FormField (props) {\r\n\r\n\tconst { field, input } = props;\r\n\tconst [ eye , setEye ] = useState(false)\r\n\t// ===========\r\n\tconst onVision =() =>{\r\n\t\tif(input.ref.current.type === 'password'){\r\n\t\t\tinput.ref.current.type = 'text'\r\n\t\t\tsetEye(true)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tinput.ref.current.type = 'password'\r\n\t\tsetEye(false)\r\n\t}\r\n\t// ==========\r\n\r\n\tlet is_valid = true;\r\n\tif (props.isValid !== undefined) {\r\n\t\tis_valid = props.isValid;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={cx(`form-field ${input.className}`, { 'form-field--invalid': !is_valid })}>\r\n\t\t\t{field.label ? (\r\n\t\t\t<label htmlFor={input.id}>{field.label}</label>\r\n\t\t\t) : null}\r\n\t\t\t<div className={cx('form-field--input-wrap', { 'with-arrow': field.select })}>\r\n\t\t\t{field.select ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={cx('input-like', {\r\n\t\t\t\t\t\t'has-value': input.value,\r\n\t\t\t\t\t\t'disabled': input.disabled\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tonClick={e => !input.disabled && field.onClick(e)}>\r\n\t\t\t\t\t{field.value ? field.value() : (input.value || input.placeholder)}\r\n\t\t\t\t</div>\r\n\t\t\t) : field.displayOnly ? (\r\n\t\t\t\t<p className=\"input-p\">{input.value}</p>\r\n\t\t\t) : [\r\n\t\t\t\t<input {...input} key={\"input\"}  />,\r\n\t\t\t\t// ===================== JEAN ================== //\r\n\t\t\t\t<span className={input.name} key={'icon'} />,\r\n\t\t\t\tinput.type === \"password\" && \r\n\t\t\t\t\t<span className={`eye${eye ? ' vision': ''}`} key={'eye'} onClick={()=> onVision()}/>,\r\n\t\t\t\t// ===================== JEAN ================== //\r\n\t\t\t]}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default FormField;\r\n"]},"metadata":{},"sourceType":"module"}