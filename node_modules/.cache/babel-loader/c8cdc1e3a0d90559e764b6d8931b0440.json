{"ast":null,"code":"var _jsxFileName = \"/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/profile/transferhistory/transferrecord.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { map, head, last, split, isEmpty } from 'lodash';\nimport { Service } from '../';\n\nconst CardItem = props => {\n  const {\n    label,\n    subLabel,\n    time,\n    value,\n    status,\n    className\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `transfer-record-card-item ${className ? className : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cl-item transfer-record-card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cl-card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, label), subLabel && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }\n  }, subLabel)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cl-card-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cl-item transfer-record-card-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cl-card-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"\\u91D1\\u989D: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, value)), /*#__PURE__*/React.createElement(\"p\", {\n    className: `cl-card-status ${status === \"成功\" ? \"success\" : \"failure\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, status))));\n};\n\nconst TransferRecord = props => {\n  const {\n    id,\n    refresh,\n    onStop\n  } = props;\n  const [items, setItems] = useState([]);\n  const [load, setLoad] = useState(false);\n  useEffect(() => {\n    if (refresh == id) {\n      setLoad(true);\n    }\n  }, [refresh]);\n  useEffect(() => {\n    const fetch = () => {\n      // console.log(User.read())\n      const req = Service.Transaction.read({ ...Service.User.read(),\n        record_type: \"transfer\",\n        type: \"record_list\"\n      });\n      req.promise.then(result => {\n        // console.log(result);\n        if (result.status === 1) {\n          setItems(result.info);\n          setLoad(false);\n          onStop();\n        }\n      }, e => {\n        console.log(\"Unable to response:\", e);\n      });\n    };\n\n    fetch();\n  }, [load]);\n\n  if (!isEmpty(items)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transfer-history-card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, map(items, (obj, i) => {\n      let reg = split(obj.platName, \"-->\", 2);\n      return /*#__PURE__*/React.createElement(CardItem, {\n        key: i,\n        index: i,\n        label: head(reg),\n        subLabel: last(reg),\n        time: obj.requestTime,\n        value: obj.amount,\n        status: obj.tranStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      });\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"\\u6682\\u65E0\\u8BB0\\u5F55\"));\n};\n\nexport default TransferRecord;","map":{"version":3,"sources":["/Users/cramj/Documents/New PWA/ubet-project (1)/src/view/profile/transferhistory/transferrecord.js"],"names":["React","useEffect","useState","map","head","last","split","isEmpty","Service","CardItem","props","label","subLabel","time","value","status","className","TransferRecord","id","refresh","onStop","items","setItems","load","setLoad","fetch","req","Transaction","read","User","record_type","type","promise","then","result","info","e","console","log","obj","i","reg","platName","requestTime","amount","tranStatus"],"mappings":"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","sourcesContent":["import React  ,{ useEffect, useState }from \"react\";\r\nimport { map , head,  last , split,isEmpty } from 'lodash'\r\n\r\nimport { Service } from '../'\r\n\r\n\r\n\r\nconst CardItem = (props) => {\r\n    const { label, subLabel, time, value, status, className } = props;\r\n  \r\n    return (\r\n      <div className={`transfer-record-card-item ${className ? className : \"\"}`}>\r\n        <div className=\"cl-item transfer-record-card-text\">\r\n          <p className=\"cl-card-text\">\r\n            <span>{label}</span>\r\n            {subLabel && <span>{subLabel}</span>}\r\n          </p>\r\n          <p className=\"cl-card-time\">{time}</p>\r\n        </div>\r\n        <div className=\"cl-item transfer-record-card-value\">\r\n          <p className=\"cl-card-amount\">\r\n            金额: <span>{value}</span>\r\n          </p>\r\n          <p\r\n            className={`cl-card-status ${\r\n              status === \"成功\" ? \"success\" : \"failure\"\r\n            }`}\r\n          >\r\n            {/* <span>\t{status? \"成功\" : \"失败\"}</span> */}\r\n            <span>{status}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst TransferRecord = (props) => {\r\n    const { id ,refresh , onStop } = props\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [load, setLoad] = useState(false);\r\n\r\n    useEffect(() =>{\r\n      if(refresh == id ){\r\n        setLoad(true)\r\n      }\r\n    },[refresh])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetch = () => {\r\n        // console.log(User.read())\r\n\r\n          const req = Service.Transaction.read({\r\n              ...Service.User.read(),\r\n              record_type: \"transfer\",\r\n              type: \"record_list\",\r\n          });\r\n\r\n          req.promise.then((result) => {\r\n              // console.log(result);\r\n              if (result.status === 1) {\r\n                  setItems(result.info);\r\n                  setLoad(false);\r\n                  onStop()\r\n\r\n              }\r\n          },(e) => {\r\n              console.log(\"Unable to response:\", e);\r\n          })\r\n        };\r\n        fetch();\r\n    }, [load]);\r\n\r\n    if(!isEmpty(items)){\r\n        return  <div className=\"transfer-history-card-body\">\r\n                    {\r\n                    map(items, (obj, i) => {\r\n                        let reg = split(obj.platName, \"-->\", 2);\r\n                        return (\r\n                        <CardItem\r\n                            key={i}\r\n                            index={i}\r\n                            label={head(reg)}\r\n                            subLabel={last(reg)}\r\n                            time={obj.requestTime}\r\n                            value={obj.amount}\r\n                            status={obj.tranStatus}\r\n                          />\r\n                        );\r\n                    })\r\n                    }\r\n\r\n                </div>\r\n    }\r\n\r\n    return  <div className=\"no-transactions\">\r\n                <div className=\"image-box\" />\r\n                <span>暂无记录</span>\r\n            </div>\r\n\r\n\r\n}\r\n\r\nexport default TransferRecord"]},"metadata":{},"sourceType":"module"}